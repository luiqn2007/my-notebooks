{"ID":"20240318043121-t301ixz","Spec":"1","Type":"NodeDocument","Properties":{"icon":"jclasslib256x256.png","id":"20240318043121-t301ixz","title":"AdviceAdapter","type":"doc","updated":"20240427152812"},"Children":[{"ID":"20240318113526-oewkfyd","Type":"NodeParagraph","Properties":{"id":"20240318113526-oewkfyd","style":"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);","updated":"20240318113537"},"Children":[{"Type":"NodeText","Data":"Maven 库："},{"Type":"NodeTextMark","Properties":{"parent-style":"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);"},"TextMarkType":"code","TextMarkTextContent":"org.ow2.asm:asm-commons"},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);\"}"},{"Type":"NodeText","Data":"​"}]},{"ID":"20240318043121-xftx9yy","Type":"NodeParagraph","Properties":{"id":"20240318043121-xftx9yy","updated":"20240318112928"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"AdviceAdapter"},{"Type":"NodeText","Data":"​ 继承自 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"MethodVisitor"},{"Type":"NodeText","Data":"​，可以方便的在方法的开头和结尾插入代码："}]},{"ID":"20240318112928-af35x4b","Type":"NodeList","ListData":{},"Properties":{"id":"20240318112928-af35x4b","updated":"20240318113108"},"Children":[{"ID":"20240318112929-k0450qn","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240318112929-k0450qn","updated":"20240318112929"},"Children":[{"ID":"20240318112929-ytinaac","Type":"NodeParagraph","Properties":{"id":"20240318112929-ytinaac","updated":"20240318112959"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"onMethodEnter"},{"Type":"NodeText","Data":"​：在方法开头或构造器 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"super()"},{"Type":"NodeText","Data":"​ 之后插入"}]}]},{"ID":"20240318112959-gakwk0a","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240318112959-gakwk0a","updated":"20240318113108"},"Children":[{"ID":"20240318112959-lr0qg9w","Type":"NodeParagraph","Properties":{"id":"20240318112959-lr0qg9w","updated":"20240318113108"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"onMethodExit"},{"Type":"NodeText","Data":"​：在方法正常退出（每个 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"RETURN"},{"Type":"NodeText","Data":"​ 类型指令）或异常退出（每个 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"ATHROW"},{"Type":"NodeText","Data":"​ 指令）时插入"}]}]}]},{"ID":"20240427152700-i9yw8x4","Type":"NodeParagraph","Properties":{"id":"20240427152700-i9yw8x4","style":"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);","updated":"20240427152812"},"Children":[{"Type":"NodeText","Data":"例：使用 "},{"Type":"NodeTextMark","Properties":{"parent-style":"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);"},"TextMarkType":"code","TextMarkTextContent":"AdviceAdapter"},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);\"}"},{"Type":"NodeText","Data":"​ 添加 try-catch 结构"}]},{"ID":"20240427152727-y5jt9np","Type":"NodeParagraph","Properties":{"id":"20240427152727-y5jt9np","updated":"20240427152732"},"Children":[{"Type":"NodeText","Data":"如果想给方法增加 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"try-catch"},{"Type":"NodeText","Data":"​ 块，使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"visitTryCatchBlock"},{"Type":"NodeText","Data":"​ 增加异常表，并通过 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Label"},{"Type":"NodeText","Data":"​ 对象定位。、"}]},{"ID":"20240427152700-03onc50","Type":"NodeSuperBlock","Properties":{"id":"20240427152700-03onc50","updated":"20240427152700"},"Children":[{"Type":"NodeSuperBlockOpenMarker"},{"Type":"NodeSuperBlockLayoutMarker","Data":"col"},{"ID":"20240427152700-aqarj3y","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240427152700-aqarj3y","updated":"20240427152700"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"// 原始方法\npublic void foo() {\n    System.out.println(\"Step 1\");\n    int a = 1 / 0;\n    System.out.println(\"Step 2\");\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240427152700-jddneps","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240427152700-jddneps","updated":"20240427152700"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"// 目标方法\npublic void foo() {\n    System.out.println(\"enter foo\");\n    try {\n        System.out.println(\"Step 1\");\n        int a = 1 / 0;\n        System.out.println(\"Step 2\");\n        System.out.println(\"normal exit foo\");\n    } catch (Exception e) {\n        System.out.println(\"err exit foo\");\n        throw e;\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"Type":"NodeSuperBlockCloseMarker"}]},{"ID":"20240427152700-kov9dtq","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240427152700-kov9dtq","updated":"20240427152700"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"ClassReader cr = new ClassReader(bytes);\nClassWriter cw = new ClassWriter(ClassWriter.COMPUTE_MAXS | ClassWriter.COMPUTE_FRAMES);\nClassVisitor cv = new ClassVisitor(ASM9, cw) {\n    @Override\n    public MethodVisitor visitMethod(int access, String name, String descriptor, String signature, String[] exceptions) {\n        MethodVisitor method = super.visitMethod(access, name, descriptor, signature, exceptions);\n        if (\"foo\".equals(name)) {\n            return new AdviceAdapter(api, method, access, name, descriptor) {\n                static final String System = \"java/lang/System\";\n                static final String PrintStream = \"java/io/PrintStream\";\n                static final String PrintStreamDesc = \"Ljava/io/PrintStream;\";\n                static final String StringDesc = \"Ljava/util/String;\";\n                static final String printlnDesc = \"(\" + StringDesc + \")V\";\n          \n                private final Label start = new Label();\n\n                @Override\n                protected void onMethodEnter() {\n                    super.onMethodEnter();\n                    // System.out.println(\"enter foo\");\n                    mv.visitFieldInsn(GETSTATIC, System, \"out\", PrintStreamDesc);\n                    mv.visitLdcInsn(\"enter \" + name);\n                    mv.visitMethodInsn(INVOKEVIRTUAL, PrintStream, \"println\", printlnDesc, false);\n                    // [start] {\n                    mv.visitLabel(start);\n                }\n                @Override\n                protected void onMethodExit(int opcode) {\n                    super.onMethodExit(opcode);\n                    // System.out.println(\"normal exit foo\");\n                    if (opcode != ATHROW) onFinally(opcode);\n                }\n                @Override\n                public void visitMaxs(int maxStack, int maxLocals) {\n                    Label end = new Label();\n                    mv.visitTryCatchBlock(start, end, end, null);\n                    mv.visitLabel(end);\n                    // } [end]\n                    // System.out.println(\"err exit foo\");\n                    onFinally(ATHROW);\n                    // throw e;\n                    mv.visitInsn(ATHROW);\n                    super.visitMaxs(maxStack, maxLocals);\n                }\n\n                private void onFinally(int opcode) {\n                    mv.visitFieldInsn(GETSTATIC, System, \"out\", PrintStreamDesc);\n                    String str = opcode == ATHROW ? \"err exit \" + name : \"normal exit \" + name;\n                    mv.visitLdcInsn(str);\n                    mv.visitMethodInsn(INVOKEVIRTUAL, PrintStream, \"println\", printlnDesc, false);\n                }\n            };\n        }\n        return method;\n    }\n};\ncr.accept(cv, 0);\nreturn cw.toByteArray();\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}