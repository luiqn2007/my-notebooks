{"ID":"20240316011103-g6osazw","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f630","id":"20240316011103-g6osazw","title":"invokedynamic 指令","updated":"20240317030633"},"Children":[{"ID":"20240316011103-6z96iyx","Type":"NodeParagraph","Properties":{"id":"20240316011103-6z96iyx","updated":"20240317011014"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"invokedynamic"},{"Type":"NodeText","Data":"​ 指令由 JDK 7 开始加入，对多语言在 JVM 上"},{"Type":"NodeTextMark","TextMarkType":"inline-memo","TextMarkInlineMemoContent":"鸭子测试：如果一只鸟看起来像鸭子，游泳像鸭子，叫起来也像鸭子，那这只鸟就可以成为鸭子。_esc_newline__esc_newline_鸭子类型专注于对象能做什么，不关心对象实际类型","TextMarkTextContent":"鸭子类型"},{"Type":"NodeText","Data":"的实现提供技术支撑。"}]},{"ID":"20240317010630-9whvhpq","Type":"NodeParagraph","Properties":{"id":"20240317010630-9whvhpq","updated":"20240317030007"},"Children":[{"Type":"NodeText","Data":"该指令直到 JDK 8 才开始在 Java 中使用，用于 "},{"Type":"NodeTextMark","TextMarkType":"code block-ref","TextMarkBlockRefID":"20240317025949-njddxb9","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"lambda"},{"Type":"NodeText","Data":"​ 表达式的调用。"}]},{"ID":"20240317010802-823s8ni","Type":"NodeParagraph","Properties":{"id":"20240317010802-823s8ni","updated":"20240317011515"},"Children":[{"Type":"NodeText","Data":"传统的几个 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"invokexxx"},{"Type":"NodeText","Data":"​ 指令需要具体的参数类型才能完成调用，而 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"invokedynamic"},{"Type":"NodeText","Data":"​ 的调用过程如下："}]},{"ID":"20240317011518-y9xuyqh","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20240317011518-y9xuyqh","updated":"20240317011927"},"Children":[{"ID":"20240317011518-brmasvl","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20240317011518-brmasvl","updated":"20240317011741"},"Children":[{"ID":"20240317011518-pdjzr04","Type":"NodeParagraph","Properties":{"id":"20240317011518-pdjzr04","updated":"20240317011741"},"Children":[{"Type":"NodeText","Data":"首次执行 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"invokedynamic"},{"Type":"NodeText","Data":"​ 指令时，调用引导方法 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Bootstrap Method"},{"Type":"NodeText","Data":"​，根据该方法获取一个 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"CallSite"},{"Type":"NodeText","Data":"​ 对象。"}]}]},{"ID":"20240317011601-f5y7di1","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20240317011601-f5y7di1","updated":"20240317011927"},"Children":[{"ID":"20240317011601-xmgce4k","Type":"NodeParagraph","Properties":{"id":"20240317011601-xmgce4k","updated":"20240317011927"},"Children":[{"Type":"NodeText","Data":"从 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"CallSite"},{"Type":"NodeText","Data":"​ 获取 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"MethodType"},{"Type":"NodeText","Data":"​ 对象，该对象包含 "},{"Type":"NodeTextMark","TextMarkType":"code block-ref","TextMarkBlockRefID":"20240317011912-9nt4f7l","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"MethodHandle"},{"Type":"NodeText","Data":"​ 对象代表对一个方法的引用。"}]}]},{"ID":"20240317011653-xnrqx71","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"My4=","Num":3},"Properties":{"id":"20240317011653-xnrqx71","updated":"20240317011745"},"Children":[{"ID":"20240317011653-f667kn9","Type":"NodeParagraph","Properties":{"id":"20240317011653-f667kn9","updated":"20240317011745"},"Children":[{"Type":"NodeText","Data":"在 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"CallSite"},{"Type":"NodeText","Data":"​ 没有发生变化的情况下，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"MethodHandle"},{"Type":"NodeText","Data":"​ 可一直使用。通过 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"MethodHandle"},{"Type":"NodeText","Data":"​ 调用函数。"}]}]}]},{"ID":"20240317012902-c0b6clj","Type":"NodeParagraph","Properties":{"id":"20240317012902-c0b6clj","updated":"20240317020354"},"Children":[{"Type":"NodeText","Data":"以 Groovy 编译结果为例（新版本 Groovy 默认使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"invokedynamic"},{"Type":"NodeText","Data":"​，不需要 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"--indy"},{"Type":"NodeText","Data":"​）："}]},{"ID":"20240317013019-tltmbym","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240317013019-tltmbym","updated":"20240317020242"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z3Jvb3Z5"},{"Type":"NodeCodeBlockCode","Data":"def add(a, b) {\n    return a + b;\n}\n\nprintln add(3, 6)\nprintln add(\"xxx\", \"yyy\")\nprintln add(\"xxx\", 3)\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240317020246-kcx9i3b","Type":"NodeParagraph","Properties":{"id":"20240317020246-kcx9i3b","updated":"20240317020408"},"Children":[{"Type":"NodeText","Data":"其中，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"run"},{"Type":"NodeText","Data":"​ 函数编译结果为："}]},{"ID":"20240317020408-20lsdc1","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240317020408-20lsdc1","updated":"20240317030633"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"aload_0\naload_0\niconst_3\nbipush 6\ninvokedynamic #48, 0 // InvokeDynamic #1: invoke:(LMain;II)Ljava/lang/Object\ninvokedynamic #53, 0 // InvokeDynamic #2: invoke:(LMain;Ljava/lang/Object;)Ljava/lang/Object;\npop\n\naload_0\naload_0\nldc #55 // \"xxx\"\nldc #57 // \"yyy\"\ninvokedynamic #60, 0 // InvokeDynamic #1: invoke:(LMain;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object\ninvokedynamic #53, 0 // InvokeDynamic #2: invoke:(LMain;Ljava/lang/Object;)Ljava/lang/Object;\npop\n\naload_0\naload_0\nldc #55 // \"xxx\"\niconst_3\ninvokedynamic #63, 0 // InvokeDynamic #1: invoke:(LMain;Ljava/lang/String;I)Ljava/lang/Object\ninvokedynamic #53, 0 // InvokeDynamic #2: invoke:(LMain;Ljava/lang/Object;)Ljava/lang/Object;\n\nareturn\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240317020816-7b0mjsd","Type":"NodeParagraph","Properties":{"id":"20240317020816-7b0mjsd","updated":"20240317021126"},"Children":[{"Type":"NodeText","Data":"该函数使用了 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"invokedynamic"},{"Type":"NodeText","Data":"​ ，先从 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"BootstrapMethods"},{"Type":"NodeText","Data":"​ 部分查找对应的方法"}]},{"ID":"20240317021126-ehudj6y","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240317021126-ehudj6y","updated":"20240317021405"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"BootstrapMethods:\n  0: #34 REF_invokeStatic org/codehaus/groovy/vmplugin/v8/IndyInterface.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;I)Ljava/lang/invoke/CallSite;\n    Method arguments:\n      #26 runScript\n      #27 0\n  1: #34 REF_invokeStatic org/codehaus/groovy/vmplugin/v8/IndyInterface.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;I)Ljava/lang/invoke/CallSite;\n    Method arguments:\n      #44 add\n      #45 2\n  2: #34 REF_invokeStatic org/codehaus/groovy/vmplugin/v8/IndyInterface.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;I)Ljava/lang/invoke/CallSite;\n    Method arguments:\n      #50 println\n      #45 2\n  3: #34 REF_invokeStatic org/codehaus/groovy/vmplugin/v8/IndyInterface.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;I)Ljava/lang/invoke/CallSite;\n    Method arguments:\n      #66 plus\n      #27 0\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240317021301-4kf0s8f","Type":"NodeParagraph","Properties":{"id":"20240317021301-4kf0s8f","updated":"20240317025621"},"Children":[{"Type":"NodeText","Data":"根据字节码可见，add 方法被导向了 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"InvokeDynamic #1"},{"Type":"NodeText","Data":"​，在 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"BootstrapMethod"},{"Type":"NodeText","Data":"​ 中可见其结构："}]},{"ID":"20240317025621-oj1iwgi","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240317025621-oj1iwgi","updated":"20240317025939"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"public static CallSite bootstrap(\n    Lookup caller,   // 调用者\n    String callType, // 调用类型 = CALL_TYPES.METHOD(\"invoke\")\n    MethodType type;\n    String name;     // 方法名 = \"add\"\n    int flags\n) { ... }\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240317025941-khdh8kl","Type":"NodeParagraph","Properties":{"id":"20240317025941-khdh8kl"}}]}