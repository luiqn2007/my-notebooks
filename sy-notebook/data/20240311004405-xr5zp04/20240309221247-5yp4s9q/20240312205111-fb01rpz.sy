{"ID":"20240312205111-fb01rpz","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f630","id":"20240312205111-fb01rpz","title":"JSR 269 插件化注解处理","type":"doc","updated":"20240320010831"},"Children":[{"ID":"20240312205111-9kh62mv","Type":"NodeParagraph","Properties":{"id":"20240312205111-9kh62mv","style":"color: var(--b3-card-info-color);background-color: var(--b3-card-info-background);","updated":"20240319164902"},"Children":[{"Type":"NodeText","Data":"JSR269：Pluggable Annotation Processing API，插件化注解处理"}]},{"ID":"20240319164911-9l2u8zx","Type":"NodeParagraph","Properties":{"id":"20240319164911-9l2u8zx","updated":"20240319165908"},"Children":[{"Type":"NodeText","Data":"注解于 JDK1.5 引入，于 JSR269 规范 JDK 1.6 引入。JSR269 对应 javac process 阶段，允许在编译期对注解进行处理，可读取、修改、添加 AST 的内容，输出一个修改过的 AST，交给下游继续处理。"}]},{"ID":"20240319165911-s8dw0vz","Type":"NodeWidget","Data":"\u003ciframe src=\"/widgets/widget-excalidraw/\" data-src=\"/widgets/widget-excalidraw/\" data-subtype=\"widget\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" style=\"width: 1091px; height: 375px;\"\u003e\u003c/iframe\u003e","Properties":{"custom-data-assets":"assets/widget-excalidraw/0-20240319170917-tx1yur7","custom-options":"\u0026#123;\u0026quot;gridModeEnabled\u0026quot;:true,\u0026quot;exportBackground\u0026quot;:true,\u0026quot;theme\u0026quot;:\u0026quot;light\u0026quot;\u0026#125;","id":"20240319165911-s8dw0vz","updated":"20240319165911"}},{"ID":"20240319165737-dhyt7tx","Type":"NodeParagraph","Properties":{"id":"20240319165737-dhyt7tx","updated":"20240319172004"},"Children":[{"Type":"NodeText","Data":"创建一个继承自 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"AbstractProcessor"},{"Type":"NodeText","Data":"​ 后，标记好源文件版本和注解，实现 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"process"},{"Type":"NodeText","Data":"​ 方法即可。"}]},{"ID":"20240319172354-7z968k4","Type":"NodeList","ListData":{},"Properties":{"id":"20240319172354-7z968k4","updated":"20240319174302"},"Children":[{"ID":"20240319172355-vcwhi11","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240319172355-vcwhi11","updated":"20240319172355"},"Children":[{"ID":"20240319172355-6977uoy","Type":"NodeParagraph","Properties":{"id":"20240319172355-6977uoy","updated":"20240319172418"},"Children":[{"Type":"NodeText","Data":"实现 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"init"},{"Type":"NodeText","Data":"​ 方法可以获取一些辅助性工具"}]}]},{"ID":"20240319172427-zhx9kwp","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240319172427-zhx9kwp","updated":"20240319174302"},"Children":[{"ID":"20240319172427-raaikqi","Type":"NodeParagraph","Properties":{"id":"20240319172427-raaikqi","updated":"20240319174302"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"SupportedSourceVersion"},{"Type":"NodeText","Data":"​ 表示支持的 class 版本，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"SupportedAnnotationTypes"},{"Type":"NodeText","Data":"​ 表示可处理注解"}]}]}]},{"ID":"20240319172005-8voll1l","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240319172005-8voll1l","updated":"20240319221458"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"@SupportedSourceVersion(SourceVersion.RELEASE_8)\n@SupportedAnnotationTypes(\"org.example.jsr269.TestAnnotation\")\npublic class TestAnnotationProcessor extends AbstractProcessor {\n\n    private JavacTrees javacTrees;\n    private TreeMaker treeMaker;\n    private Names names;\n\n    @Override\n    public synchronized void init(ProcessingEnvironment processingEnv) {\n        super.init(processingEnv);\n        Context context = ((JavacProcessingEnvironment) processingEnv).getContext();\n        javacTrees = JavacTrees.instance(context);\n        treeMaker = TreeMaker.instance(context);\n        names = Names.instance(context);\n    }\n\n    @Override\n    public boolean process(Set\u003c? extends TypeElement\u003e annotations, RoundEnvironment roundEnv) {\n        // do something\n        return false;\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240319204356-eem516c","Type":"NodeBlockquote","Properties":{"id":"20240319204356-eem516c","updated":"20240320010831"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e"},{"ID":"20240319204403-4ibqdzn","Type":"NodeParagraph","Properties":{"id":"20240319204403-4ibqdzn","updated":"20240319221615"},"Children":[{"Type":"NodeText","Data":" Java 模块化（Java9）后，无法直接访问 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"com.sun"},{"Type":"NodeText","Data":"​ 包，可以利用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Filer"},{"Type":"NodeText","Data":"​ 接口创建新的源文件或类文件，或者通过 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Elements"},{"Type":"NodeText","Data":"​ 和 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Types"},{"Type":"NodeText","Data":"​ 接口获取元信息并在内存中构建新的类型，然后写入到新的 .java 文件中，由编译器再次编译这些新生成的文件。"}]},{"ID":"20240319223424-noxx1ge","Type":"NodeList","ListData":{},"Properties":{"id":"20240319223424-noxx1ge","updated":"20240320010831"},"Children":[{"ID":"20240319223426-36n7l0f","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240319223426-36n7l0f","updated":"20240319223426"},"Children":[{"ID":"20240319223426-uw9ugtj","Type":"NodeParagraph","Properties":{"id":"20240319223426-uw9ugtj","updated":"20240319223447"},"Children":[{"Type":"NodeText","Data":"使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Elements"},{"Type":"NodeText","Data":"​ 和 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Types"},{"Type":"NodeText","Data":"​ 类可以从注解处理器中获取元素信息和类型关系，这些信息可以用于构建新的源代码字符串，然后通过 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Filer"},{"Type":"NodeText","Data":"​ 写入新文件供编译器处理。"}]}]},{"ID":"20240319223449-asyl3vj","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240319223449-asyl3vj"},"Children":[{"ID":"20240319223449-gso6egh","Type":"NodeParagraph","Properties":{"id":"20240319223449-gso6egh","updated":"20240319223603"},"Children":[{"Type":"NodeText","Data":"自己解析输入的 .java 文件内容，构造出类似的 AST 结构，修改后重新生成 .java 源代码，再用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Filer.createSourceFile()"},{"Type":"NodeText","Data":"​ 方法将其写回，让后续的编译步骤继续处理"}]}]},{"ID":"20240320010804-gu8yifc","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240320010804-gu8yifc","updated":"20240320010831"},"Children":[{"ID":"20240320010804-akla84b","Type":"NodeParagraph","Properties":{"id":"20240320010804-akla84b","updated":"20240320010831"},"Children":[{"Type":"NodeText","Data":"使用 Spoon、Javapoet 等库操作 AST"}]}]}]}]},{"ID":"20240319221610-27bsg8c","Type":"NodeParagraph","Properties":{"id":"20240319221610-27bsg8c"}}]}