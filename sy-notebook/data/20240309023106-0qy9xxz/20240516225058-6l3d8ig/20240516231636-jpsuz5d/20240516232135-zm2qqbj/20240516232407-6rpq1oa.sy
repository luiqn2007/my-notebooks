{"ID":"20240516232407-6rpq1oa","Spec":"1","Type":"NodeDocument","Properties":{"icon":"scala.png","id":"20240516232407-6rpq1oa","title":"包对象","type":"doc","updated":"20240516232606"},"Children":[{"ID":"20240516232415-iz12692","Type":"NodeParagraph","Properties":{"id":"20240516232415-iz12692","updated":"20240516232432"},"Children":[{"Type":"NodeText","Data":"每个包都可以有一个包对象，包对象中的任意定义都被认为是包自身成员。"}]},{"ID":"20240516232434-8qk0mhx","Type":"NodeParagraph","Properties":{"id":"20240516232434-8qk0mhx","updated":"20240516232444"},"Children":[{"Type":"NodeText","Data":"按惯例包对象一般放在 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"package.scala"},{"Type":"NodeText","Data":"​ 源文件中"}]},{"ID":"20240516232606-u9kthwe","Type":"NodeSuperBlock","Properties":{"id":"20240516232606-u9kthwe","updated":"20240516232606"},"Children":[{"Type":"NodeSuperBlockOpenMarker"},{"Type":"NodeSuperBlockLayoutMarker","Data":"col"},{"ID":"20240516232415-6bkhxcx","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240516232415-6bkhxcx","updated":"20240516232606"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c2NhbGE="},{"Type":"NodeCodeBlockCode","Data":"// in file gardening/fruits/Fruit.scala\npackage gardening.fruits\n\ncase class Fruit(name: String, color: String)\nobject Apple extends Fruit(\"Apple\", \"green\")\nobject Plum extends Fruit(\"Plum\", \"blue\")\nobject Banana extends Fruit(\"Banana\", \"yellow\")\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240516232415-0zhac4w","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240516232415-0zhac4w","updated":"20240516232606"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c2NhbGE="},{"Type":"NodeCodeBlockCode","Data":"// 包对象\n// 可混入/继承\n// in file gardening/fruits/package.scala\npackage gardening\npackage object fruits extends FruitAliases with FruitHelpers {\n  val planted = List(Apple, Plum, Banana)\n  def showFruit(fruit: Fruit): Unit = {\n    println(s\"${fruit.name}s are ${fruit.color}\")\n  }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240516232415-en8ddts","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240516232415-en8ddts","updated":"20240516232606"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c2NhbGE="},{"Type":"NodeCodeBlockCode","Data":"// 包外调用\n// in file PrintPlanted.scala\nimport gardening.fruits._\nobject PrintPlanted {\n  def main(args: Array[String]): Unit = {\n    for (fruit \u003c- fruits.planted) {\n      showFruit(fruit)\n    }\n  }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"Type":"NodeSuperBlockCloseMarker"}]},{"ID":"20240516232424-uauw3z4","Type":"NodeParagraph","Properties":{"id":"20240516232424-uauw3z4","updated":"20240516232600"}}]}