{"ID":"20240409213526-h4dxy92","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f980","id":"20240409213526-h4dxy92","title":"String","type":"doc","updated":"20240409213543"},"Children":[{"ID":"20240409213536-m9ra1cb","Type":"NodeParagraph","Properties":{"id":"20240409213536-m9ra1cb","updated":"20240409213536"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"String"},{"Type":"NodeText","Data":"​ 是 Rust 标准库提供的 UTF-8 可变字符串结构。"}]},{"ID":"20240409213536-7gvi076","Type":"NodeParagraph","Properties":{"id":"20240409213536-7gvi076","updated":"20240409213536"},"Children":[{"Type":"NodeText","Data":"在 Rust Core 中，字符串只有一种类型 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"str"},{"Type":"NodeText","Data":"​, 它常以引用的形式 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"^str"},{"Type":"NodeText","Data":"​ 出现，因此我们常提到的字符串包含了 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"String"},{"Type":"NodeText","Data":"​ 类型和切片 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"\u0026amp;str"},{"Type":"NodeText","Data":"​ 类型。"}]},{"ID":"20240409213536-9zmz3vs","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240409213536-9zmz3vs","updated":"20240409213536"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cnVzdA=="},{"Type":"NodeCodeBlockCode","Data":"let a = \"123\"; // \u0026str\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240409213536-1qqdprh","Type":"NodeParagraph","Properties":{"id":"20240409213536-1qqdprh","updated":"20240409213536"},"Children":[{"Type":"NodeText","Data":"Rust 还存在其他一系列字符串类型，如 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"OsString"},{"Type":"NodeText","Data":"​, "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"OsStr"},{"Type":"NodeText","Data":"​, "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"CString"},{"Type":"NodeText","Data":"​, "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"CStr"},{"Type":"NodeText","Data":"​ 等，用的不多。其他 Crate 也提供了更多字符串类型。"}]},{"ID":"20240409213536-0od9fgd","Type":"NodeList","ListData":{},"Properties":{"id":"20240409213536-0od9fgd","updated":"20240409213536"},"Children":[{"ID":"20240409213536-ati7beq","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240409213536-ati7beq","updated":"20240409213536"},"Children":[{"ID":"20240409213536-yu3ky7r","Type":"NodeParagraph","Properties":{"id":"20240409213536-yu3ky7r","updated":"20240409213536"},"Children":[{"Type":"NodeText","Data":"OsString, OsStr 主要为了解决 Windows API 使用未经检查的 UTF16 编码，而 Rust 则使用 UTF8 编码，为了保证转换不出错而设置的"}]}]},{"ID":"20240409213536-5arqxe7","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240409213536-5arqxe7","updated":"20240409213536"},"Children":[{"ID":"20240409213536-d175m4r","Type":"NodeParagraph","Properties":{"id":"20240409213536-d175m4r","updated":"20240409213536"},"Children":[{"Type":"NodeText","Data":"CString, CStr 主要为了兼容 C 库中使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"'\\0'"},{"Type":"NodeText","Data":"​ 结尾的字符串而设计，Rust 核心中的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"str"},{"Type":"NodeText","Data":"​ 类型本身保存长度因此不需要 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"'\\0'"},{"Type":"NodeText","Data":"​"}]}]}]},{"ID":"20240409213536-la21q9t","Type":"NodeParagraph","Properties":{"id":"20240409213536-la21q9t","updated":"20240409213536"},"Children":[{"Type":"NodeText","Data":"String 类型可以通过以下几个方法创建："}]},{"ID":"20240409213536-jolbo99","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240409213536-jolbo99","updated":"20240409213536"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cnVzdA=="},{"Type":"NodeCodeBlockCode","Data":"fn main() {\n    let str1 = \"hello\".to_string(); // 通过 \u0026str 创建\n    let str2 = String::new(); // 空字符串\n    let str3 = String::from(\"hello\"); \n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240409213536-7o2de84","Type":"NodeParagraph","Properties":{"id":"20240409213536-7o2de84","updated":"20240409213536"},"Children":[{"Type":"NodeText","Data":"可通过 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"push"},{"Type":"NodeText","Data":"​, "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"push_str"},{"Type":"NodeText","Data":"​, "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"add"},{"Type":"NodeText","Data":"​/"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"+"},{"Type":"NodeText","Data":"​, "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"format!"},{"Type":"NodeText","Data":"​ 连接字符串"}]},{"ID":"20240409213536-txiqpm7","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240409213536-txiqpm7","updated":"20240409213536"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cnVzdA=="},{"Type":"NodeCodeBlockCode","Data":"fn main() {\n    // \"\"\n    let mut str = String::new();\n    // \"Hello\"\n    str.push_str(\"Hello\");\n    // \"Hello!\"\n    str.push('!');\n    // \"Hello!~~~\"\n    let str2 = str + \"~~~\"; // String::add\n    // \"Hello!~~~, !!!\"\n    let str3 = format!(\"{}, {}\", str2, \"!!!\");\n\n    assert_eq!(str3, \"Hello!~~~, !!!\")\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240409213536-vwq137y","Type":"NodeParagraph","Properties":{"id":"20240409213536-vwq137y","updated":"20240409213536"},"Children":[{"Type":"NodeText","Data":"字符串切片和长度都是字节长度，其长度不一定是字符串字符个数"}]},{"ID":"20240409213536-ttuuuys","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240409213536-ttuuuys","updated":"20240409213536"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cnVzdA=="},{"Type":"NodeCodeBlockCode","Data":"fn main() {\n    let str = \"你好！\";\n    // len=9\n    println!(\"len={}\", str.len());\n    // 0..3=你\n    println!(\"0..3={}\", \u0026str[0..3]);\n    // thread 'main' panicked at 'byte index 1 is not a char boundary; it is inside '你' (bytes 0..3) of `你好！`', src\\main.rs:5:26\n    // UTF-8 中，一个汉字使用三个字节表示\n    println!(\"0..1={}\", \u0026str[0..1]);\n    for x in str.bytes() {\n        // 228, 189, 160, 229, 165, 189, 239, 188, 129, \n        print!(\"{}, \", x)\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240409213543-sdquxdk","Type":"NodeParagraph","Properties":{"id":"20240409213543-sdquxdk"}}]}