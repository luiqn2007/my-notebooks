{"ID":"20240427172442-8t8a0rd","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f980","id":"20240427172442-8t8a0rd","title":"自定义派生宏","type":"doc","updated":"20240427172550"},"Children":[{"ID":"20240427172527-4krlon0","Type":"NodeParagraph","Properties":{"id":"20240427172527-4krlon0","updated":"20240427172527"},"Children":[{"Type":"NodeText","Data":"自定义派生宏适用于结构体和枚举。"}]},{"ID":"20240427172527-etrpf02","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240427172527-etrpf02","updated":"20240427172527"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cnVzdA=="},{"Type":"NodeCodeBlockCode","Data":"use rust_demo::HelloMacro;\nuse hello_macro_derive::HelloMacro;\n\n#[derive(HelloMacro)]\nstruct Pancakes;\n\nfn main() {\n   // Hello, Macro! My name is Pancakes\n    Pancakes::hello_macro();\n}\n\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240427172527-mw53ds3","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20240427172527-mw53ds3","updated":"20240427172550"},"Children":[{"ID":"20240427172527-dc3l7qu","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20240427172527-dc3l7qu","updated":"20240427172550"},"Children":[{"ID":"20240427172527-dm4jh47","Type":"NodeParagraph","Properties":{"id":"20240427172527-dm4jh47","updated":"20240427172527"},"Children":[{"Type":"NodeText","Data":"在根项目中声明 trait"}]},{"ID":"20240427172527-s6gzl6d","Type":"NodeSuperBlock","Properties":{"id":"20240427172527-s6gzl6d","updated":"20240427172550"},"Children":[{"Type":"NodeSuperBlockOpenMarker"},{"Type":"NodeSuperBlockLayoutMarker","Data":"col"},{"ID":"20240427172527-hexyg58","Type":"NodeSuperBlock","Properties":{"id":"20240427172527-hexyg58","updated":"20240427172550"},"Children":[{"Type":"NodeSuperBlockOpenMarker"},{"Type":"NodeSuperBlockLayoutMarker","Data":"row"},{"ID":"20240427172527-d8nyvg6","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240427172527-d8nyvg6","updated":"20240427172527"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cnVzdA=="},{"Type":"NodeCodeBlockCode","Data":"pub trait HelloMacro {\n    fn hello_macro();\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240427172527-sqamw67","Type":"NodeParagraph","Properties":{"id":"20240427172527-sqamw67","style":"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);","updated":"20240427172550"},"Children":[{"Type":"NodeText","Data":"过程宏必须在自己的 crate 内，因此需要创建一个新的 lib "},{"Type":"NodeTextMark","Properties":{"parent-style":"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);"},"TextMarkType":"code","TextMarkTextContent":"cargo new hello_macro_derive --lib"},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);\"}"},{"Type":"NodeText","Data":"​"}]},{"ID":"20240427172527-8wtfp70","Type":"NodeParagraph","Properties":{"id":"20240427172527-8wtfp70","updated":"20240427172542"},"Children":[{"Type":"NodeText","Data":"在 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"hello_macro_derive/Cargo.toml"},{"Type":"NodeText","Data":"​ 中声明过程宏 crate 及一些常用的辅助库"}]},{"Type":"NodeSuperBlockCloseMarker"}]},{"ID":"20240427172527-4gq0ps0","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240427172527-4gq0ps0","updated":"20240427172527"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"dG9tbA=="},{"Type":"NodeCodeBlockCode","Data":"# 声明过程宏 crate\n[lib]\nproc-macro = true\n\n[dependencies]\n# 将字符串中的 Rust 代码解析成 AST\nsyn = \"1.0.82\"\n# 将 syn 解析的 AST 重新转化为 Rust 代码\nquote = \"1.0.10\"\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"Type":"NodeSuperBlockCloseMarker"}]}]},{"ID":"20240427172527-frupoqs","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20240427172527-frupoqs","updated":"20240427172527"},"Children":[{"ID":"20240427172527-mltrns1","Type":"NodeParagraph","Properties":{"id":"20240427172527-mltrns1","updated":"20240427172527"},"Children":[{"Type":"NodeText","Data":"在 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"hello_macro_derive/src/lib.rs"},{"Type":"NodeText","Data":"​ 中声明导出宏，并创建对应函数处理代码"}]},{"ID":"20240427172527-rkrzbyx","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240427172527-rkrzbyx","updated":"20240427172527"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cnVzdA=="},{"Type":"NodeCodeBlockCode","Data":"// 至 1.31.0 仍需要 extern\nextern crate proc_macro;\n\nuse proc_macro::TokenStream;\nuse quote::quote;\nuse syn::DeriveInput;\n\n// 实现函数\n#[proc_macro_derive(HelloMacro)]\npub fn hello_macro_derive(input: TokenStream) -\u003e TokenStream {\n   println!(\"{}\", input.to_string());\n   let ast: DeriveInput = syn::parse(input).unwrap();\n   // impl_hello_macro\n   // name 可在实现中使用 #name 引用\n   let name = \u0026ast.ident;\n   // 构建新代码\n   let gen = quote! {\n      impl HelloMacro for #name {\n            fn hello_macro() {\n                // stringify! 宏使输入的表达式直接转化为字符串，如 stringify!(1+2) =\u003e \"1+2\"\n                println!(\"Hello, Macro! My name is {}\", stringify!(#name));\n            }\n        }\n    };\n   gen.into()\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}]}]}