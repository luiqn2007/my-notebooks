{"ID":"20240422124412-38janny","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f980","id":"20240422124412-38janny","title":"整型溢出","type":"doc","updated":"20240427180640"},"Children":[{"ID":"20240422124432-fcm60kc","Type":"NodeParagraph","Properties":{"id":"20240422124432-fcm60kc","style":"color: var(--b3-card-info-color);background-color: var(--b3-card-info-background);","updated":"20240427180640"},"Children":[{"Type":"NodeText","Data":"整型溢出：当运算结果超过整型最大值的情况被称为 整型溢出。debug 模式下 Rust 使程序 "},{"Type":"NodeTextMark","Properties":{"parent-style":"color: var(--b3-card-info-color);background-color: var(--b3-card-info-background);"},"TextMarkType":"code","TextMarkTextContent":"panic"},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"color: var(--b3-card-info-color);background-color: var(--b3-card-info-background);\"}"},{"Type":"NodeText","Data":"​，release 模式下使用二进制补码循环溢出处理。"}]},{"ID":"20240422124432-eo6n5mc","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240422124432-eo6n5mc","updated":"20240422124432"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cnVzdA=="},{"Type":"NodeCodeBlockCode","Data":"// Integer overflow: 254+1=255\nprintln!(\"Integer overflow: 254+1={}\", 254u8+1u8);\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240422124432-li072m5","Type":"NodeParagraph","Properties":{"id":"20240422124432-li072m5","style":"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);","updated":"20240422124432"},"Children":[{"Type":"NodeText","Data":"整型溢出一般被认为是一种错误，但若依赖于这种行为，可使用 "},{"Type":"NodeTextMark","Properties":{"parent-style":"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);"},"TextMarkType":"code","TextMarkTextContent":"Wrapping"},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);\"}"},{"Type":"NodeText","Data":"​ 功能。"}]},{"ID":"20240422124432-2ltdwsa","Type":"NodeList","ListData":{},"Properties":{"id":"20240422124432-2ltdwsa","updated":"20240422124630"},"Children":[{"ID":"20240422124432-346vdsq","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240422124432-346vdsq","updated":"20240422124620"},"Children":[{"ID":"20240422124432-axgo31f","Type":"NodeParagraph","Properties":{"id":"20240422124432-axgo31f","updated":"20240422124620"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"wrapping_*"},{"Type":"NodeText","Data":"​ 方法总是将溢出值以二进制补码包装，在 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"debug"},{"Type":"NodeText","Data":"​ 模式下仍能运行。默认操作。"}]},{"ID":"20240422124432-i9pvaex","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240422124432-i9pvaex","updated":"20240422124432"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cnVzdA=="},{"Type":"NodeCodeBlockCode","Data":"// attempt to compute `254_u8 + 2_u8`, which would overflow\n// println!(\"Integer overflow: 254+2={}\", 254u8+2u8);\n// Wrapping add: 254+1=255\nprintln!(\"Wrapping add: 254+1={}\", 254u8.wrapping_add(1u8));\n// Wrapping add: 254+2=0\nprintln!(\"Wrapping add: 254+2={}\", 254u8.wrapping_add(2u8));\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]},{"ID":"20240422124432-i8lj1zj","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240422124432-i8lj1zj","updated":"20240422124630"},"Children":[{"ID":"20240422124432-g4506hc","Type":"NodeParagraph","Properties":{"id":"20240422124432-g4506hc","updated":"20240422124630"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"checked_*"},{"Type":"NodeText","Data":"​ 方法返回一个 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Option"},{"Type":"NodeText","Data":"​ 对象，当溢出时返回 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"None"},{"Type":"NodeText","Data":"​"}]},{"ID":"20240422124432-a1mjx6x","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240422124432-a1mjx6x","updated":"20240422124432"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cnVzdA=="},{"Type":"NodeCodeBlockCode","Data":"// Check: 254+1=255\nprintln!(\"Check: 254+1={}\", 254u8.checked_add(1u8).get_or_insert(0u8));\n// Check: 254+2=0\nprintln!(\"Check: 254+2={}\", 254u8.checked_add(2u8).get_or_insert(0u8));\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]},{"ID":"20240422124432-1ol6o3u","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240422124432-1ol6o3u","updated":"20240422124432"},"Children":[{"ID":"20240422124432-6zygb5h","Type":"NodeParagraph","Properties":{"id":"20240422124432-6zygb5h","updated":"20240422124432"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"overflowing_*"},{"Type":"NodeText","Data":"​ 方法返回一个 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"(self, bool)"},{"Type":"NodeText","Data":"​ 类型元组，前者以补码包装，后者为是否溢出"}]},{"ID":"20240422124432-gy56s2r","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240422124432-gy56s2r","updated":"20240422124432"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cnVzdA=="},{"Type":"NodeCodeBlockCode","Data":"let oa = 254u8.overflowing_add(1u8);\n// Overflowing: 254+1=(255, false)\nprintln!(\"Overflowing: 254+1=({}, {})\", oa.0, oa.1);\nlet oa = 254u8.overflowing_add(2u8);\n// Overflowing: 254+1=(0, true)\nprintln!(\"Overflowing: 254+1=({}, {})\", oa.0, oa.1);\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]},{"ID":"20240422124432-1p99wa7","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240422124432-1p99wa7","updated":"20240422124432"},"Children":[{"ID":"20240422124432-m5yod5q","Type":"NodeParagraph","Properties":{"id":"20240422124432-m5yod5q","updated":"20240422124432"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"saturating_*"},{"Type":"NodeText","Data":"​ 方法对值的最大值或最小值进行饱和处理"}]},{"ID":"20240422124432-p2qjg2x","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240422124432-p2qjg2x","updated":"20240422124432"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cnVzdA=="},{"Type":"NodeCodeBlockCode","Data":"// Saturating: 254+1=255\nprintln!(\"Saturating: 254+1={}\", 254u8.saturating_add(1u8));\n// Saturating: 254+2=255\nprintln!(\"Saturating: 254+2={}\", 254u8.saturating_add(2u8));\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}]}]}