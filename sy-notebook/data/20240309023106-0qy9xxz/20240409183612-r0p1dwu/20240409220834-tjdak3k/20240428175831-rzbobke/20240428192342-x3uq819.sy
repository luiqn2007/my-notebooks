{"ID":"20240428192342-x3uq819","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f980","id":"20240428192342-x3uq819","title":"执行器 Executor","type":"doc","updated":"20240428200105"},"Children":[{"ID":"20240428192342-h30ofbt","Type":"NodeParagraph","Properties":{"id":"20240428192342-h30ofbt","updated":"20240428192457"},"Children":[{"Type":"NodeText","Data":"执行器，负责管理和调用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Future"},{"Type":"NodeText","Data":"​。"}]},{"ID":"20240428192457-zdybuz3","Type":"NodeParagraph","Properties":{"id":"20240428192457-zdybuz3","updated":"20240428192802"},"Children":[{"Type":"NodeText","Data":"一般来说，执行器会轮询一次所有的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Future"},{"Type":"NodeText","Data":"​，调用他们的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"poll()"},{"Type":"NodeText","Data":"​ 函数，之后等待任务调用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"waker()"},{"Type":"NodeText","Data":"​ 方法唤醒轮询器，轮询器才继续调用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"poll()"},{"Type":"NodeText","Data":"​。"}]},{"ID":"20240428193620-5tui7ns","Type":"NodeParagraph","Properties":{"id":"20240428193620-5tui7ns","updated":"20240428193656"},"Children":[{"Type":"NodeText","Data":"下面使用"},{"Type":"NodeTextMark","TextMarkType":"block-ref","TextMarkBlockRefID":"20240409220854-2avrafo","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"消息队列"},{"Type":"NodeText","Data":"实现一个简单的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Executor"},{"Type":"NodeText","Data":"​："}]},{"ID":"20240428193616-ourhuzd","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20240428193616-ourhuzd","updated":"20240428200105"},"Children":[{"ID":"20240428193739-0iny31m","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20240428193739-0iny31m"},"Children":[{"ID":"20240428193739-2a7ywcn","Type":"NodeParagraph","Properties":{"id":"20240428193739-2a7ywcn","updated":"20240428195230"},"Children":[{"Type":"NodeText","Data":"创建任务结构体 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Task"},{"Type":"NodeText","Data":"​。任务实现 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"ArcWake"},{"Type":"NodeText","Data":"​ 使自身成为一个 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Waker"},{"Type":"NodeText","Data":"​"}]},{"ID":"20240428195047-on15k1a","Type":"NodeSuperBlock","Properties":{"id":"20240428195047-on15k1a"},"Children":[{"Type":"NodeSuperBlockOpenMarker"},{"Type":"NodeSuperBlockLayoutMarker","Data":"col"},{"ID":"20240428193838-1shdxlv","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240428193838-1shdxlv","updated":"20240428194223"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cnVzdA=="},{"Type":"NodeCodeBlockCode","Data":"struct Task {\n    future: Mutex\u003cOption\u003cBoxFuture\u003c'static, ()\u003e\u003e\u003e,\n    task_sender: SyncSender\u003cArc\u003cTask\u003e\u003e,\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240428195042-62859kl","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240428195042-62859kl","updated":"20240428195044"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cnVzdA=="},{"Type":"NodeCodeBlockCode","Data":"impl ArcWake for Task {\n    fn wake_by_ref(arc_self: \u0026Arc\u003cSelf\u003e) {\n        let cloned = arc_self.clone();\n        arc_self.task_sender\n            .send(cloned)\n            .expect(\"任务队列已满\");\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"Type":"NodeSuperBlockCloseMarker"}]}]},{"ID":"20240428193618-i8a657h","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20240428193618-i8a657h","updated":"20240428193618"},"Children":[{"ID":"20240428193618-kz9m8dj","Type":"NodeParagraph","Properties":{"id":"20240428193618-kz9m8dj","updated":"20240428193957"},"Children":[{"Type":"NodeText","Data":"创建一个 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Executor"},{"Type":"NodeText","Data":"​ 和 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Spawner"},{"Type":"NodeText","Data":"​。执行器负责从消息通道中拉取事件。任务就绪时从消息通道中取出任务并执行。"}]},{"ID":"20240428193822-8kppu68","Type":"NodeSuperBlock","Properties":{"id":"20240428193822-8kppu68"},"Children":[{"Type":"NodeSuperBlockOpenMarker"},{"Type":"NodeSuperBlockLayoutMarker","Data":"col"},{"ID":"20240428193736-72dcuyi","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240428193736-72dcuyi","updated":"20240428195721"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cnVzdA=="},{"Type":"NodeCodeBlockCode","Data":"struct Executor {\n    ready_queue: Receiver\u003cArc\u003cTask\u003e\u003e,\n}\n\nimpl Executor {\n    fn run(\u0026self) {\n        while let Ok(task) = self.ready_queue.recv() {\n            let mut future_slot = task.future.lock().unwrap();\n            if let Some(mut future) = future_slot.take() { \n                let waker = waker_ref(\u0026task);\n                let context = \u0026mut Context::from_waker(\u0026*waker);\n                if future.as_mut().poll(context).is_pending() { \n                    *future_slot = Some(future)\n                }\n            }\n        }\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240428193759-upahjd3","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240428193759-upahjd3","updated":"20240428194901"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cnVzdA=="},{"Type":"NodeCodeBlockCode","Data":"#[derive(Clone)]\nstruct Spawner {\n    task_sender: SyncSender\u003cArc\u003cTask\u003e\u003e,\n}\n\nimpl Spawner {\n    // 发送一个任务到任务队列\n    fn spawn(\u0026self, future: impl Future\u003cOutput = ()\u003e + 'static + Send) {\n        let future = future.boxed();\n        let task = Arc::new(Task {\n            future: Mutex::new(Some(future)),\n            task_sender: self.task_sender.clone(),\n        });\n        self.task_sender.send(task).expect(\"任务队列已满\");\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"Type":"NodeSuperBlockCloseMarker"}]},{"ID":"20240428194551-gt9rkfv","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240428194551-gt9rkfv","updated":"20240428194554"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cnVzdA=="},{"Type":"NodeCodeBlockCode","Data":"fn new_executor_and_spawner() -\u003e (Executor, Spawner) {\n    const MAX_QUEUE_TASKS: usize = 10_000;\n    let (task_sender, ready_queue) = sync_channel(MAX_QUEUE_TASKS);\n    (Executor { ready_queue }, Spawner { task_sender })\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]},{"ID":"20240428193707-st56zbn","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"My4=","Num":3},"Properties":{"id":"20240428193707-st56zbn","updated":"20240428200105"},"Children":[{"ID":"20240428193707-47doyb5","Type":"NodeParagraph","Properties":{"id":"20240428193707-47doyb5","updated":"20240428195816"},"Children":[{"Type":"NodeText","Data":"在 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"main"},{"Type":"NodeText","Data":"​ 中执行"}]},{"ID":"20240428195817-lkaf2cn","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240428195817-lkaf2cn","updated":"20240428200105"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cnVzdA=="},{"Type":"NodeCodeBlockCode","Data":"fn main() {\n    let (executor, spawner) = new_executor_and_spawner();\n    spawner.spawn(async {\n        println!(\"howdy!\");\n        TimeFuture::new(Duration::from_secs(2));\n        println!(\"done!\")\n    });\n\n    // 停止 Spawner，告诉 Executor 不再有新任务\n    drop(spawner);\n\n    executor.run();\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}]},{"ID":"20240428193823-bg3err3","Type":"NodeParagraph","Properties":{"id":"20240428193823-bg3err3"}}]}