{"ID":"20240409213122-kxhopr4","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f980","id":"20240409213122-kxhopr4","title":"集合","type":"doc","updated":"20240428171111"},"Children":[{"ID":"20240409213122-4648wck","Type":"NodeParagraph","Properties":{"id":"20240409213122-4648wck","updated":"20240409220059"},"Children":[{"Type":"NodeText","Data":"Cargo 提供 "},{"Type":"NodeTextMark","TextMarkType":"code block-ref","TextMarkBlockRefID":"20240409213155-i0xn87z","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"Vec"},{"Type":"NodeText","Data":"​，"},{"Type":"NodeTextMark","TextMarkType":"code block-ref","TextMarkBlockRefID":"20240409213355-rs29p3w","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"Map"},{"Type":"NodeText","Data":"​，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Set"},{"Type":"NodeText","Data":"​，"},{"Type":"NodeTextMark","TextMarkType":"code inline-memo","TextMarkInlineMemoContent":"一个堆，插入的值会根据某些条件进行排序，适用于只需要查找最大或最小值，或一个优先级队列。","TextMarkTextContent":"BinaryHeap"},{"Type":"NodeText","Data":"​ 四种数据结构作为集合使用，同时 "},{"Type":"NodeTextMark","TextMarkType":"code block-ref","TextMarkBlockRefID":"20240409213526-h4dxy92","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"String"},{"Type":"NodeText","Data":"​ 类也可以算是一种集合吧。所有集合类型在离开作用域时都会自动释放其中的元素。"}]},{"ID":"20240409213600-i8b9q6g","Type":"NodeParagraph","Properties":{"id":"20240409213600-i8b9q6g","updated":"20240409213623"},"Children":[{"Type":"NodeText","Data":"使用集合的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"iter()"},{"Type":"NodeText","Data":"​ 方法可创建一个迭代器。迭代器实现了 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Iterator"},{"Type":"NodeText","Data":"​ 接口，可使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"for-in"},{"Type":"NodeText","Data":"​ 循环遍历。"}]},{"ID":"20240409220059-ibgtbii","Type":"NodeParagraph","Properties":{"id":"20240409220059-ibgtbii","updated":"20240428121332"},"Children":[{"Type":"NodeTextMark","TextMarkType":"block-ref","TextMarkBlockRefID":"20240428121309-gjkn76q","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"Range"},{"Type":"NodeText","Data":" 表示一段连续范围，常用于循环和切片。"}]},{"ID":"20240428170522-ktm9yfc","Type":"NodeParagraph","Properties":{"id":"20240428170522-ktm9yfc","style":"color: var(--b3-card-info-color);background-color: var(--b3-card-info-background);","updated":"20240428170536"},"Children":[{"Type":"NodeText","Data":"可使用 "},{"Type":"NodeTextMark","Properties":{"parent-style":"color: var(--b3-card-info-color);background-color: var(--b3-card-info-background);"},"TextMarkType":"code","TextMarkTextContent":"Iterator"},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"color: var(--b3-card-info-color);background-color: var(--b3-card-info-background);\"}"},{"Type":"NodeText","Data":"​ 的方法从闭包创建迭代器。"},{"Type":"NodeTextMark","Properties":{"parent-style":"color: var(--b3-card-info-color);background-color: var(--b3-card-info-background);"},"TextMarkType":"code","TextMarkTextContent":"Range"},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"color: var(--b3-card-info-color);background-color: var(--b3-card-info-background);\"}"},{"Type":"NodeText","Data":"​ 本身就是迭代器"}]},{"ID":"20240428170716-vvhd9fe","Type":"NodeParagraph","Properties":{"id":"20240428170716-vvhd9fe","updated":"20240428170756"},"Children":[{"Type":"NodeText","Data":"消耗（修改）迭代器的值的方法（或 Trait）称为迭代适配器，如 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"map"},{"Type":"NodeText","Data":"​，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"filter"},{"Type":"NodeText","Data":"​，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"collect"},{"Type":"NodeText","Data":"​ 等"}]},{"ID":"20240428170525-lbul81j","Type":"NodeParagraph","Properties":{"id":"20240428170525-lbul81j","style":"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);","updated":"20240428170525"},"Children":[{"Type":"NodeText","Data":"迭代器是惰性求值的"}]},{"ID":"20240428170759-krka3yd","Type":"NodeList","ListData":{},"Properties":{"id":"20240428170759-krka3yd","updated":"20240428171008"},"Children":[{"ID":"20240428170808-gd52tji","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240428170808-gd52tji","updated":"20240428170808"},"Children":[{"ID":"20240428170808-syng4bh","Type":"NodeParagraph","Properties":{"id":"20240428170808-syng4bh","updated":"20240428170851"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"enumerate()"},{"Type":"NodeText","Data":"​：生成一个值为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"(index, value)"},{"Type":"NodeText","Data":"​ 的迭代器"}]}]},{"ID":"20240428170916-lku062l","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240428170916-lku062l","updated":"20240428171008"},"Children":[{"ID":"20240428170916-ur6ftla","Type":"NodeParagraph","Properties":{"id":"20240428170916-ur6ftla","updated":"20240428171008"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"zip(iter)"},{"Type":"NodeText","Data":"​：将另一个迭代器与该迭代器组合，每个值变成两个迭代器值的元组"}]}]}]},{"ID":"20240428171111-zwaetrs","Type":"NodeParagraph","Properties":{"id":"20240428171111-zwaetrs"}}]}