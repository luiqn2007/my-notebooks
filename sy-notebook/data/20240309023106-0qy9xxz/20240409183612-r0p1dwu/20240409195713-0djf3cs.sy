{"ID":"20240409195713-0djf3cs","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f980","id":"20240409195713-0djf3cs","title":"宏","type":"doc","updated":"20240411235918"},"Children":[{"ID":"20240409195720-prfvqdx","Type":"NodeParagraph","Properties":{"id":"20240409195720-prfvqdx","updated":"20240409195720"},"Children":[{"Type":"NodeText","Data":"宏 Macro 是 Rust 提供的一系列功能，包括一种声明宏和三种过程宏。 从根本上说宏是为写其他代码而写代码的方式，即元编程。"}]},{"ID":"20240409195720-5qix7my","Type":"NodeList","ListData":{},"Properties":{"id":"20240409195720-5qix7my","updated":"20240409195720"},"Children":[{"ID":"20240409195720-3qdp45q","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240409195720-3qdp45q","updated":"20240409195720"},"Children":[{"ID":"20240409195720-31tl8xo","Type":"NodeParagraph","Properties":{"id":"20240409195720-31tl8xo","updated":"20240409195720"},"Children":[{"Type":"NodeText","Data":"使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"macro_rules!"},{"Type":"NodeText","Data":"​ 的声明宏"}]}]},{"ID":"20240409195720-vb35cqh","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240409195720-vb35cqh","updated":"20240409195720"},"Children":[{"ID":"20240409195720-u7d042a","Type":"NodeParagraph","Properties":{"id":"20240409195720-u7d042a","updated":"20240409195720"},"Children":[{"Type":"NodeText","Data":"自定义 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"#[derive]"},{"Type":"NodeText","Data":"​ 宏在结构体和枚举上指定通过 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"derive"},{"Type":"NodeText","Data":"​ 属性添加的代码"}]}]},{"ID":"20240409195720-07dp5wo","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240409195720-07dp5wo","updated":"20240409195720"},"Children":[{"ID":"20240409195720-w1rkvyf","Type":"NodeParagraph","Properties":{"id":"20240409195720-w1rkvyf","updated":"20240409195720"},"Children":[{"Type":"NodeText","Data":"类属性宏定义用于任意项目的自定义属性"}]}]},{"ID":"20240409195720-lubkqp7","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240409195720-lubkqp7","updated":"20240409195720"},"Children":[{"ID":"20240409195720-s4zgjqm","Type":"NodeParagraph","Properties":{"id":"20240409195720-s4zgjqm","updated":"20240409195720"},"Children":[{"Type":"NodeText","Data":"类函数宏类似函数，但作用于作为参数传递的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"token"},{"Type":"NodeText","Data":"​"}]}]}]},{"ID":"20240409195720-4q658zj","Type":"NodeParagraph","Properties":{"id":"20240409195720-4q658zj","updated":"20240409195720"},"Children":[{"Type":"NodeText","Data":"元编程可用于减少大量代码编写和维护代码，在某些位置也扮演了函数的作用。其与函数的差异在于"}]},{"ID":"20240409195720-pbesoew","Type":"NodeList","ListData":{},"Properties":{"id":"20240409195720-pbesoew","updated":"20240409195720"},"Children":[{"ID":"20240409195720-z1stsa3","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240409195720-z1stsa3","updated":"20240409195720"},"Children":[{"ID":"20240409195720-wxlwbno","Type":"NodeParagraph","Properties":{"id":"20240409195720-wxlwbno","updated":"20240409195720"},"Children":[{"Type":"NodeText","Data":"函数必须声明固定的参数列表和返回值，宏则可以接受不同数量的参数"}]}]},{"ID":"20240409195720-q84op7c","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240409195720-q84op7c","updated":"20240409195720"},"Children":[{"ID":"20240409195720-cu2pg4l","Type":"NodeParagraph","Properties":{"id":"20240409195720-cu2pg4l","updated":"20240409195720"},"Children":[{"Type":"NodeText","Data":"宏可以在编译器翻译代码之前展开，如给一个给定类型实现 trait 等"}]}]},{"ID":"20240409195720-t0i4kx8","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240409195720-t0i4kx8","updated":"20240409195720"},"Children":[{"ID":"20240409195720-cmiizzb","Type":"NodeParagraph","Properties":{"id":"20240409195720-cmiizzb","updated":"20240409195720"},"Children":[{"Type":"NodeText","Data":"实现宏比函数更复杂，因为要间接生成代码，因此比直接写代码更加复杂 更难阅读"}]}]},{"ID":"20240409195720-nr0uyol","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240409195720-nr0uyol","updated":"20240409195720"},"Children":[{"ID":"20240409195720-szklpg0","Type":"NodeParagraph","Properties":{"id":"20240409195720-szklpg0","updated":"20240409195720"},"Children":[{"Type":"NodeText","Data":"在文件中调用宏之前必须定义或引用它，而函数则可以在任何地方定义和调用"}]}]}]},{"ID":"20240409195737-mt8xyrk","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20240409195737-mt8xyrk","updated":"20240409195737"},"Children":[{"Type":"NodeText","Data":"声明宏"}]},{"ID":"20240409195737-4a4xz4z","Type":"NodeParagraph","Properties":{"id":"20240409195737-4a4xz4z","updated":"20240409195737"},"Children":[{"Type":"NodeText","Data":"声明宏允许编写一些类似 Rust "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"match"},{"Type":"NodeText","Data":"​ 的代码"}]},{"ID":"20240409195737-9be1ljg","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240409195737-9be1ljg","updated":"20240411235918"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cnVzdA=="},{"Type":"NodeCodeBlockCode","Data":"// 一个 vec! 简化版本\n#[macro_export]\nmacro_rules! vec {\n    ($(x:expr), *) =\u003e {\n        {\n            let mut temp_vec = Vec::new();\n            $(\n            temp_vec.push($x);\n            )*\n            temp_vec\n        }\n    };\n}\n\nfn main() {\n    let v1 = vec![1, 2, 3];\n  \n    // 等同于\n    let v2 = {\n        let mut temp_vec = Vec::new();\n        temp_vec.push(1);\n        temp_vec.push(2);\n        temp_vec.push(3);\n        temp_vec\n    };\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240409195737-b6h246o","Type":"NodeList","ListData":{},"Properties":{"id":"20240409195737-b6h246o","updated":"20240409195737"},"Children":[{"ID":"20240409195737-targ893","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240409195737-targ893","updated":"20240409195737"},"Children":[{"ID":"20240409195737-my83tqr","Type":"NodeParagraph","Properties":{"id":"20240409195737-my83tqr","updated":"20240409195737"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"#[macro_export]"},{"Type":"NodeText","Data":"​ 表示该宏是可见的，否则不可能被外部通过导入包引入到作用域。"}]}]},{"ID":"20240409195737-x6db442","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240409195737-x6db442","updated":"20240409195737"},"Children":[{"ID":"20240409195737-750fq1x","Type":"NodeParagraph","Properties":{"id":"20240409195737-750fq1x","updated":"20240409195737"},"Children":[{"Type":"NodeText","Data":"声明宏名称："},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"macro_rules! 宏名称"},{"Type":"NodeText","Data":"​"}]}]},{"ID":"20240409195737-lvgclkz","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240409195737-lvgclkz","updated":"20240409195737"},"Children":[{"ID":"20240409195737-2xbdogr","Type":"NodeParagraph","Properties":{"id":"20240409195737-2xbdogr","updated":"20240409195737"},"Children":[{"Type":"NodeText","Data":"大括号内语法类似 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"match"},{"Type":"NodeText","Data":"​ 表达式的结构，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"=\u0026gt;"},{"Type":"NodeText","Data":"​ 左面括号内为一个单边模式，右边为替代的代码"}]},{"ID":"20240409195737-vhlzz8s","Type":"NodeList","ListData":{},"Properties":{"id":"20240409195737-vhlzz8s","updated":"20240409195737"},"Children":[{"ID":"20240409195737-pv90q5s","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240409195737-pv90q5s","updated":"20240409195737"},"Children":[{"ID":"20240409195737-zowzs6x","Type":"NodeParagraph","Properties":{"id":"20240409195737-zowzs6x","updated":"20240409195737"},"Children":[{"Type":"NodeText","Data":"模式以 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"$"},{"Type":"NodeText","Data":"​ 开头，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"x:exper"},{"Type":"NodeText","Data":"​ 表示匹配一个表达式，并在右边可以以 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"$x"},{"Type":"NodeText","Data":"​ 替代"}]}]},{"ID":"20240409195737-xzfmuhq","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240409195737-xzfmuhq","updated":"20240409195737"},"Children":[{"ID":"20240409195737-45nzu7d","Type":"NodeParagraph","Properties":{"id":"20240409195737-45nzu7d","updated":"20240409195737"},"Children":[{"Type":"NodeText","Data":"第一个 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"$"},{"Type":"NodeText","Data":"​ 外后接一个 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":","},{"Type":"NodeText","Data":"​，表示后面可有 0 或 1 个 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":","},{"Type":"NodeText","Data":"​"}]}]},{"ID":"20240409195737-pwk7ck3","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240409195737-pwk7ck3","updated":"20240409195737"},"Children":[{"ID":"20240409195737-3vbpp0u","Type":"NodeParagraph","Properties":{"id":"20240409195737-3vbpp0u","updated":"20240409195737"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"*"},{"Type":"NodeText","Data":"​ 表示匹配 0 次或多次之前的模式，在右边可以使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"$()"},{"Type":"NodeText","Data":"​ 循环访问"}]}]}]}]}]},{"ID":"20240409195737-2hno546","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20240409195737-2hno546","updated":"20240409195737"},"Children":[{"Type":"NodeText","Data":"过程宏"}]},{"ID":"20240409195737-1ncfrd2","Type":"NodeParagraph","Properties":{"id":"20240409195737-1ncfrd2","updated":"20240409195937"},"Children":[{"Type":"NodeText","Data":"过程宏以 Rust 代码作为输入，在这些代码中操作后产生另一些代码作为输出（"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"TokenStream"},{"Type":"NodeText","Data":"​）。过程宏包括自定义派生(derive)，类属性和类函数。自定义派生宏适用于结构体和枚举。以下就是定义的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"HelloMacro"},{"Type":"NodeText","Data":"​ 宏"}]},{"ID":"20240409195737-n1inm0w","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240409195737-n1inm0w","updated":"20240409195905"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cnVzdA=="},{"Type":"NodeCodeBlockCode","Data":"use rust_demo::HelloMacro;\nuse hello_macro_derive::HelloMacro;\n\n#[derive(HelloMacro)]\nstruct Pancakes;\n\nfn main() {\n   // Hello, Macro! My name is Pancakes\n    Pancakes::hello_macro();\n}\n\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240409195737-8uij3yx","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20240409195737-8uij3yx","updated":"20240409195737"},"Children":[{"ID":"20240409195737-l8bmdfd","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20240409195737-l8bmdfd","updated":"20240409195737"},"Children":[{"ID":"20240409195737-cf9b1qm","Type":"NodeParagraph","Properties":{"id":"20240409195737-cf9b1qm","updated":"20240409195737"},"Children":[{"Type":"NodeText","Data":"在根项目中声明 trait"}]},{"ID":"20240409195800-44uhfr6","Type":"NodeSuperBlock","Properties":{"id":"20240409195800-44uhfr6"},"Children":[{"Type":"NodeSuperBlockOpenMarker"},{"Type":"NodeSuperBlockLayoutMarker","Data":"col"},{"ID":"20240409195758-ww9u7zp","Type":"NodeSuperBlock","Properties":{"id":"20240409195758-ww9u7zp"},"Children":[{"Type":"NodeSuperBlockOpenMarker"},{"Type":"NodeSuperBlockLayoutMarker","Data":"row"},{"ID":"20240409195737-kphac5z","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240409195737-kphac5z","updated":"20240409195737"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cnVzdA=="},{"Type":"NodeCodeBlockCode","Data":"pub trait HelloMacro {\n    fn hello_macro();\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240409195737-v1ge3ju","Type":"NodeList","ListData":{},"Properties":{"id":"20240409195737-v1ge3ju","updated":"20240409195737"},"Children":[{"ID":"20240409195737-tq8b3uq","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240409195737-tq8b3uq","updated":"20240409195737"},"Children":[{"ID":"20240409195737-x258s3i","Type":"NodeParagraph","Properties":{"id":"20240409195737-x258s3i","updated":"20240409195737"},"Children":[{"Type":"NodeText","Data":"过程宏必须在自己的 crate 内，因此需要创建一个新的 lib "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"cargo new hello_macro_derive --lib"},{"Type":"NodeText","Data":"​"}]}]},{"ID":"20240409195737-vuomfsk","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240409195737-vuomfsk","updated":"20240409195737"},"Children":[{"ID":"20240409195737-dov6oce","Type":"NodeParagraph","Properties":{"id":"20240409195737-dov6oce","updated":"20240409195737"},"Children":[{"Type":"NodeText","Data":"在 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"hello_macro_derive/Cargo.toml"},{"Type":"NodeText","Data":"​ 中声明过程宏 crate 及一些常用的辅助库"}]}]}]},{"Type":"NodeSuperBlockCloseMarker"}]},{"ID":"20240409195737-9ttytpr","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240409195737-9ttytpr","updated":"20240409195737"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"dG9tbA=="},{"Type":"NodeCodeBlockCode","Data":"# 声明过程宏 crate\n[lib]\nproc-macro = true\n\n[dependencies]\n# 将字符串中的 Rust 代码解析成 AST\nsyn = \"1.0.82\"\n# 将 syn 解析的 AST 重新转化为 Rust 代码\nquote = \"1.0.10\"\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"Type":"NodeSuperBlockCloseMarker"}]}]},{"ID":"20240409195822-80n1mez","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20240409195822-80n1mez"},"Children":[{"ID":"20240409195822-k72co36","Type":"NodeParagraph","Properties":{"id":"20240409195822-k72co36","updated":"20240409195825"},"Children":[{"Type":"NodeText","Data":"在 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"hello_macro_derive/src/lib.rs"},{"Type":"NodeText","Data":"​ 中声明导出宏，并创建对应函数处理代码"}]},{"ID":"20240409195737-rt0smne","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240409195737-rt0smne","updated":"20240409195737"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cnVzdA=="},{"Type":"NodeCodeBlockCode","Data":"// 至 1.31.0 仍需要 extern\nextern crate proc_macro;\n\nuse proc_macro::TokenStream;\nuse quote::quote;\nuse syn::DeriveInput;\n\n// 实现函数\n#[proc_macro_derive(HelloMacro)]\npub fn hello_macro_derive(input: TokenStream) -\u003e TokenStream {\n   println!(\"{}\", input.to_string());\n   let ast: DeriveInput = syn::parse(input).unwrap();\n   // impl_hello_macro\n   // name 可在实现中使用 #name 引用\n   let name = \u0026ast.ident;\n   // 构建新代码\n   let gen = quote! {\n      impl HelloMacro for #name {\n            fn hello_macro() {\n                // stringify! 宏使输入的表达式直接转化为字符串，如 stringify!(1+2) =\u003e \"1+2\"\n                println!(\"Hello, Macro! My name is {}\", stringify!(#name));\n            }\n        }\n    };\n   gen.into()\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}]},{"ID":"20240409195737-dcfo8qz","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20240409195737-dcfo8qz","updated":"20240409195737"},"Children":[{"Type":"NodeText","Data":"类属性宏"}]},{"ID":"20240409201930-1yp4s4k","Type":"NodeSuperBlock","Properties":{"id":"20240409201930-1yp4s4k","updated":"20240409201931"},"Children":[{"Type":"NodeSuperBlockOpenMarker"},{"Type":"NodeSuperBlockLayoutMarker","Data":"col"},{"ID":"20240409201928-lxxw10f","Type":"NodeSuperBlock","Properties":{"id":"20240409201928-lxxw10f","updated":"20240409201931"},"Children":[{"Type":"NodeSuperBlockOpenMarker"},{"Type":"NodeSuperBlockLayoutMarker","Data":"row"},{"ID":"20240409195737-1gjv9fa","Type":"NodeParagraph","Properties":{"id":"20240409195737-1gjv9fa","updated":"20240409201928"},"Children":[{"Type":"NodeText","Data":"类似于自定义派生宏，类属性宏用来可创建新属性，可用于任意项，包括函数等"}]},{"ID":"20240409195737-bmx39qr","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240409195737-bmx39qr","updated":"20240409201928"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cnVzdA=="},{"Type":"NodeCodeBlockCode","Data":"#[route(GET, \"/\")]\nfn index() {\n   // do something\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"Type":"NodeSuperBlockCloseMarker"}]},{"ID":"20240409201925-8csi0hw","Type":"NodeSuperBlock","Properties":{"id":"20240409201925-8csi0hw","updated":"20240409201931"},"Children":[{"Type":"NodeSuperBlockOpenMarker"},{"Type":"NodeSuperBlockLayoutMarker","Data":"row"},{"ID":"20240409195737-g0kkam3","Type":"NodeParagraph","Properties":{"id":"20240409195737-g0kkam3","updated":"20240409201926"},"Children":[{"Type":"NodeText","Data":"类属性宏的函数接受两个 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"TokenStream"},{"Type":"NodeText","Data":"​，第一个表示属性本身，即 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"GET, \u0026quot;/\u0026quot;"},{"Type":"NodeText","Data":"​，第二个代表属性标记的项，即 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"fn index() {...}"},{"Type":"NodeText","Data":"​"}]},{"ID":"20240409195737-mo890gd","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240409195737-mo890gd","updated":"20240409201926"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cnVzdA=="},{"Type":"NodeCodeBlockCode","Data":"#[proc_macro_attribute]\npub fn route(attr: TokenStream, item: TokenStream) -\u003e TokenStream {\n   // ...\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"Type":"NodeSuperBlockCloseMarker"}]},{"Type":"NodeSuperBlockCloseMarker"}]},{"ID":"20240409195737-xsv7sxo","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20240409195737-xsv7sxo","updated":"20240409195737"},"Children":[{"Type":"NodeText","Data":"类函数宏"}]},{"ID":"20240409201858-177fnoi","Type":"NodeSuperBlock","Properties":{"id":"20240409201858-177fnoi","updated":"20240409201858"},"Children":[{"Type":"NodeSuperBlockOpenMarker"},{"Type":"NodeSuperBlockLayoutMarker","Data":"col"},{"ID":"20240409201856-s2f3acc","Type":"NodeSuperBlock","Properties":{"id":"20240409201856-s2f3acc","updated":"20240409201858"},"Children":[{"Type":"NodeSuperBlockOpenMarker"},{"Type":"NodeSuperBlockLayoutMarker","Data":"row"},{"ID":"20240409195737-6rup2vh","Type":"NodeParagraph","Properties":{"id":"20240409195737-6rup2vh","updated":"20240409201856"},"Children":[{"Type":"NodeText","Data":"类函数宏类似于过程宏，使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"TokenStream"},{"Type":"NodeText","Data":"​ 实现过程宏的功能"}]},{"ID":"20240409195737-pyb9b5a","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240409195737-pyb9b5a","updated":"20240409201856"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cnVzdA=="},{"Type":"NodeCodeBlockCode","Data":"let result = sql!(SELECT * FROM ports WHERE id=1);\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"Type":"NodeSuperBlockCloseMarker"}]},{"ID":"20240409201853-ze7koay","Type":"NodeSuperBlock","Properties":{"id":"20240409201853-ze7koay","updated":"20240409201858"},"Children":[{"Type":"NodeSuperBlockOpenMarker"},{"Type":"NodeSuperBlockLayoutMarker","Data":"row"},{"ID":"20240409195737-5px09rc","Type":"NodeParagraph","Properties":{"id":"20240409195737-5px09rc","updated":"20240409201853"},"Children":[{"Type":"NodeText","Data":"其函数应定义如此"}]},{"ID":"20240409195737-lo7l3ef","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240409195737-lo7l3ef","updated":"20240409201853"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cnVzdA=="},{"Type":"NodeCodeBlockCode","Data":"#[proc_macro]\npub fn sql(input: TokenStream) -\u003e TokenStream {\n   // do something\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"Type":"NodeSuperBlockCloseMarker"}]},{"Type":"NodeSuperBlockCloseMarker"}]},{"ID":"20240409201858-65bn6av","Type":"NodeParagraph","Properties":{"id":"20240409201858-65bn6av"}}]}