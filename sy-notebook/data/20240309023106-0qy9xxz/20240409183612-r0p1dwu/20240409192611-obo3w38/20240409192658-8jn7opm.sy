{"ID":"20240409192658-8jn7opm","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f980","id":"20240409192658-8jn7opm","title":"实现 Trait","type":"doc","updated":"20240428145316"},"Children":[{"ID":"20240428143017-av1iy1r","Type":"NodeParagraph","Properties":{"id":"20240428143017-av1iy1r","updated":"20240428150735"},"Children":[{"Type":"NodeText","Data":"使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"impl \u0026lt;Trait 名\u0026gt; for \u0026lt;结构体名\u0026gt;"},{"Type":"NodeText","Data":"​ 在"},{"Type":"NodeTextMark","TextMarkType":"text","TextMarkTextContent":"🦀"},{"Type":"NodeTextMark","TextMarkType":"block-ref","TextMarkBlockRefID":"20240409191630-tna2m47","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"结构体"},{"Type":"NodeText","Data":"上实现 "},{"Type":"NodeTextMark","TextMarkType":"block-ref","TextMarkBlockRefID":"20240409192611-obo3w38","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"Trait"}]},{"ID":"20240409194327-67ffsbf","Type":"NodeParagraph","Properties":{"id":"20240409194327-67ffsbf","style":"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);","updated":"20240428150718"},"Children":[{"Type":"NodeText","Data":"孤儿规则：如果你想要为类型 "},{"Type":"NodeTextMark","Properties":{"parent-style":"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);"},"TextMarkType":"code","TextMarkTextContent":"A"},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);\"}"},{"Type":"NodeText","Data":"​ 实现特征 "},{"Type":"NodeTextMark","Properties":{"parent-style":"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);"},"TextMarkType":"code","TextMarkTextContent":"T"},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);\"}"},{"Type":"NodeText","Data":"​，那么 "},{"Type":"NodeTextMark","Properties":{"parent-style":"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);"},"TextMarkType":"code","TextMarkTextContent":"A"},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);\"}"},{"Type":"NodeText","Data":"​ 或者 "},{"Type":"NodeTextMark","Properties":{"parent-style":"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);"},"TextMarkType":"code","TextMarkTextContent":"T"},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);\"}"},{"Type":"NodeText","Data":"​ 至少有一个是在当前作用域中定义的。如果要为其他结构体实现 Trait，可参考 "},{"Type":"NodeTextMark","Properties":{"parent-style":"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);"},"TextMarkType":"block-ref","TextMarkBlockRefID":"20240409194306-c2dc3jd","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"newtype 模式"},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);\"}"}]},{"ID":"20240409192721-kgw8laa","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240409192721-kgw8laa","updated":"20240428143134"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cnVzdA=="},{"Type":"NodeCodeBlockCode","Data":"pub struct News {\n    pub headline: String,\n    pub location: String,\n    pub author: String,\n    pub content: String,\n}\n\nimpl Summary for News {\n    fn summarize(\u0026self) -\u003e String {\n        format!(\"{} by {}({})\", self.headline, self.author, self.location)\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240409192721-esd1wt1","Type":"NodeParagraph","Properties":{"id":"20240409192721-esd1wt1","updated":"20240428144942"},"Children":[{"Type":"NodeText","Data":"在函数中，使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"impl \u0026lt;Trait 名\u0026gt;"},{"Type":"NodeText","Data":"​ 作为参数类型表示某参数需要实现某 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"trait"},{"Type":"NodeText","Data":"​，同时实现多个 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"trait"},{"Type":"NodeText","Data":"​ 使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"+"},{"Type":"NodeText","Data":"​ 连接"}]},{"ID":"20240409192847-09lv3q5","Type":"NodeSuperBlock","Properties":{"id":"20240409192847-09lv3q5","updated":"20240428145316"},"Children":[{"Type":"NodeSuperBlockOpenMarker"},{"Type":"NodeSuperBlockLayoutMarker","Data":"row"},{"ID":"20240409192721-lniggh3","Type":"NodeParagraph","Properties":{"id":"20240409192721-lniggh3","style":"color: var(--b3-card-info-color);background-color: var(--b3-card-info-background);","updated":"20240428145316"},"Children":[{"Type":"NodeText","Data":"在比较复杂的情况下，可使用特征约束 "},{"Type":"NodeTextMark","Properties":{"parent-style":"color: var(--b3-card-info-color);background-color: var(--b3-card-info-background);"},"TextMarkType":"code","TextMarkTextContent":"trait bound"},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"color: var(--b3-card-info-color);background-color: var(--b3-card-info-background);\"}"},{"Type":"NodeText","Data":"​ 提取到泛型，还可使用 "},{"Type":"NodeTextMark","Properties":{"parent-style":"color: var(--b3-card-info-color);background-color: var(--b3-card-info-background);"},"TextMarkType":"code","TextMarkTextContent":"where"},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"color: var(--b3-card-info-color);background-color: var(--b3-card-info-background);\"}"},{"Type":"NodeText","Data":"​ 后置特征约束（"},{"Type":"NodeTextMark","Properties":{"parent-style":"color: var(--b3-card-info-color);background-color: var(--b3-card-info-background);"},"TextMarkType":"code","TextMarkTextContent":"where"},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"color: var(--b3-card-info-color);background-color: var(--b3-card-info-background);\"}"},{"Type":"NodeText","Data":"​ 约束）"}]},{"ID":"20240409192721-prgdl63","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240409192721-prgdl63","updated":"20240428145332"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cnVzdA=="},{"Type":"NodeCodeBlockCode","Data":"// 使用特征作为参数类型\npub fn notify(item1: \u0026impl Summary + Display, item2: \u0026impl Summary + Display) -\u003e impl Clone + Display;\n// 特征约束\npub fn notify\u003cT: Summary + Display, U: Clone + Display\u003e(item1: \u0026T, item2: \u0026T) -\u003e U;\n// 特征后置\npub fn notify\u003cT, U\u003e(item1: \u0026T, item2: \u0026T) -\u003e U where T: Summary + Display, U: Clone + Display;\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"Type":"NodeSuperBlockCloseMarker"}]},{"ID":"20240409192721-ckk1w7h","Type":"NodeParagraph","Properties":{"id":"20240409192721-ckk1w7h","updated":"20240428145040"},"Children":[{"Type":"NodeText","Data":"使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"trait bound"},{"Type":"NodeText","Data":"​ 可以针对某些特定的泛型类型实现结构体方法"}]},{"ID":"20240428143643-jvyxlxd","Type":"NodeSuperBlock","Properties":{"id":"20240428143643-jvyxlxd","updated":"20240428143657"},"Children":[{"Type":"NodeSuperBlockOpenMarker"},{"Type":"NodeSuperBlockLayoutMarker","Data":"col"},{"ID":"20240428143657-95f51cw","Type":"NodeSuperBlock","Properties":{"id":"20240428143657-95f51cw","updated":"20240428143657"},"Children":[{"Type":"NodeSuperBlockOpenMarker"},{"Type":"NodeSuperBlockLayoutMarker","Data":"row"},{"ID":"20240428143653-tclib9n","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240428143653-tclib9n","updated":"20240428143657"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cnVzdA=="},{"Type":"NodeCodeBlockCode","Data":"use std::fmt::Display;\nstruct Point\u003cT\u003e { x: T, y: T }\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240409193937-x2bsdpz","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240409193937-x2bsdpz","updated":"20240428143657"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cnVzdA=="},{"Type":"NodeCodeBlockCode","Data":"impl\u003cT\u003e Point\u003cT\u003e {\n    fn new(x: T, y: T) -\u003e Point\u003cT\u003e {\n        Point { x, y }\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"Type":"NodeSuperBlockCloseMarker"}]},{"ID":"20240409193945-8y4is09","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240409193945-8y4is09","updated":"20240428143644"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cnVzdA=="},{"Type":"NodeCodeBlockCode","Data":"impl\u003cT: Display + PartialOrd\u003e Point\u003cT\u003e {\n    fn cmp_display(\u0026self) {\n        if self.x \u003e= self.y {\n            println!(\"The largest number is {}\", self.x);\n        } else {\n            println!(\"The largest number is {}\", self.y);\n        }\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"Type":"NodeSuperBlockCloseMarker"}]},{"ID":"20240409193006-7f3l06y","Type":"NodeSuperBlock","Properties":{"id":"20240409193006-7f3l06y","updated":"20240428151148"},"Children":[{"Type":"NodeSuperBlockOpenMarker"},{"Type":"NodeSuperBlockLayoutMarker","Data":"row"},{"ID":"20240409192721-cku2uey","Type":"NodeParagraph","Properties":{"id":"20240409192721-cku2uey","style":"color: var(--b3-card-error-color);background-color: var(--b3-card-error-background);","updated":"20240428151148"},"Children":[{"Type":"NodeText","Data":"由于 Rust 的泛型机制（单态化），无法在一个方法中返回不同的类型。若想返回不同的结构体，则可以使用 "},{"Type":"NodeTextMark","Properties":{"parent-style":"color: var(--b3-card-error-color);background-color: var(--b3-card-error-background);"},"TextMarkType":"code block-ref","TextMarkBlockRefID":"20240428150857-0r4wyyo","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"Box\u0026lt;dyn T\u0026gt;"},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"color: var(--b3-card-error-color);background-color: var(--b3-card-error-background);\"}"},{"Type":"NodeText","Data":"​​"}]},{"ID":"20240428144104-vosu446","Type":"NodeSuperBlock","Properties":{"id":"20240428144104-vosu446","updated":"20240428144514"},"Children":[{"Type":"NodeSuperBlockOpenMarker"},{"Type":"NodeSuperBlockLayoutMarker","Data":"col"},{"ID":"20240409192721-pj6sqn2","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240409192721-pj6sqn2","updated":"20240428144514"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cnVzdA=="},{"Type":"NodeCodeBlockCode","Data":"// impl Summary for News\n// impl Summary for Tweet\npub fn new_summary\u003cT: Summary\u003e(username: String, \n                               content: String, \n                               is_news: bool) -\u003e T {\n    if is_news {\n        News { ... }\n    } else {\n        Tweet { ... }\n    }\n}\n\nfn main() {\n    let s = new_summary(\"a\".to_string(), \"b\".to_string(), false);\n    //  ^ consider giving `s` a type\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240409192721-0kfo0h3","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240409192721-0kfo0h3","updated":"20240428144111"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cnVzdA=="},{"Type":"NodeCodeBlockCode","Data":"pub fn new_summary(username: String, \n                   content: String, \n                   is_news: bool) -\u003e Box\u003cdyn Summary\u003e {\n    if is_news {\n        Box::new(News { ... })\n    } else {\n        Box::new(Tweet { ... })\n    }\n}\n\nfn main() {\n    // Box\u003cdyn Summary\u003e\n    let s = new_summary(\"a\".to_string(), \"b\".to_string(), false);\n    // a: b\n    s.print();\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"Type":"NodeSuperBlockCloseMarker"}]},{"Type":"NodeSuperBlockCloseMarker"}]},{"ID":"20240409194105-2lmalrs","Type":"NodeParagraph","Properties":{"id":"20240409194105-2lmalrs","updated":"20240428152530"},"Children":[{"Type":"NodeText","Data":"Rust 允许不同 Trait 之间、Trait 与结构体的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"impl"},{"Type":"NodeText","Data":"​ 块之间存在同名函数："}]},{"ID":"20240428152130-36lj4ea","Type":"NodeList","ListData":{},"Properties":{"id":"20240428152130-36lj4ea","updated":"20240428152542"},"Children":[{"ID":"20240428152132-u3ybql9","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240428152132-u3ybql9","updated":"20240428152132"},"Children":[{"ID":"20240428152132-0h8y04s","Type":"NodeParagraph","Properties":{"id":"20240428152132-0h8y04s","updated":"20240428152210"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"对象.method_name()"},{"Type":"NodeText","Data":"​ 优先调用的是结构体 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"impl"},{"Type":"NodeText","Data":"​ 块上的方法实现"}]}]},{"ID":"20240428152133-lp0r9w4","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240428152133-lp0r9w4","updated":"20240428152542"},"Children":[{"ID":"20240428152133-o1zl90q","Type":"NodeParagraph","Properties":{"id":"20240428152133-o1zl90q","updated":"20240428152542"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"\u0026lt;StructType as TraitType\u0026gt;::method_name(...)"},{"Type":"NodeText","Data":"​ 使用完全的限定符访问特定 Trait 实现"}]}]},{"ID":"20240428152212-c8rjmt5","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240428152212-c8rjmt5","updated":"20240428152501"},"Children":[{"ID":"20240428152212-sl5e7we","Type":"NodeParagraph","Properties":{"id":"20240428152212-sl5e7we","updated":"20240428152501"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"TraitType::method_name(...)"},{"Type":"NodeText","Data":"​ 这样无法访问关联函数（第一个参数不是 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"self"},{"Type":"NodeText","Data":"​ 的函数）"}]}]}]},{"ID":"20240428152703-gfr3bea","Type":"NodeSuperBlock","Properties":{"id":"20240428152703-gfr3bea","updated":"20240428152703"},"Children":[{"Type":"NodeSuperBlockOpenMarker"},{"Type":"NodeSuperBlockLayoutMarker","Data":"col"},{"ID":"20240409194105-bupuxvw","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240409194105-bupuxvw","updated":"20240428152703"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cnVzdA=="},{"Type":"NodeCodeBlockCode","Data":"struct A;\n\ntrait Fn1 {\n    fn fun(\u0026self);\n}\n\nimpl A {\n    fn fun(\u0026self) { println!(\"Fun in A\"); }\n}\n\nimpl Fn1 for A {\n    fn fun(\u0026self) { println!(\"Fun in fn1\"); }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240428152259-ln086vm","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240428152259-ln086vm","updated":"20240428152703"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cnVzdA=="},{"Type":"NodeCodeBlockCode","Data":"fn main() {\n    A a {};\n    // Fun in A\n    a.fun();\n    // Fun in fn1\n    A.fun(\u0026a);\n    // Fun in fn1\n    \u003cA as Fn1\u003e::fun(\u0026a);\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"Type":"NodeSuperBlockCloseMarker"}]},{"ID":"20240428152647-olfiqpt","Type":"NodeParagraph","Properties":{"id":"20240428152647-olfiqpt"}}]}