{"ID":"20240409193135-jorm46u","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f980","id":"20240409193135-jorm46u","title":"关联类型","type":"doc","updated":"20240409193650"},"Children":[{"ID":"20240409193145-lkql3rt","Type":"NodeParagraph","Properties":{"id":"20240409193145-lkql3rt","updated":"20240409193155"},"Children":[{"Type":"NodeText","Data":"将类型占位符与 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"trait"},{"Type":"NodeText","Data":"​ 相关联，可以在方法签名中使用这些占位符类型，使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"type"},{"Type":"NodeText","Data":"​ 声明，使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Self"},{"Type":"NodeText","Data":"​ 访问。"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Self"},{"Type":"NodeText","Data":"​ 指向实现了当前 trait 的类型。"}]},{"ID":"20240409193350-mloxbaz","Type":"NodeSuperBlock","Properties":{"id":"20240409193350-mloxbaz","updated":"20240409193351"},"Children":[{"Type":"NodeSuperBlockOpenMarker"},{"Type":"NodeSuperBlockLayoutMarker","Data":"col"},{"ID":"20240409193145-3bh1ycm","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240409193145-3bh1ycm","updated":"20240409193351"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cnVzdA=="},{"Type":"NodeCodeBlockCode","Data":"pub struct Counter;\n\npub trait Iterator {\n    type Item;\n  \n    fn next(\u0026mut self) -\u003e Option\u003cSelf::Item\u003e;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240409193346-lvavafb","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240409193346-lvavafb","updated":"20240409193351"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cnVzdA=="},{"Type":"NodeCodeBlockCode","Data":"impl Iterator for Counter {\n    type Item = u32;\n\n    fn next(\u0026mut self) -\u003e Option\u003cSelf::Item\u003e {\n        // do something\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"Type":"NodeSuperBlockCloseMarker"}]},{"ID":"20240409193145-r83is9f","Type":"NodeParagraph","Properties":{"id":"20240409193145-r83is9f","style":"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);","updated":"20240409193650"},"Children":[{"Type":"NodeText","Data":"与泛型不同的是，关联类型无法多次实现。"}]},{"ID":"20240409193510-rr2jta4","Type":"NodeSuperBlock","Properties":{"id":"20240409193510-rr2jta4","updated":"20240409193638"},"Children":[{"Type":"NodeSuperBlockOpenMarker"},{"Type":"NodeSuperBlockLayoutMarker","Data":"col"},{"ID":"20240409193502-1uyj5ex","Type":"NodeSuperBlock","Properties":{"id":"20240409193502-1uyj5ex","updated":"20240409193638"},"Children":[{"Type":"NodeSuperBlockOpenMarker"},{"Type":"NodeSuperBlockLayoutMarker","Data":"row"},{"ID":"20240409193454-b9x0ewu","Type":"NodeParagraph","Properties":{"id":"20240409193454-b9x0ewu","updated":"20240409193454"},"Children":[{"Type":"NodeText","Data":"若是 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"fn next -\u0026gt; Option\u0026lt;T\u0026gt;"},{"Type":"NodeText","Data":"​ 的形式，则必须对每个类型实现一个 trait，如"}]},{"ID":"20240409193145-b7ecjzm","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240409193145-b7ecjzm","updated":"20240409193638"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cnVzdA=="},{"Type":"NodeCodeBlockCode","Data":"pub struct Counter;\n\npub trait Iterator {\n    type Item;\n\n    fn next(\u0026mut self) -\u003e Option\u003cSelf::Item\u003e;\n}\n\nimpl Iterator\u003ci32\u003e for Counter {\n    fn next(\u0026mut self) -\u003e Option\u003ci32\u003e {\n        todo!()\n    }\n}\n\nimpl Iterator\u003cu32\u003e for Counter {\n    fn next(\u0026mut self) -\u003e Option\u003cu32\u003e {\n        todo!()\n    }\n}\n\n// ...\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"Type":"NodeSuperBlockCloseMarker"}]},{"ID":"20240409193506-5547t2o","Type":"NodeSuperBlock","Properties":{"id":"20240409193506-5547t2o","updated":"20240409193554"},"Children":[{"Type":"NodeSuperBlockOpenMarker"},{"Type":"NodeSuperBlockLayoutMarker","Data":"row"},{"ID":"20240409193145-r6hvqn7","Type":"NodeParagraph","Properties":{"id":"20240409193145-r6hvqn7","updated":"20240409193506"},"Children":[{"Type":"NodeText","Data":"显然这不可能覆盖所有类型，而是用关联类型则可以实现"}]},{"ID":"20240409193145-pexikro","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240409193145-pexikro","updated":"20240409193554"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cnVzdA=="},{"Type":"NodeCodeBlockCode","Data":"pub struct Counter;\n\npub trait Iterator {\n    type Item;\n  \n    fn next(\u0026mut self) -\u003e Option\u003cSelf::Item\u003e;\n}\n\nimpl\u003cT\u003e Iterator for Counter {\n    type Item = T;\n\n    fn next(\u0026mut self) -\u003e Option\u003cT\u003e {\n        todo!()\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"Type":"NodeSuperBlockCloseMarker"}]},{"Type":"NodeSuperBlockCloseMarker"}]}]}