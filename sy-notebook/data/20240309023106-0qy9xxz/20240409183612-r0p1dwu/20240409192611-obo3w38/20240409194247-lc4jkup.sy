{"ID":"20240409194247-lc4jkup","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f980","id":"20240409194247-lc4jkup","title":"trait 继承","type":"doc","updated":"20240409194254"},"Children":[{"ID":"20240409194254-49g562k","Type":"NodeParagraph","Properties":{"id":"20240409194254-49g562k","updated":"20240409194254"},"Children":[{"Type":"NodeText","Data":"尽管结构体无法继承，但 trait 还是可以有继承关系的。使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":":"},{"Type":"NodeText","Data":"​ 声明继承关系"}]},{"ID":"20240409194254-1cgvfg7","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240409194254-1cgvfg7","updated":"20240409194254"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cnVzdA=="},{"Type":"NodeCodeBlockCode","Data":"trait A: fmt::Display {\n    fn fun_a();\n\n    fn outline_print(\u0026self) {\n        let output = self.to_string();\n        let len = output.len();\n        println!(\"{}\", \"*\".repeat(len + 4));\n        println!(\"*{}*\", \" \".repeat(len + 2));\n        println!(\"* {} *\", output);\n        println!(\"*{}*\", \" \".repeat(len + 2));\n        println!(\"{}\", \"*\".repeat(len + 4));\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}