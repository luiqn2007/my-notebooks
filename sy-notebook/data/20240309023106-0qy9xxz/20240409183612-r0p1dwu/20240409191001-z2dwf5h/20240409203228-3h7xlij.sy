{"ID":"20240409203228-3h7xlij","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f980","id":"20240409203228-3h7xlij","title":"枚举匹配","type":"doc","updated":"20240409203939"},"Children":[{"ID":"20240409203236-cu205tr","Type":"NodeParagraph","Properties":{"id":"20240409203236-cu205tr","updated":"20240409203236"},"Children":[{"Type":"NodeText","Data":"枚举数据可以通过 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"match"},{"Type":"NodeText","Data":"​ 访问"}]},{"ID":"20240409203236-5n2uwzf","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240409203236-5n2uwzf","updated":"20240409203236"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cnVzdA=="},{"Type":"NodeCodeBlockCode","Data":"enum Message {\n    Quit, // 不包含任何数据\n    Move { x: i32, y: i32 }, // 包含一个匿名结构体\n    Write(String), // 包含一个字符串\n    ChangeColor(i32, i32, i32) // 包含一个元组\n}\n\nimpl Message {\n    fn call(\u0026self) {\n        match self {\n            Message::Quit =\u003e println!(\"Quit!!!\"),\n            Message::Move {x, y} =\u003e println!(\"Move to ({}, {})\", x, y),\n            Message::Write(str) =\u003e println!(\"Write {}\", str),\n            Message::ChangeColor(r, g, b) =\u003e println!(\"Change to ({}, {}, {})\", r, g, b)\n        }\n    }\n}\n\nfn main() {\n    // Quit!!!\n    Message::Quit.call();\n    // Move to (2, 3)\n    Message::Move { x: 2, y: 3 }.call();\n    // Write messages...\n    Message::Write(String::from(\"messages...\")).call();\n    // Change to (5, 3, 2)\n    Message::ChangeColor(5, 3, 2).call();\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240409203236-lsimv80","Type":"NodeParagraph","Properties":{"id":"20240409203236-lsimv80","updated":"20240409203236"},"Children":[{"Type":"NodeText","Data":"若 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"match"},{"Type":"NodeText","Data":"​ 没有覆盖所有可能情况，使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"other"},{"Type":"NodeText","Data":"​ 或 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"_"},{"Type":"NodeText","Data":"​ 作为兜底；若不需要任何操作，使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"()"},{"Type":"NodeText","Data":"​"}]},{"ID":"20240409203236-df4qxqu","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240409203236-df4qxqu","updated":"20240409203236"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cnVzdA=="},{"Type":"NodeCodeBlockCode","Data":"impl Message {\n    fn call(\u0026self) {\n        match self {\n            Message::Move {x, y} =\u003e println!(\"Move to ({}, {})\", x, y),\n            Message::Write(str) =\u003e println!(\"Write {}\", str),\n            Message::ChangeColor(r, g, b) =\u003e println!(\"Change to ({}, {}, {})\", r, g, b)，\n            // 现在 我不需要 Quit 做任何事了\n            _ =\u003e ()\n        }\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240409203236-lpivhnu","Type":"NodeParagraph","Properties":{"id":"20240409203236-lpivhnu","updated":"20240409203939"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"if let"},{"Type":"NodeText","Data":"​ 表达式可以看作是 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"match"},{"Type":"NodeText","Data":"​ 的一个语法糖，当 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"match"},{"Type":"NodeText","Data":"​ 过于啰嗦时可以考虑使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"if let"},{"Type":"NodeText","Data":"​ 处理匹配"}]},{"ID":"20240409203236-ch88602","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240409203236-ch88602","updated":"20240409203236"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cnVzdA=="},{"Type":"NodeCodeBlockCode","Data":"fn main() {\n    let some_u8_value1 = Some(3u8);\n    // Value1 is 3\n    if let Some(i) = some_u8_value1 {\n        println!(\"Value1 is {}\", i)\n    }\n\n    // Value2 is NONE\n    let some_u8_value2: Option\u003cu8\u003e = None;\n    if let Some(i) = some_u8_value2 {\n        println!(\"Value2 is {}\", i)\n    } else {\n        println!(\"Value2 is NONE\")\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240409203935-18n11at","Type":"NodeParagraph","Properties":{"id":"20240409203935-18n11at"}}]}