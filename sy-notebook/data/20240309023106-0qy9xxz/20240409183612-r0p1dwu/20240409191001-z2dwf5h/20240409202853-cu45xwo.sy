{"ID":"20240409202853-cu45xwo","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f980","id":"20240409202853-cu45xwo","title":"忽略","type":"doc","updated":"20240409202915"},"Children":[{"ID":"20240409202900-dpetcm7","Type":"NodeParagraph","Properties":{"id":"20240409202900-dpetcm7","updated":"20240409202900"},"Children":[{"Type":"NodeText","Data":"使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"_"},{"Type":"NodeText","Data":"​ 可以匹配并不绑定一个值，常用于 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"match"},{"Type":"NodeText","Data":"​ 最后一个分支，但也可以用于其他可使用模式的地方"}]},{"ID":"20240409202900-avpc8a1","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240409202900-avpc8a1","updated":"20240409202900"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cnVzdA=="},{"Type":"NodeCodeBlockCode","Data":"fn foo(_: i32, y: i32) { /*...*/ }\n\nfn main() {\n    let numbers = (2, 4, 8, 16, 32);\n    let (first, _, third, _, fifth) = numbers;\n    // 2, 8, 32\n    println!(\"{}, {}, {}\", first, third, fifth);\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240409202900-kw00sli","Type":"NodeParagraph","Properties":{"id":"20240409202900-kw00sli","updated":"20240409202907"},"Children":[{"Type":"NodeText","Data":"使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":".."},{"Type":"NodeText","Data":"​ 忽略剩余多个值并不绑定，但 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":".."},{"Type":"NodeText","Data":"​ 的使用必须是无歧义的"}]},{"ID":"20240409202909-uuatb6m","Type":"NodeSuperBlock","Properties":{"id":"20240409202909-uuatb6m","updated":"20240409202915"},"Children":[{"Type":"NodeSuperBlockOpenMarker"},{"Type":"NodeSuperBlockLayoutMarker","Data":"col"},{"ID":"20240409202900-qkr2be2","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240409202900-qkr2be2","updated":"20240409202915"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cnVzdA=="},{"Type":"NodeCodeBlockCode","Data":"struct Point {\n    x: i32,\n    y: i32,\n    z: i32\n}\n\nfn main() {\n    let point = Point { x: 0, y: 1, z: 2 };\n    let Point { z, .. } = point;\n    // z = 2\n    println!(\"z = {}\", z)\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240409202900-yb4hjjs","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240409202900-yb4hjjs","updated":"20240409202915"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cnVzdA=="},{"Type":"NodeCodeBlockCode","Data":"fn main() {\n    let numbers = (2, 4, 8, 16, 32);\n    // let (.., second, ..) = numbers;\n    //      --          ^^ can only be used once per tuple pattern\n    //      |\n    //      previously used here\n    let (.., second, ..) = numbers;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"Type":"NodeSuperBlockCloseMarker"}]},{"ID":"20240409202900-d7ijcz2","Type":"NodeParagraph","Properties":{"id":"20240409202900-d7ijcz2","updated":"20240409202905"}}]}