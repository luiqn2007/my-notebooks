{"ID":"20240409220608-5bpu5kl","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f980","id":"20240409220608-5bpu5kl","title":"Drop","type":"doc","updated":"20240409220626"},"Children":[{"ID":"20240409220626-45eioo9","Type":"NodeParagraph","Properties":{"id":"20240409220626-45eioo9","updated":"20240409220626"},"Children":[{"Type":"NodeText","Data":"实现 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Drop"},{"Type":"NodeText","Data":"​ 接口后可自定义离开作用域时执行的代码，类似 C++ 的析构函数"}]},{"ID":"20240409220626-04zl9oj","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240409220626-04zl9oj","updated":"20240409220626"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cnVzdA=="},{"Type":"NodeCodeBlockCode","Data":"impl\u003cT\u003e Drop for MyBox\u003cT\u003e {\n\n    fn drop(\u0026mut self) {\n        // 一个假的释放方法\n        println!(\"{}\", \"Pointer dropped!\");\n    }\n}\n\nfn main() {\n    let s = MyBox(String::from(\"abc\"));\n}\n// Pointer dropped!\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240409220626-7s9gc6z","Type":"NodeParagraph","Properties":{"id":"20240409220626-7s9gc6z","updated":"20240409220626"},"Children":[{"Type":"NodeText","Data":"我们无法直接调用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"drop"},{"Type":"NodeText","Data":"​ 方法释放一个数据。如果要手动释放的话，需要使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"std::mem::drop"},{"Type":"NodeText","Data":"​"}]}]}