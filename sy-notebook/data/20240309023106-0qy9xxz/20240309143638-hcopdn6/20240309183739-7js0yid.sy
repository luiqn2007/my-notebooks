{"ID":"20240309183739-7js0yid","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f468-200d-1f9bd","id":"20240309183739-7js0yid","title":"类型推断","type":"doc","updated":"20240404144934"},"Children":[{"ID":"20240404144828-mu4da9r","Type":"NodeSuperBlock","Properties":{"bookmark":"Java10","id":"20240404144828-mu4da9r","updated":"20240404144846"},"Children":[{"Type":"NodeSuperBlockOpenMarker"},{"Type":"NodeSuperBlockLayoutMarker","Data":"row"},{"ID":"20240309183739-f8pfxvp","Type":"NodeParagraph","Properties":{"id":"20240309183739-f8pfxvp","updated":"20240404144829"},"Children":[{"Type":"NodeText","Data":"可以使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"var"},{"Type":"NodeText","Data":"​ 进行局部变量声明的类型推断，仅用于方法的局部变量、"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"for"},{"Type":"NodeText","Data":"​ 和增强 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"for"},{"Type":"NodeText","Data":"​ 循环中，且声明时变量必须初始化。"}]},{"ID":"20240309183915-obsnkuu","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240309183915-obsnkuu","updated":"20240404144829"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"var a = \"This is a String\";\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240309183939-18crabs","Type":"NodeParagraph","Properties":{"id":"20240309183939-18crabs","style":"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);","updated":"20240404144829"},"Children":[{"Type":"NodeText","Data":"注意，"},{"Type":"NodeTextMark","Properties":{"parent-style":"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);"},"TextMarkType":"code","TextMarkTextContent":"var"},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);\"}"},{"Type":"NodeText","Data":"​ 只是由编译器自动推断类型，类似 C++ 的 "},{"Type":"NodeTextMark","Properties":{"parent-style":"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);"},"TextMarkType":"code","TextMarkTextContent":"auto"},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);\"}"},{"Type":"NodeText","Data":"​，仍不能打破 Java 每个变量类型不可变的规则"}]},{"Type":"NodeSuperBlockCloseMarker"}]},{"ID":"20240403004459-gx9wrux","Type":"NodeSuperBlock","Properties":{"bookmark":"Java11","id":"20240403004459-gx9wrux","updated":"20240404144854"},"Children":[{"Type":"NodeSuperBlockOpenMarker"},{"Type":"NodeSuperBlockLayoutMarker","Data":"row"},{"ID":"20240403004453-3nbfkqd","Type":"NodeParagraph","Properties":{"id":"20240403004453-3nbfkqd","updated":"20240404144854"},"Children":[{"Type":"NodeText","Data":"允许在 lambda 表达式中使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"var"},{"Type":"NodeText","Data":"​ 进行类型推断"}]},{"ID":"20240403004453-h1r8z7r","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240403004453-h1r8z7r","updated":"20240403004500"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"// interface: (int, int) -\u003e void\n(var x, var y) -\u003e { /*...*/ }\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"Type":"NodeSuperBlockCloseMarker"}]},{"ID":"20240404144941-w08gom1","Type":"NodeSuperBlock","Properties":{"bookmark":"Java9","id":"20240404144941-w08gom1","updated":"20240404144942"},"Children":[{"Type":"NodeSuperBlockOpenMarker"},{"Type":"NodeSuperBlockLayoutMarker","Data":"row"},{"ID":"20240309174826-ihbk5h3","Type":"NodeParagraph","Properties":{"id":"20240309174826-ihbk5h3","updated":"20240404144942"},"Children":[{"Type":"NodeText","Data":"Java9 后，允许在创建内部类时自动推断内部类泛型的类型"}]},{"ID":"20240309174853-wtot8mn","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240309174853-wtot8mn","updated":"20240404144942"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"interface A\u003cT\u003e {\n    void a(T p);\n}\n\nprivate void privateMethod() {\n    // A\u003c\u003e 推断为 A\u003cString\u003e\n    A\u003cString\u003e a = new A\u003c\u003e() {\n        @Override\n        public void a(String p) {\n            System.out.println(a);\n        }\n    };\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"Type":"NodeSuperBlockCloseMarker"}]}]}