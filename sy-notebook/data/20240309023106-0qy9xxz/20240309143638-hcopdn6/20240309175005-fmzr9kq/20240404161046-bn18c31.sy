{"ID":"20240404161046-bn18c31","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f468-200d-1f9bd","id":"20240404161046-bn18c31","tags":"Java21,实验性功能","title":"Unnamed Patterns and Variables","type":"doc","updated":"20240404161055"},"Children":[{"ID":"20240404161055-vdbsp8o","Type":"NodeParagraph","Properties":{"id":"20240404161055-vdbsp8o","updated":"20240404161055"},"Children":[{"Type":"NodeText","Data":"JEP443，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"_"},{"Type":"NodeText","Data":"​ 可以表示未命名的变量，以及模式匹配时不使用的组件。"}]},{"ID":"20240404161055-5hgwytu","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240404161055-5hgwytu","updated":"20240404161055"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"try (var _ = ScopedContext.acquire()) {\n    // do something\n}\n\ntry { ... } \ncatch (Exception _) { ... } \ncatch (Throwable _) { ... }\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240404161055-ehcyuln","Type":"NodeParagraph","Properties":{"id":"20240404161055-ehcyuln","updated":"20240404161055"},"Children":[{"Type":"NodeText","Data":"未命名模式是一个无条件的模式，并不绑定任何值。未命名模式变量出现在类型模式中。"}]},{"ID":"20240404161055-egv60ga","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240404161055-egv60ga","updated":"20240404161055"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"if (r instanceof ColoredPoint(_, Color c)) { ... c ... }\n\nswitch (b) {\n    case Box(RedBall _), Box(BlueBall _) -\u003e processBox(b);\n    case Box(GreenBall _)                -\u003e stopProcessing();\n    case Box(_)                          -\u003e pickAnotherBox();\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}