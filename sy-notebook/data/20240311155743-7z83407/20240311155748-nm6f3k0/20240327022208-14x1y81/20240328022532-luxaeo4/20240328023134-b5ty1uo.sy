{"ID":"20240328023134-b5ty1uo","Spec":"1","Type":"NodeDocument","Properties":{"icon":"spring.png","id":"20240328023134-b5ty1uo","title":"Spring replaced-method 元素","type":"doc","updated":"20240328235106"},"Children":[{"ID":"20240328023134-kre8s8b","Type":"NodeParagraph","Properties":{"id":"20240328023134-kre8s8b","updated":"20240328234004"},"Children":[{"Type":"NodeText","Data":"通过"},{"Type":"NodeTextMark","TextMarkType":"block-ref","TextMarkBlockRefID":"20240328230454-evqg0to","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"方法注入"},{"Type":"NodeText","Data":"，还可以使 Spring 重新实现 bean 对象的某个特定方法，使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"\u0026lt;replaced-method\u0026gt;"},{"Type":"NodeText","Data":"​ 标签指定。"}]},{"ID":"20240328234129-75hx3sj","Type":"NodeParagraph","Properties":{"id":"20240328234129-75hx3sj","updated":"20240328234215"},"Children":[{"Type":"NodeText","Data":"首先，创建 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"bean"},{"Type":"NodeText","Data":"​ 类，下面的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"getMyBean"},{"Type":"NodeText","Data":"​ 方法即要重写的方法"}]},{"ID":"20240328230918-ikquavh","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240328230918-ikquavh","updated":"20240328234222"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"public class ReplacedMethodBean {\n  \n    public Object getMyBean(String beanName) {\n        return null;\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240328234127-w991gnf","Type":"NodeParagraph","Properties":{"id":"20240328234127-w991gnf","updated":"20240328234600"},"Children":[{"Type":"NodeText","Data":"然后，我们要生成重写该方法的代理类。该类应实现 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"MethodReplacer"},{"Type":"NodeText","Data":"​ 接口。由于这也是一个 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"bean"},{"Type":"NodeText","Data":"​ 类，我们也可以让他实现 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"ApplicationContextAware"},{"Type":"NodeText","Data":"​ 接口。"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"reimplement"},{"Type":"NodeText","Data":"​ 的返回值即代理方法的返回值。"}]},{"ID":"20240328234345-ay5wv7a","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240328234345-ay5wv7a","updated":"20240328234541"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"@Setter\npublic class MyMethodReplacer implements MethodReplacer, ApplicationContextAware {\n\n    private ApplicationContext applicationContext;\n\n    @Override\n    public Object reimplement(Object obj, Method method, Object[] args) throws Throwable {\n        if (\"getMyBean\".equals(method.getName())) {\n            return applicationContext.getBean((String) args[0]);\n        }\n        return null;\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240328234544-ob2pf1q","Type":"NodeParagraph","Properties":{"id":"20240328234544-ob2pf1q","updated":"20240328234631"},"Children":[{"Type":"NodeText","Data":"最后，在 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"XML"},{"Type":"NodeText","Data":"​ 中进行配置："}]},{"ID":"20240328234631-v815ltb","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240328234631-v815ltb","updated":"20240328234945"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"eG1s"},{"Type":"NodeCodeBlockCode","Data":"\u003cbean id=\"myMethodReplacer\" class=\"com.example.mybank.bean.MyMethodReplacer\" /\u003e\n\u003cbean id=\"replacedMethod\" class=\"com.example.mybank.bean.ReplacedMethodBean\"\u003e\n    \u003c!-- 使用 myMethodReplacer 代理 getMyBean  --\u003e\n    \u003creplaced-method name=\"getMyBean\" replacer=\"myMethodReplacer\" /\u003e\n\u003c/bean\u003e\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240328234847-e82p5nk","Type":"NodeParagraph","Properties":{"id":"20240328234847-e82p5nk","updated":"20240328234958"},"Children":[{"Type":"NodeText","Data":"除了根据名称选择 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"MethodReplacer"},{"Type":"NodeText","Data":"​，我们还可以通过参数选择函数重载"}]},{"ID":"20240328234958-qzgb7tm","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240328234958-qzgb7tm","updated":"20240328235106"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"eG1s"},{"Type":"NodeCodeBlockCode","Data":"\u003cbean id=\"replacedMethod\" class=\"com.example.mybank.bean.ReplacedMethodBean\"\u003e\n    \u003c!-- 选择重载: getMyBean(String, String) --\u003e\n    \u003creplaced-method name=\"getMyBean\" replacer=\"myMethodReplacer\"\u003e\n        \u003carg-type\u003ejava.lang.String\u003c/arg-type\u003e\n        \u003carg-type\u003ejava.lang.String\u003c/arg-type\u003e\n    \u003c/replaced-method\u003e\n\u003c/bean\u003e\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}