{"ID":"20240424165009-e0otu0p","Spec":"1","Type":"NodeDocument","Properties":{"icon":"spring.png","id":"20240424165009-e0otu0p","title":"缓存模型特性","type":"doc","updated":"20240424180623"},"Children":[{"ID":"20240424165009-uieh4pt","Type":"NodeParagraph","Properties":{"id":"20240424165009-uieh4pt","updated":"20240424165746"},"Children":[{"Type":"NodeText","Data":"当模型特性代价较高，如需要访问数据库或需要外部 Web 服务提供数据，每次请求都创建一个模型特性代价很大。此时可以使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"@SessionAttribute"},{"Type":"NodeText","Data":"​ 或 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"@SessionAttributess"},{"Type":"NodeText","Data":"​ 将缓存特性缓存到当前 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"HttpSession"},{"Type":"NodeText","Data":"​ 中。一个会话中只会在缓存特性不存在时创建。"}]},{"ID":"20240424165747-27phf09","Type":"NodeParagraph","Properties":{"id":"20240424165747-27phf09","style":"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);","updated":"20240424165812"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","Properties":{"parent-style":"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);"},"TextMarkType":"code","TextMarkTextContent":"@SessionAttribute"},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);\"}"},{"Type":"NodeText","Data":"​ 或 "},{"Type":"NodeTextMark","Properties":{"parent-style":"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);"},"TextMarkType":"code","TextMarkTextContent":"@SessionAttributess"},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);\"}"},{"Type":"NodeText","Data":"​ 常用于 "},{"Type":"NodeTextMark","Properties":{"parent-style":"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);"},"TextMarkType":"code","TextMarkTextContent":"Controller"},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"color: var(--b3-card-warning-color);background-color: var(--b3-card-warning-background);\"}"},{"Type":"NodeText","Data":"​ 类"}]},{"ID":"20240424165322-o7c4p87","Type":"NodeList","ListData":{},"Properties":{"id":"20240424165322-o7c4p87","updated":"20240424180623"},"Children":[{"ID":"20240424165323-r2ig217","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240424165323-r2ig217","updated":"20240424175307"},"Children":[{"ID":"20240424165323-q604b22","Type":"NodeParagraph","Properties":{"id":"20240424165323-q604b22","updated":"20240424165911"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"value"},{"Type":"NodeText","Data":"​ 或 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"name"},{"Type":"NodeText","Data":"​ 属性可用于指定需要缓存的模型特性"}]},{"ID":"20240424172859-rvspvnk","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240424172859-rvspvnk","updated":"20240424175307"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"@Controller\n// 为 newFixedDepositDetails 和 editableFixedDepositDetails 添加缓存\n@SessionAttributes(value = {\"newFixedDepositDetails\", \"editableFixedDepositDetails\"},\n                   types = FixedDepositDetails.class)\npublic class FixedDepositController {\n    // ...\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]},{"ID":"20240424165326-w69a8lu","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240424165326-w69a8lu","updated":"20240424180623"},"Children":[{"ID":"20240424165326-7ne5rm2","Type":"NodeParagraph","Properties":{"id":"20240424165326-7ne5rm2","updated":"20240424165624"},"Children":[{"Type":"NodeText","Data":"使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"SessionStatus"},{"Type":"NodeText","Data":"​ 对象的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"setComplete"},{"Type":"NodeText","Data":"​ 方法可以从 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"HttpSession"},{"Type":"NodeText","Data":"​ 中移除该缓存"}]},{"ID":"20240424172903-alqpint","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240424172903-alqpint","updated":"20240424180540"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"// 创建 newFixedDepositDetails 模型特性\n@ModelAttribute(\"newFixedDepositDetails\")\npublic FixedDepositDetails getNewFixedDepositDetails() {\n    // ...\n}\n\n@PostMapping(params = \"fdAction=create\")\npublic String openFixedDeposit(@ModelAttribute(\"newFixedDepositDetails\")\n                               FixedDepositDetails fixedDepositDetails, \n                               Model model,\n                               SessionStatus sessionStatus) {\n    // ...\n    if (errors.isEmpty()) {\n        // ...\n        fixedDepositService.createFixedDeposit(fixedDepositDetails);\n        // 当保存成功时，不再需要 newFixedDepositDetails，调用方法使缓存失效\n        sessionStatus.setComplete();\n        return \"redirect:/fixedDeposit/list\";\n    } else {\n        model.addAttribute(\"errors\", errors);\n        return \"createFixedDepositForm\";\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240424180549-bo3km7c","Type":"NodeParagraph","Properties":{"id":"20240424180549-bo3km7c","updated":"20240424180623"},"Children":[{"Type":"NodeText","Data":"只要是模型数据中的对应名称（和类型）的变量都会自动加入（更新）缓存"}]},{"ID":"20240424180531-exzw08s","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240424180531-exzw08s","updated":"20240424180538"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"@GetMapping(params = \"fdAction=view\")\npublic ModelAndView viewFixedDepositDetails(@RequestParam int fixedDepositId) {\n    FixedDepositDetails fixedDepositDetails = fixedDepositService.getFixedDepositDetails(fixedDepositId);\n    Map\u003cString, Object\u003e modelMap = new HashMap\u003c\u003e();\n    // 这里在请求里创建了 editableFixedDepositDetails，会自动添加到缓存\n    modelMap.put(\"editableFixedDepositDetails\", fixedDepositDetails);\n    LOGGER.info(\"viewFixedDepositDetails() method: Fixed deposit details loaded from data store. Showing form for editing the loaded fixed deposit.\");\n    return new ModelAndView(\"editFixedDepositForm\", modelMap);\n}\n\n@PostMapping(params = \"fdAction=edit\")\npublic String editDeposit(@ModelAttribute(\"editableFixedDepositDetails\")\n                          FixedDepositDetails fixedDepositDetails, \n                          Model model,\n                          SessionStatus sessionStatus) {\n    // ...\n    if (errors.isEmpty()) {\n        // ...\n        fixedDepositService.createFixedDeposit(fixedDepositDetails);\n        // 当保存成功时，不再需要 editableFixedDepositDetails，调用方法使缓存失效\n        sessionStatus.setComplete();\n        return \"redirect:/fixedDeposit/list\";\n    } else {\n        model.addAttribute(\"errors\", errors);\n        return \"editFixedDepositForm\";\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}]},{"ID":"20240424165732-uiida3h","Type":"NodeParagraph","Properties":{"id":"20240424165732-uiida3h"}}]}