{"ID":"20240425161155-wh1dmp4","Spec":"1","Type":"NodeDocument","Properties":{"icon":"spring.png","id":"20240425161155-wh1dmp4","title":"RESTful 客户端","type":"doc","updated":"20240425165231"},"Children":[{"ID":"20240425161155-nkn6b5e","Type":"NodeParagraph","Properties":{"id":"20240425161155-nkn6b5e","updated":"20240425161625"},"Children":[{"Type":"NodeText","Data":"Spring 提供 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"RestTemplate"},{"Type":"NodeText","Data":"​ 用于同步访问 RESTful 服务，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"WebClient"},{"Type":"NodeText","Data":"​ 用于异步访问 RESTful 服务。"}]},{"ID":"20240425161626-gex74xp","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20240425161626-gex74xp","updated":"20240425163955"},"Children":[{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"RestTemplate"},{"Type":"NodeText","Data":"​"}]},{"ID":"20240425163955-vv888kb","Type":"NodeParagraph","Properties":{"id":"20240425163955-vv888kb","updated":"20240425163958"},"Children":[{"Type":"NodeText","Data":"同步访问 RESTful 服务"}]},{"ID":"20240425163614-eqscrhk","Type":"NodeSuperBlock","Properties":{"id":"20240425163614-eqscrhk","updated":"20240425163955"},"Children":[{"Type":"NodeSuperBlockOpenMarker"},{"Type":"NodeSuperBlockLayoutMarker","Data":"col"},{"ID":"20240425161636-cieviif","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240425161636-cieviif","updated":"20240425163615"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"@Bean\npublic RestTemplate restTemplate() {\n    RestTemplate restTemplate = new RestTemplate();\n    restTemplate.setErrorHandler(new DefaultResponseErrorHandler());\n    return restTemplate;\n}\n\nclass MyErrorHandler extends DefaultResponseErrorHandler {\n\n    private static Logger LOGGER = LogManager.getLogger();\n  \n    @Override\n    protected void handleError(ClientHttpResponse response, \n                               HttpStatusCode statusCode) throws IOException {\n        LOGGER.warn(\"Status code received from service: {}\", statusCode);\n        String body = StreamUtils.copyToString(response.getBody(), \n                                               StandardCharsets.UTF_8);\n        LOGGER.warn(\"Response body: {}\", body);\n        super.handleError(response, statusCode);\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240425162400-41iin55","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240425162400-41iin55","updated":"20240425163703"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"public static void main(String[] args) {\n    ConfigurableApplicationContext context = \n                               SpringApplication.run(BankApp.class);\n    RestTemplate restTemplate = context.getBean(RestTemplate.class);\n    getFixedDepositList(restTemplate);\n}\n\nvoid getFixedDepositList(RestTemplate restTemplate) {\n    HttpHeaders headers = new HttpHeaders();\n    headers.add(\"Accept\", \"application/json\");\n    HttpEntity\u003cList\u003cFixedDepositDetails\u003e\u003e request = new HttpEntity\u003c\u003e(headers);\n    ParameterizedTypeReference\u003cList\u003cFixedDepositDetails\u003e\u003e typeRef\n            = new ParameterizedTypeReference\u003c\u003e() {};\n\n    ResponseEntity\u003cList\u003cFixedDepositDetails\u003e\u003e response = restTemplate\n            .exchange(\"http://localhost:8080/fixedDeposits\",\n                      HttpMethod.GET, request, typeRef);\n\n    List\u003cFixedDepositDetails\u003e depositDetails = response.getBody();\n    LOGGER.info(\"List of fixed deposit details: \\n{}\", depositDetails);\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"Type":"NodeSuperBlockCloseMarker"}]},{"ID":"20240425161631-2pcxq1u","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20240425161631-2pcxq1u","updated":"20240425161634"},"Children":[{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"WebClient"},{"Type":"NodeText","Data":"​"}]},{"ID":"20240425163706-ct1v10y","Type":"NodeParagraph","Properties":{"id":"20240425163706-ct1v10y","updated":"20240425164000"},"Children":[{"Type":"NodeText","Data":"异步访问 RESTful 服务"}]},{"ID":"20240425164531-cz1y75y","Type":"NodeParagraph","Properties":{"id":"20240425164531-cz1y75y","style":"color: var(--b3-card-info-color);background-color: var(--b3-card-info-background);","updated":"20240425164545"},"Children":[{"Type":"NodeText","Data":"依赖：\n​"},{"Type":"NodeTextMark","Properties":{"parent-style":"color: var(--b3-card-info-color);background-color: var(--b3-card-info-background);"},"TextMarkType":"code","TextMarkTextContent":"implementation 'org.springframework.boot:spring-boot-starter-webflux'"},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"color: var(--b3-card-info-color);background-color: var(--b3-card-info-background);\"}"},{"Type":"NodeText","Data":"​\n​"},{"Type":"NodeTextMark","Properties":{"parent-style":"color: var(--b3-card-info-color);background-color: var(--b3-card-info-background);"},"TextMarkType":"code","TextMarkTextContent":"testImplementation 'io.projectreactor:reactor-test'"},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"color: var(--b3-card-info-color);background-color: var(--b3-card-info-background);\"}"},{"Type":"NodeText","Data":"​"}]},{"ID":"20240425164001-5uh1h4p","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240425164001-5uh1h4p","updated":"20240425165230"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"WebClient webClient = WebClient.create(\"http://localhost:8080\");\nwebClient.get().uri(\"/fixedDeposits\")\n        .accept(MediaType.APPLICATION_JSON)\n        .retrieve() // 发送请求并接收相应\n        .bodyToFlux(FixedDepositDetails.class)\n        .subscribe(fdd -\u003e LOGGER.info(\"getFixedDepositList: receive {}\", fdd));\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240425165231-jf4mux3","Type":"NodeParagraph","Properties":{"id":"20240425165231-jf4mux3"}}]}