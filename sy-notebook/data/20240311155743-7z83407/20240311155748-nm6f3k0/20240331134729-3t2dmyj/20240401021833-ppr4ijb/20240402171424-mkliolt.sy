{"ID":"20240402171424-mkliolt","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f4e6","id":"20240402171424-mkliolt","title":"NamedParameterJdbcTemplate","type":"doc","updated":"20240402172558"},"Children":[{"ID":"20240402171447-yvd19i3","Type":"NodeParagraph","Properties":{"id":"20240402171447-yvd19i3","updated":"20240402172558"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"NamedParameterJdbcTemplate"},{"Type":"NodeText","Data":"​ 是 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"JdbcTemplate"},{"Type":"NodeText","Data":"​ 的一个包装类。该类允许将 SQL 中的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"?"},{"Type":"NodeText","Data":"​ 替换成以 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":":"},{"Type":"NodeText","Data":"​ 开头的名称作为占位符"}]},{"ID":"20240402171447-76g9yd1","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240402171447-76g9yd1","updated":"20240402171447"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"@Bean\npublic NamedParameterJdbcTemplate jdbcTemplate(DataSource dataSource) {\n    return new NamedParameterJdbcTemplate(dataSource);\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240402171447-ggfrbu9","Type":"NodeParagraph","Properties":{"id":"20240402171447-ggfrbu9","updated":"20240402171447"},"Children":[{"Type":"NodeText","Data":"之后，可以通过 Map 传入对应的参数；如果只有一个参数，则可以直接创建 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"SqlParameterSource"},{"Type":"NodeText","Data":"​"}]},{"ID":"20240402171447-bo4t5vp","Type":"NodeParagraph","Properties":{"id":"20240402171447-bo4t5vp","style":"color: var(--b3-card-success-color);background-color: var(--b3-card-success-background);","updated":"20240402171447"},"Children":[{"Type":"NodeText","Data":"包含多种 "},{"Type":"NodeTextMark","Properties":{"parent-style":"color: var(--b3-card-success-color);background-color: var(--b3-card-success-background);"},"TextMarkType":"code","TextMarkTextContent":"query"},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"color: var(--b3-card-success-color);background-color: var(--b3-card-success-background);\"}"},{"Type":"NodeText","Data":"​ 方法，"},{"Type":"NodeTextMark","Properties":{"parent-style":"color: var(--b3-card-success-color);background-color: var(--b3-card-success-background);"},"TextMarkType":"code","TextMarkTextContent":"queryForObject"},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"color: var(--b3-card-success-color);background-color: var(--b3-card-success-background);\"}"},{"Type":"NodeText","Data":"​ 可以通过返回值创建一个对象，"},{"Type":"NodeTextMark","Properties":{"parent-style":"color: var(--b3-card-success-color);background-color: var(--b3-card-success-background);"},"TextMarkType":"code","TextMarkTextContent":"queryForList"},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"color: var(--b3-card-success-color);background-color: var(--b3-card-success-background);\"}"},{"Type":"NodeText","Data":"​ 可以返回 "},{"Type":"NodeTextMark","Properties":{"parent-style":"color: var(--b3-card-success-color);background-color: var(--b3-card-success-background);"},"TextMarkType":"code","TextMarkTextContent":"List"},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"color: var(--b3-card-success-color);background-color: var(--b3-card-success-background);\"}"},{"Type":"NodeText","Data":"​ 等"}]},{"ID":"20240402171447-jdz4468","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240402171447-jdz4468","updated":"20240402171447"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"@Autowired\nprivate NamedParameterJdbcTemplate jdbcTemplate;\n\nprivate static final String SQL_CREATE_FIXED_DETAIL =\n        \"insert into fixed_deposit_details(ACCOUNT_ID, FD_CREATION_DATE, AMOUNT, TENURE, ACTIVE) \" +\n        \"value (:account, :creation_date, :amount, :tenure, :active)\";\nprivate static final String SQL_QUERY_DEPOSIT_BY_ID =\n        \"select * from fixed_deposit_details where FIXED_DEPOSIT_ID = :id\";\n\n// 使用 Map 传入多个参数\npublic int createFixedDetail(FixedDepositDetails fixedDepositDetails) {\n    Map\u003cString, Object\u003e parameters = new HashMap\u003c\u003e();\n    parameters.put(\"account\", fixedDepositDetails.getBankAccountId());\n    parameters.put(\"creation_date\", new Date(fixedDepositDetails.getCreationDate().getTime()));\n    parameters.put(\"amount\", fixedDepositDetails.getDepositAmount());\n    parameters.put(\"tenure\", fixedDepositDetails.getTenure());\n    parameters.put(\"active\", fixedDepositDetails.isActive() ? \"Y\" : \"N\");\n    MapSqlParameterSource parameterSource = new MapSqlParameterSource(parameters);\n    KeyHolder keyHolder = new GeneratedKeyHolder();\n    jdbcTemplate.update(SQL_CREATE_FIXED_DETAIL, parameterSource, keyHolder);\n    // 通过 KeyHolder 获取返回的 GENERATED_KEY 获取主键自增的主键，返回值是一个 BigInteger\n    int fixedDepositId = ((Number) keyHolder.getKeys().get(\"GENERATED_KEY\")).intValue();\n    fixedDepositDetails.setId(fixedDepositId);\n    return fixedDepositId;\n}\n\n// 只有一个参数，直接创建 SqlParameterSource\npublic FixedDepositDetails getFixedDeposit(int id) {\n    SqlParameterSource parameters = new MapSqlParameterSource(\"id\", id);\n    return jdbcTemplate.queryForObject(SQL_QUERY_DEPOSIT_BY_ID, parameters, (rowSet, rowNum) -\u003e new FixedDepositDetails(\n            rowSet.getInt(\"FIXED_DEPOSIT_ID\"),\n            rowSet.getInt(\"ACCOUNT_ID\"),\n            rowSet.getDate(\"FD_CREATION_DATE\"),\n            rowSet.getInt(\"AMOUNT\"),\n            rowSet.getInt(\"TENURE\"),\n            rowSet.getString(\"ACTIVE\").equals(\"Y\")\n    ));\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240402171447-4ii7eqi","Type":"NodeParagraph","Properties":{"id":"20240402171447-4ii7eqi","updated":"20240402171447"}}]}