{"ID":"20240615201134-gd03zag","Spec":"1","Type":"NodeDocument","Properties":{"icon":"qt6.ico","id":"20240615201134-gd03zag","title":"事件过滤","type":"doc","updated":"20240615202709"},"Children":[{"ID":"20240615201134-xqheitb","Type":"NodeParagraph","Properties":{"id":"20240615201134-xqheitb","updated":"20240615201432"},"Children":[{"Type":"NodeText","Data":"事件过滤 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"eventfilter"},{"Type":"NodeText","Data":"​ 允许将一个控件的事件委托给另一个控件检测并处理。"}]},{"ID":"20240615201318-ebdc4bh","Type":"NodeParagraph","Properties":{"id":"20240615201318-ebdc4bh","updated":"20240615201531"},"Children":[{"Type":"NodeText","Data":"通过 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"installEventFilter"},{"Type":"NodeText","Data":"​ 注册一个事件过滤器，事件将委托给过滤器的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"eventFilter(widget, event)"},{"Type":"NodeText","Data":"​ 方法"}]},{"ID":"20240615201332-etuqw6v","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240615201332-etuqw6v","updated":"20240615202451"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cHl0aG9u"},{"Type":"NodeCodeBlockCode","Data":"class MyWidget(QWidget):\n    def __init__(self, parent=None):\n        super(MyWidget, self).__init__(parent)\n        self.setWindowTitle('事件委托测试')\n        self.resize(400, 300)\n\n        self.lb1 = QLabel('第==1==标签', self)\n        self.lb1.setGeometry(20, 20, 300, 60)\n        font = self.lb1.font()\n        font.setPointSize(16)\n        font.setBold(True)\n        self.lb1.setFont(font)\n        self.lb1.installEventFilter(self)\n\n        self.lb2 = QLabel('第==2==标签', self)\n        self.lb2.setGeometry(20, 100, 300, 60)\n        self.lb2.setFont(font)\n        self.lb2.installEventFilter(self)\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240615202454-kchl2xd","Type":"NodeParagraph","Properties":{"id":"20240615202454-kchl2xd","updated":"20240615202549"},"Children":[{"Type":"NodeText","Data":"窗口 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"MyWidget"},{"Type":"NodeText","Data":"​ 包含两个 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"QLabel"},{"Type":"NodeText","Data":"​，将这两个标签的事件委托给 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"MyWidget#eventFilter"},{"Type":"NodeText","Data":"​ 处理"}]},{"ID":"20240615202525-agflx9z","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240615202525-agflx9z","updated":"20240615202600"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cHl0aG9u"},{"Type":"NodeCodeBlockCode","Data":"class MyWidget(QWidget):\n    def eventFilter(self, lb, event):\n        if lb == self.lb1:\n            if event.type() == QEvent.Type.Enter:\n                lb.setStyleSheet('background-color: rgb(170, 255, 255);')\n            if event.type() == QEvent.Type.Leave:\n                lb.setStyleSheet('')\n\n        if lb == self.lb2:\n            if event.type() == QEvent.Type.Enter:\n                lb.setStyleSheet('background-color: rgb(255, 0, 0);')\n            if event.type() == QEvent.Type.MouseButtonPress:\n                lb.setStyleSheet('background-color: rgb(0, 255, 0);')\n            if event.type() == QEvent.Type.MouseButtonRelease:\n                lb.setStyleSheet('background-color: rgb(0, 0, 255);')\n            if event.type() == QEvent.Type.Leave:\n                lb.setStyleSheet('')\n\n        return super().eventFilter(lb, event)\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240615202601-gkodfyp","Type":"NodeParagraph","Properties":{"id":"20240615202601-gkodfyp","updated":"20240615202709"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"MyWidget#eventFilter"},{"Type":"NodeText","Data":"​ 方法中分别对两个 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"QLabel"},{"Type":"NodeText","Data":"​ 不同时间进行处理，不关心的方法直接提交给基类实现"}]}]}