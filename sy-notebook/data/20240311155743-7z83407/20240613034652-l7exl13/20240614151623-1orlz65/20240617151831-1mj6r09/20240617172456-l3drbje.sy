{"ID":"20240617172456-l3drbje","Spec":"1","Type":"NodeDocument","Properties":{"icon":"qt6.ico","id":"20240617172456-l3drbje","title":"QCheckBox","type":"doc","updated":"20240617191114"},"Children":[{"ID":"20240617172456-q47fdgi","Type":"NodeParagraph","Properties":{"id":"20240617172456-q47fdgi","updated":"20240617190306"},"Children":[{"Type":"NodeText","Data":"复选框 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"QCheckBox"},{"Type":"NodeText","Data":"​ 提供一组多选按钮"}]},{"ID":"20240617185854-oxhtcd3","Type":"NodeList","ListData":{},"Properties":{"id":"20240617185854-oxhtcd3","updated":"20240617191107"},"Children":[{"ID":"20240617185929-byle0r5","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240617185929-byle0r5","updated":"20240617191107"},"Children":[{"ID":"20240617185929-61y67qn","Type":"NodeParagraph","Properties":{"id":"20240617185929-61y67qn","updated":"20240617191107"},"Children":[{"Type":"NodeText","Data":"信号："},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"stateChanged"},{"Type":"NodeText","Data":"​ 或 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"toggled"},{"Type":"NodeText","Data":"​ 在复选框状态改变时发出"}]}]},{"ID":"20240617185952-c000qjt","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240617185952-c000qjt"},"Children":[{"ID":"20240617185952-520tgmm","Type":"NodeParagraph","Properties":{"id":"20240617185952-520tgmm","updated":"20240617190156"},"Children":[{"Type":"NodeText","Data":"属性：相比单选，多一个半选的状态"}]},{"ID":"20240617190008-3nxi9qq","Type":"NodeList","ListData":{},"Properties":{"id":"20240617190008-3nxi9qq"},"Children":[{"ID":"20240617190036-olch5fa","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240617190036-olch5fa"},"Children":[{"ID":"20240617190036-qokt915","Type":"NodeParagraph","Properties":{"id":"20240617190036-qokt915","updated":"20240617190114"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"triState"},{"Type":"NodeText","Data":"​：复选框是否为一个三态复选框"}]}]},{"ID":"20240617190007-160qm32","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240617190007-160qm32"},"Children":[{"ID":"20240617190007-vfjacyj","Type":"NodeParagraph","Properties":{"id":"20240617190007-vfjacyj","updated":"20240617190216"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"checkState"},{"Type":"NodeText","Data":"​：复选框状态，值为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Qt.CheckState"},{"Type":"NodeText","Data":"​ 枚举"}]}]}]}]}]},{"ID":"20240617190418-qm9d3v7","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240617190418-qm9d3v7","updated":"20240617191114"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cHl0aG9u"},{"Type":"NodeCodeBlockCode","Data":"import sys\n\nfrom PyQt6.QtWidgets import QApplication, QWidget, QCheckBox, QHBoxLayout\nfrom PyQt6.QtCore import Qt\n\n\nclass MyWidget(QWidget):\n    def __init__(self):\n        super(MyWidget, self).__init__()\n        self.setWindowTitle('CheckBox 测试')\n\n        self.cb1 = QCheckBox('复选框-\u00261')\n        self.cb1.setChecked(True)\n        self.cb1.stateChanged.connect(self.btnState)\n\n        self.cb2 = QCheckBox('复选框-\u00262')\n        self.cb2.toggled.connect(self.btnState)\n\n        self.cb3 = QCheckBox('复选框-\u00263')\n        self.cb3.setTristate(True)\n        self.cb3.setCheckState(Qt.CheckState.PartiallyChecked)\n        self.cb3.stateChanged.connect(self.btnState)\n\n        layout = QHBoxLayout()\n        layout.addWidget(self.cb1)\n        layout.addWidget(self.cb2)\n        layout.addWidget(self.cb3)\n        self.setLayout(layout)\n\n    def btnState(self):\n        print('复选框-1: ' + str(self.cb1.checkState()))\n        print('复选框-2: ' + str(self.cb2.checkState()))\n        print('复选框-3: ' + str(self.cb3.checkState()))\n\n\nif __name__ == '__main__':\n    app = QApplication(sys.argv)\n    w = MyWidget()\n    w.show()\n    app.exec()\n\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}