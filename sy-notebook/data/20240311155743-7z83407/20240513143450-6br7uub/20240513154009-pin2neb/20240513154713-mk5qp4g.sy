{"ID":"20240513154713-mk5qp4g","Spec":"1","Type":"NodeDocument","Properties":{"icon":"opengl.png","id":"20240513154713-mk5qp4g","title":"着色器实现","type":"doc","updated":"20240513154922"},"Children":[{"ID":"20240513154718-sjyxa50","Type":"NodeParagraph","Properties":{"id":"20240513154718-sjyxa50","updated":"20240513154718"},"Children":[{"Type":"NodeText","Data":"物体的最终颜色即光照颜色，即 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"(ambient + diffuse + specular) * objectColor"},{"Type":"NodeText","Data":"​"}]},{"ID":"20240513154718-lvresii","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20240513154718-lvresii","updated":"20240513154726"},"Children":[{"Type":"NodeText","Data":"顶点着色器"}]},{"ID":"20240513154724-9yxwof8","Type":"NodeParagraph","Properties":{"id":"20240513154724-9yxwof8","updated":"20240513154726"},"Children":[{"Type":"NodeText","Data":"相对于一般 3D 顶点着色器最大的区别是要输出顶点坐标和法线向量"}]},{"ID":"20240513154727-ahygi52","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513154727-ahygi52","updated":"20240513154735"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z2xzbA=="},{"Type":"NodeCodeBlockCode","Data":"#version 460 core\n\nlayout(location = 0) in vec3 position; // 顶点坐标\nlayout(location = 1) in vec3 normal;   // 法线向量\n\nout vec3 vPosition; // 顶点坐标\nout vec3 vNormal;   // 法线向量\n\n// 模型矩阵、观察矩阵、投影矩阵\nuniform mat4 modelMatrix, viewMatrix, projectionMatrix;\n\nvoid main() {\n    vec4 mPos = modelMatrix * vec4(position, 1);\n    vPosition - mPos.xyz;\n    vNormal = normal;\n    gl_Position = projectionMatrix * viewMatrix * mPos;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240513154901-ry4lbl6","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20240513154901-ry4lbl6","updated":"20240513154906"},"Children":[{"Type":"NodeText","Data":"片元着色器"}]},{"ID":"20240513154906-o87bwgi","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513154906-o87bwgi","updated":"20240513154915"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Z2xzbA=="},{"Type":"NodeCodeBlockCode","Data":"#version 460 core\n\nin vec3 vPosition;\nin vec3 vNormal;\n\nout vec4 FragColor;\n\nuniform vec3 lightColor;    // 光照颜色\nuniform vec3 objectColor;   // 物体颜色\nuniform vec3 lightPos;      // 光源位置\nuniform vec3 viewPos;       // 视线位置（摄像机位置）\nuniform vec3 normalMatrix;  // 法线变换矩阵 = transpose(invert(modelMatrix))\n\nuniform float ambientStrength;   // 环境光强度\nuniform float specularStrength;  // 漫反射强度\nuniform float specularStrength;  // 镜面反射强度\nuniform int shininess;           // 反光度\n\nvoid main() {\n    // 环境光\n    vec3 ambient = ambientStrength * lightColor;\n    // 漫反射\n    vec3 norm = normalize(normalMatrix * vNormal);\n    vec3 lightDir = normalize(lightPos - vPosition);\n    float diff = max(dot(norm, lightDir), 0);\n    // 镜面反射\n    vec3 viewDir = normalize(viewPos - vPosition);\n    vec3 reflectDir = reflect(-lightDir, norm);\n    float spec = pow(max(dot(viewDir, reflectDir), 0), shininess);\n    vec3 specular = specularStrength * spec * lightColor;\n\n    FragColor = vec4((ambient + diffuse + specular) * objectColor, 1);\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240513154922-p5q51tg","Type":"NodeParagraph","Properties":{"id":"20240513154922-p5q51tg"}}]}