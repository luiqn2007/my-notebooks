{"ID":"20240513165812-78h9bze","Spec":"1","Type":"NodeDocument","Properties":{"icon":"khronos.ico","id":"20240513165812-78h9bze","title":"Built-in Variable (GLSL)","type":"doc","updated":"20240513165945"},"Children":[{"ID":"20240513165853-gmasy1l","Type":"NodeHTMLBlock","Data":"\u003cdiv style=\"\n    border: 1px solid rgb(222, 222, 222);\n    box-shadow: rgba(0, 0, 0, 0.06) 0px 1px 3px;\n  \"\u003e\n\u003cstyle\u003e\n.w {\n\toverflow: hidden;\n\tmargin: 0;\n\tpadding: 0;\n\tbackground: none transparent;\n\ttext-align: left;\n}\n.em \u003e a,\n.tc \u003e a,\n.th \u003e a {\n\tbackground-color: transparent;\n\t-webkit-text-decoration-skip: objects;\n}\n.em a:not([href]):not([tabindex]),\n.tc a:not([href]):not([tabindex]),\n.th a:not([href]):not([tabindex]) {\n\tcolor: inherit;\n\ttext-decoration: none;\n}\n.em a:not([href]):not([tabindex]):focus,\n.tc a:not([href]):not([tabindex]):focus,\n.th a:not([href]):not([tabindex]):focus {\n\toutline: 0;\n}\n.em \u003e a,\n.tc \u003e a,\n.th \u003e a {\n\ttext-decoration: none;\n\tcolor: inherit;\n\t-ms-touch-action: manipulation;\n\ttouch-action: manipulation;\n}\n.w {\n\tline-height: 1.4;\n\tfont-family: -apple-system, system-ui, BlinkMacSystemFont, 'Segoe UI',\n\t\tRoboto, 'Helvetica Neue', Arial, sans-serif;\n\tfont-weight: 400;\n\tfont-size: 15px;\n\tcolor: inherit;\n\t-webkit-hyphens: auto;\n\t-moz-hyphens: auto;\n\t-ms-hyphens: auto;\n\thyphens: auto;\n\tword-wrap: break-word;\n\toverflow-wrap: break-word;\n}\n._rtl {\n\tdirection: rtl;\n\ttext-align: right;\n}\n.t,\n.w,\n.wf {\n\tdisplay: -ms-flexbox;\n\tdisplay: flex;\n\t-ms-flex-direction: column;\n\tflex-direction: column;\n\tmax-width: 100%;\n\twidth: 100%;\n}\n@supports (-webkit-overflow-scrolling: touch) {\n\t.w {\n\t\tmax-width: 100vw;\n\t}\n}\n.wc,\n.wt {\n\toverflow: hidden;\n}\n._sc,\n._sm {\n\tbackground: inherit;\n}\n._or .tf {\n\t-ms-flex-order: 0;\n\torder: 0;\n}\n._or .th {\n\t-ms-flex-order: 1;\n\torder: 1;\n}\n._or .td {\n\t-ms-flex-order: 2;\n\torder: 2;\n}\n._alsr._ls .wf {\n\t-ms-flex-direction: column-reverse;\n\tflex-direction: column-reverse;\n}\n._alcr._lc .wf {\n\t-ms-flex-direction: row-reverse;\n\tflex-direction: row-reverse;\n}\n._sc._ls .wt,\n._ss._ls .wt {\n\tpadding-left: 0;\n\tpadding-right: 0;\n}\n._sc._ls._alsd .wt,\n._ss._ls._alsd .wt {\n\tpadding-bottom: 0;\n}\n._sc._ls._alsr .wt,\n._ss._ls._alsr .wt {\n\tpadding-top: 0;\n}\n._sc._lc .wt,\n._ss._lc .wt {\n\tpadding-top: 0;\n\tpadding-bottom: 0;\n}\n._ss._lc._alcd .wt {\n\tpadding-right: 0;\n}\n._ss._lc._alcr .wt {\n\tpadding-left: 0;\n}\n._lc .wf {\n\t-ms-flex-direction: row;\n\tflex-direction: row;\n}\n._lc .wt {\n\tdisplay: -ms-flexbox;\n\tdisplay: flex;\n\t-ms-flex: 1;\n\tflex: 1;\n\t-ms-flex-align: center;\n\talign-items: center;\n}\n._sc._lc._alcd .wf {\n\tpadding-right: 0 !important;\n}\n._sc._lc._alcr .wf {\n\tpadding-left: 0 !important;\n}\n.wt {\n\tpadding: 8px 10px;\n}\n@media (min-width: 360px) {\n\t.wt {\n\t\tpadding: 12px 15px;\n\t}\n}\n@media (min-width: 600px) {\n\t.wt {\n\t\tpadding: 16px 20px;\n\t}\n}\n._lc._sm:not(.xd) .wc {\n\tmin-width: 100px;\n\twidth: 100px;\n\tmin-height: 100px;\n}\n@media (min-width: 360px) {\n\t._lc._sm:not(.xd) .wc {\n\t\tmin-width: 110px;\n\t\twidth: 110px;\n\t\tmin-height: 110px;\n\t}\n}\n@media (min-width: 460px) {\n\t._lc._sm:not(.xd) .wc {\n\t\tmin-width: 140px;\n\t\twidth: 140px;\n\t\tmin-height: 140px;\n\t}\n}\n@media (min-width: 600px) {\n\t._lc._sm:not(.xd) .wc {\n\t\tmin-width: 160px;\n\t\twidth: 160px;\n\t\tmin-height: 160px;\n\t}\n}\n._lc._sm._xd:not(._xf) .wc,\n._lc._sm._xf:not(._xd) .wc {\n\tmin-width: 100px;\n\twidth: 100px;\n\tmin-height: 100px;\n}\n@media (min-width: 360px) {\n\t._lc._sm._xd:not(._xf) .wc,\n\t._lc._sm._xf:not(._xd) .wc {\n\t\tmin-width: 110px;\n\t\twidth: 110px;\n\t\tmin-height: 110px;\n\t}\n}\n@media (min-width: 600px) {\n\t._lc._sm._xd:not(._xf) .wc,\n\t._lc._sm._xf:not(._xd) .wc {\n\t\tmin-width: 120px;\n\t\twidth: 120px;\n\t\tmin-height: 120px;\n\t}\n}\n._lc._sm._xd._xf .wc {\n\tmin-width: 100px;\n\twidth: 100px;\n\tmin-height: 100px;\n}\n._lc._sc:not(.xd) .wc {\n\tmin-width: 92px;\n\twidth: 92px;\n\tmin-height: 92px;\n}\n@media (min-width: 360px) {\n\t._lc._sc:not(.xd) .wc {\n\t\tmin-width: 100px;\n\t\twidth: 100px;\n\t\tmin-height: 100px;\n\t}\n}\n@media (min-width: 460px) {\n\t._lc._sc:not(.xd) .wc {\n\t\tmin-width: 130px;\n\t\twidth: 130px;\n\t\tmin-height: 130px;\n\t}\n}\n@media (min-width: 600px) {\n\t._lc._sc:not(.xd) .wc {\n\t\tmin-width: 145px;\n\t\twidth: 145px;\n\t\tmin-height: 145px;\n\t}\n}\n._lc._sc._xd:not(._xf) .wc,\n._lc._sc._xf:not(._xd) .wc {\n\tmin-width: 92px;\n\twidth: 92px;\n\tmin-height: 92px;\n}\n@media (min-width: 360px) {\n\t._lc._sc._xd:not(._xf) .wc,\n\t._lc._sc._xf:not(._xd) .wc {\n\t\tmin-width: 100px;\n\t\twidth: 100px;\n\t\tmin-height: 100px;\n\t}\n}\n@media (min-width: 600px) {\n\t._lc._sc._xd:not(._xf) .wc,\n\t._lc._sc._xf:not(._xd) .wc {\n\t\tmin-width: 110px;\n\t\twidth: 110px;\n\t\tmin-height: 110px;\n\t}\n}\n._lc._sc._xd._xf .wc {\n\tmin-width: 92px;\n\twidth: 92px;\n\tmin-height: 92px;\n}\n@supports (-moz-appearance: meterbar) and (all: initial) {\n\t._lc .wc {\n\t\tdisplay: -ms-flexbox;\n\t\tdisplay: flex;\n\t\t-ms-flex-direction: column;\n\t\tflex-direction: column;\n\t\t-ms-flex-align: stretch;\n\t\talign-items: stretch;\n\t\t-ms-flex-line-pack: stretch;\n\t\talign-content: stretch;\n\t}\n}\n._lc._ss:not(.xd) .wc {\n\tmin-width: 100px;\n\twidth: 100px;\n\tmin-height: 100px;\n}\n@media (min-width: 360px) {\n\t._lc._ss:not(.xd) .wc {\n\t\tmin-width: 110px;\n\t\twidth: 110px;\n\t\tmin-height: 110px;\n\t}\n}\n@media (min-width: 460px) {\n\t._lc._ss:not(.xd) .wc {\n\t\tmin-width: 140px;\n\t\twidth: 140px;\n\t\tmin-height: 140px;\n\t}\n}\n@media (min-width: 600px) {\n\t._lc._ss:not(.xd) .wc {\n\t\tmin-width: 160px;\n\t\twidth: 160px;\n\t\tmin-height: 160px;\n\t}\n}\n._lc._ss._xd:not(._xf) .wc,\n._lc._ss._xf:not(._xd) .wc {\n\tmin-width: 100px;\n\twidth: 100px;\n\tmin-height: 100px;\n}\n@media (min-width: 360px) {\n\t._lc._ss._xd:not(._xf) .wc,\n\t._lc._ss._xf:not(._xd) .wc {\n\t\tmin-width: 110px;\n\t\twidth: 110px;\n\t\tmin-height: 110px;\n\t}\n}\n@media (min-width: 600px) {\n\t._lc._ss._xd:not(._xf) .wc,\n\t._lc._ss._xf:not(._xd) .wc {\n\t\tmin-width: 120px;\n\t\twidth: 120px;\n\t\tmin-height: 120px;\n\t}\n}\n._lc._ss._xd._xf .wc {\n\tmin-width: 100px;\n\twidth: 100px;\n\tmin-height: 100px;\n}\n._sc .wf {\n\tpadding: 8px;\n}\n@media (min-width: 360px) {\n\t._sc:not(._xd):not(._xf) .wf {\n\t\tpadding: 10px;\n\t}\n}\n@media (min-width: 460px) {\n\t._sc:not(._xd):not(._xf) .wf {\n\t\tpadding: 12px;\n\t}\n}\n@media (min-width: 600px) {\n\t._sc:not(._xd):not(._xf) .wf {\n\t\tpadding: 16px;\n\t}\n}\n._ls .th {\n\t-webkit-line-clamp: 2;\n}\n._ls._lh10 .th {\n\tmax-height: 2em;\n}\n._ls._lh11 .th {\n\tmax-height: 2.2em;\n}\n._ls._lh12 .th {\n\tmax-height: 2.4em;\n}\n._ls._lh13 .th {\n\tmax-height: 2.6em;\n}\n._ls._lh14 .th {\n\tmax-height: 2.8em;\n}\n._ls._lh15 .th {\n\tmax-height: 3em;\n}\n._ls .td {\n\t-webkit-line-clamp: 3;\n}\n._ls._lh10 .td {\n\tmax-height: 3em;\n}\n._ls._lh11 .td {\n\tmax-height: 3.3em;\n}\n._ls._lh12 .td {\n\tmax-height: 3.6em;\n}\n._ls._lh13 .td {\n\tmax-height: 3.9em;\n}\n._ls._lh14 .td {\n\tmax-height: 4.2em;\n}\n._ls._lh15 .td {\n\tmax-height: 4.5em;\n}\n._ls .twd {\n\tdisplay: none;\n}\n@media (max-width: 459px) {\n\t._lc .ti,\n\t._lc .tm,\n\t._lc .tw + .tx,\n\t._lc .twt {\n\t\tdisplay: none;\n\t}\n}\n@media (min-width: 460px) {\n\t._lc .twd {\n\t\tdisplay: none;\n\t}\n}\n._lc:not(._ap):not(._ts) .th {\n\t-webkit-line-clamp: 3;\n}\n._lc:not(._ap):not(._ts)._lh10 .th {\n\tmax-height: 3em;\n}\n._lc:not(._ap):not(._ts)._lh11 .th {\n\tmax-height: 3.3em;\n}\n._lc:not(._ap):not(._ts)._lh12 .th {\n\tmax-height: 3.6em;\n}\n._lc:not(._ap):not(._ts)._lh13 .th {\n\tmax-height: 3.9em;\n}\n._lc:not(._ap):not(._ts)._lh14 .th {\n\tmax-height: 4.2em;\n}\n._lc:not(._ap):not(._ts)._lh15 .th {\n\tmax-height: 4.5em;\n}\n@media (max-width: 359px) {\n\t._lc:not(._ap):not(._ts) .td {\n\t\tdisplay: none;\n\t}\n}\n@media (min-width: 360px) {\n\t._lc:not(._ap):not(._ts) .th {\n\t\t-webkit-line-clamp: 2;\n\t}\n\t._lc:not(._ap):not(._ts)._lh10 .th {\n\t\tmax-height: 2em;\n\t}\n\t._lc:not(._ap):not(._ts)._lh11 .th {\n\t\tmax-height: 2.2em;\n\t}\n\t._lc:not(._ap):not(._ts)._lh12 .th {\n\t\tmax-height: 2.4em;\n\t}\n\t._lc:not(._ap):not(._ts)._lh13 .th {\n\t\tmax-height: 2.6em;\n\t}\n\t._lc:not(._ap):not(._ts)._lh14 .th {\n\t\tmax-height: 2.8em;\n\t}\n\t._lc:not(._ap):not(._ts)._lh15 .th {\n\t\tmax-height: 3em;\n\t}\n\t._lc:not(._ap):not(._ts) .td {\n\t\t-webkit-line-clamp: 1;\n\t}\n\t._lc:not(._ap):not(._ts)._lh10 .td {\n\t\tmax-height: 1em;\n\t}\n\t._lc:not(._ap):not(._ts)._lh11 .td {\n\t\tmax-height: 1.1em;\n\t}\n\t._lc:not(._ap):not(._ts)._lh12 .td {\n\t\tmax-height: 1.2em;\n\t}\n\t._lc:not(._ap):not(._ts)._lh13 .td {\n\t\tmax-height: 1.3em;\n\t}\n\t._lc:not(._ap):not(._ts)._lh14 .td {\n\t\tmax-height: 1.4em;\n\t}\n\t._lc:not(._ap):not(._ts)._lh15 .td {\n\t\tmax-height: 1.5em;\n\t}\n}\n@media (min-width: 460px) {\n\t._lc:not(._ap):not(._ts) .td {\n\t\t-webkit-line-clamp: 2;\n\t}\n\t._lc:not(._ap):not(._ts)._lh10 .td {\n\t\tmax-height: 2em;\n\t}\n\t._lc:not(._ap):not(._ts)._lh11 .td {\n\t\tmax-height: 2.2em;\n\t}\n\t._lc:not(._ap):not(._ts)._lh12 .td {\n\t\tmax-height: 2.4em;\n\t}\n\t._lc:not(._ap):not(._ts)._lh13 .td {\n\t\tmax-height: 2.6em;\n\t}\n\t._lc:not(._ap):not(._ts)._lh14 .td {\n\t\tmax-height: 2.8em;\n\t}\n\t._lc:not(._ap):not(._ts)._lh15 .td {\n\t\tmax-height: 3em;\n\t}\n}\n._lc._ap:not(._ts) .th {\n\t-webkit-line-clamp: 3;\n}\n._lc._ap:not(._ts)._lh10 .th {\n\tmax-height: 3em;\n}\n._lc._ap:not(._ts)._lh11 .th {\n\tmax-height: 3.3em;\n}\n._lc._ap:not(._ts)._lh12 .th {\n\tmax-height: 3.6em;\n}\n._lc._ap:not(._ts)._lh13 .th {\n\tmax-height: 3.9em;\n}\n._lc._ap:not(._ts)._lh14 .th {\n\tmax-height: 4.2em;\n}\n._lc._ap:not(._ts)._lh15 .th {\n\tmax-height: 4.5em;\n}\n._lc._ap:not(._ts) .td {\n\t-webkit-line-clamp: 2;\n}\n._lc._ap:not(._ts)._lh10 .td {\n\tmax-height: 2em;\n}\n._lc._ap:not(._ts)._lh11 .td {\n\tmax-height: 2.2em;\n}\n._lc._ap:not(._ts)._lh12 .td {\n\tmax-height: 2.4em;\n}\n._lc._ap:not(._ts)._lh13 .td {\n\tmax-height: 2.6em;\n}\n._lc._ap:not(._ts)._lh14 .td {\n\tmax-height: 2.8em;\n}\n._lc._ap:not(._ts)._lh15 .td {\n\tmax-height: 3em;\n}\n@media (min-width: 360px) {\n\t._lc._ap:not(._ts) .th {\n\t\t-webkit-line-clamp: 2;\n\t}\n\t._lc._ap:not(._ts)._lh10 .th {\n\t\tmax-height: 2em;\n\t}\n\t._lc._ap:not(._ts)._lh11 .th {\n\t\tmax-height: 2.2em;\n\t}\n\t._lc._ap:not(._ts)._lh12 .th {\n\t\tmax-height: 2.4em;\n\t}\n\t._lc._ap:not(._ts)._lh13 .th {\n\t\tmax-height: 2.6em;\n\t}\n\t._lc._ap:not(._ts)._lh14 .th {\n\t\tmax-height: 2.8em;\n\t}\n\t._lc._ap:not(._ts)._lh15 .th {\n\t\tmax-height: 3em;\n\t}\n\t._lc._ap:not(._ts) .td {\n\t\t-webkit-line-clamp: 3;\n\t}\n\t._lc._ap:not(._ts)._lh10 .td {\n\t\tmax-height: 3em;\n\t}\n\t._lc._ap:not(._ts)._lh11 .td {\n\t\tmax-height: 3.3em;\n\t}\n\t._lc._ap:not(._ts)._lh12 .td {\n\t\tmax-height: 3.6em;\n\t}\n\t._lc._ap:not(._ts)._lh13 .td {\n\t\tmax-height: 3.9em;\n\t}\n\t._lc._ap:not(._ts)._lh14 .td {\n\t\tmax-height: 4.2em;\n\t}\n\t._lc._ap:not(._ts)._lh15 .td {\n\t\tmax-height: 4.5em;\n\t}\n}\n@media (min-width: 460px) {\n\t._lc._ap:not(._ts) .td {\n\t\t-webkit-line-clamp: 4;\n\t}\n\t._lc._ap:not(._ts)._lh10 .td {\n\t\tmax-height: 4em;\n\t}\n\t._lc._ap:not(._ts)._lh11 .td {\n\t\tmax-height: 4.4em;\n\t}\n\t._lc._ap:not(._ts)._lh12 .td {\n\t\tmax-height: 4.8em;\n\t}\n\t._lc._ap:not(._ts)._lh13 .td {\n\t\tmax-height: 5.2em;\n\t}\n\t._lc._ap:not(._ts)._lh14 .td {\n\t\tmax-height: 5.6em;\n\t}\n\t._lc._ap:not(._ts)._lh15 .td {\n\t\tmax-height: 6em;\n\t}\n}\n._lc._ts .th {\n\t-webkit-line-clamp: 1;\n}\n._lc._ts._lh10 .th {\n\tmax-height: 1em;\n}\n._lc._ts._lh11 .th {\n\tmax-height: 1.1em;\n}\n._lc._ts._lh12 .th {\n\tmax-height: 1.2em;\n}\n._lc._ts._lh13 .th {\n\tmax-height: 1.3em;\n}\n._lc._ts._lh14 .th {\n\tmax-height: 1.4em;\n}\n._lc._ts._lh15 .th {\n\tmax-height: 1.5em;\n}\n._lc._ts .td {\n\t-webkit-line-clamp: 2;\n}\n._lc._ts._lh10 .td {\n\tmax-height: 2em;\n}\n._lc._ts._lh11 .td {\n\tmax-height: 2.2em;\n}\n._lc._ts._lh12 .td {\n\tmax-height: 2.4em;\n}\n._lc._ts._lh13 .td {\n\tmax-height: 2.6em;\n}\n._lc._ts._lh14 .td {\n\tmax-height: 2.8em;\n}\n._lc._ts._lh15 .td {\n\tmax-height: 3em;\n}\n@media (min-width: 460px) {\n\t._lc._ts .th {\n\t\t-webkit-line-clamp: 1;\n\t}\n\t._lc._ts._lh10 .th {\n\t\tmax-height: 1em;\n\t}\n\t._lc._ts._lh11 .th {\n\t\tmax-height: 1.1em;\n\t}\n\t._lc._ts._lh12 .th {\n\t\tmax-height: 1.2em;\n\t}\n\t._lc._ts._lh13 .th {\n\t\tmax-height: 1.3em;\n\t}\n\t._lc._ts._lh14 .th {\n\t\tmax-height: 1.4em;\n\t}\n\t._lc._ts._lh15 .th {\n\t\tmax-height: 1.5em;\n\t}\n\t._lc._ts .td {\n\t\t-webkit-line-clamp: 3;\n\t}\n\t._lc._ts._lh10 .td {\n\t\tmax-height: 3em;\n\t}\n\t._lc._ts._lh11 .td {\n\t\tmax-height: 3.3em;\n\t}\n\t._lc._ts._lh12 .td {\n\t\tmax-height: 3.6em;\n\t}\n\t._lc._ts._lh13 .td {\n\t\tmax-height: 3.9em;\n\t}\n\t._lc._ts._lh14 .td {\n\t\tmax-height: 4.2em;\n\t}\n\t._lc._ts._lh15 .td {\n\t\tmax-height: 4.5em;\n\t}\n}\n@media (min-width: 460px) {\n\t._lc._xf:not(._xd)._ts .td {\n\t\t-webkit-line-clamp: 2;\n\t}\n\t._lc._xf:not(._xd)._ts._lh10 .td {\n\t\tmax-height: 2em;\n\t}\n\t._lc._xf:not(._xd)._ts._lh11 .td {\n\t\tmax-height: 2.2em;\n\t}\n\t._lc._xf:not(._xd)._ts._lh12 .td {\n\t\tmax-height: 2.4em;\n\t}\n\t._lc._xf:not(._xd)._ts._lh13 .td {\n\t\tmax-height: 2.6em;\n\t}\n\t._lc._xf:not(._xd)._ts._lh14 .td {\n\t\tmax-height: 2.8em;\n\t}\n\t._lc._xf:not(._xd)._ts._lh15 .td {\n\t\tmax-height: 3em;\n\t}\n}\n@media (min-width: 460px) {\n\t._lc._xf:not(._xd)._tl .td,\n\t._lc._xf:not(._xd)._tm .td {\n\t\t-webkit-line-clamp: 1;\n\t}\n\t._lc._xf:not(._xd)._tl._lh10 .td,\n\t._lc._xf:not(._xd)._tm .td {\n\t\tmax-height: 1em;\n\t}\n\t._lc._xf:not(._xd)._tl._lh11 .td,\n\t._lc._xf:not(._xd)._tm .td {\n\t\tmax-height: 1.1em;\n\t}\n\t._lc._xf:not(._xd)._tl._lh12 .td,\n\t._lc._xf:not(._xd)._tm .td {\n\t\tmax-height: 1.2em;\n\t}\n\t._lc._xf:not(._xd)._tl._lh13 .td,\n\t._lc._xf:not(._xd)._tm .td {\n\t\tmax-height: 1.3em;\n\t}\n\t._lc._xf:not(._xd)._tl._lh14 .td,\n\t._lc._xf:not(._xd)._tm .td {\n\t\tmax-height: 1.4em;\n\t}\n\t._lc._xf:not(._xd)._tl._lh15 .td,\n\t._lc._xf:not(._xd)._tm .td {\n\t\tmax-height: 1.5em;\n\t}\n}\n.t {\n\t-webkit-hyphens: auto;\n\t-moz-hyphens: auto;\n\t-ms-hyphens: auto;\n\thyphens: auto;\n}\n.td,\n.th {\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n\tdisplay: block;\n}\n@supports (display: -webkit-box) {\n\t.td,\n\t.th {\n\t\tdisplay: -webkit-box;\n\t\t-webkit-box-orient: vertical;\n\t}\n}\n.td {\n\tvertical-align: inherit;\n}\n.tf,\n.th {\n\tmargin-bottom: 0.5em;\n}\n.td {\n\tmargin-bottom: 0.6em;\n}\n._od .td:last-child,\n._od .tf:last-child,\n._od .th:last-child {\n\tmargin-bottom: 0 !important;\n}\n._or .td {\n\tmargin-bottom: 0 !important;\n}\n.tf {\n\tdisplay: -ms-flexbox;\n\tdisplay: flex;\n\t-ms-flex-align: center;\n\talign-items: center;\n}\n.tc {\n\t-ms-flex: 1;\n\tflex: 1;\n\twhite-space: nowrap;\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n}\n.tim {\n\tdisplay: block;\n\tmin-width: 16px;\n\tmin-height: 16px;\n\twidth: 1em;\n\theight: 1em;\n\tmargin-right: 6px;\n}\n._rtl .tim {\n\tmargin-left: 6px;\n\tmargin-right: 0;\n}\n.tx {\n\topacity: 0.3;\n\tmargin: 0 0.25em;\n}\n.tx:last-child {\n\tdisplay: none !important;\n}\n._hd .td,\n._hf .tf {\n\tdisplay: none;\n}\n._hw .ti,\n._hw .tw,\n._hw .tw + .tx {\n\tdisplay: none;\n}\n._hm .tm,\n._hm .tw + .tx {\n\tdisplay: none;\n}\n._hwi .ti {\n\tdisplay: none;\n}\n._hwt .tw,\n._hwt .tw + .tx {\n\tdisplay: none;\n}\n._hmt .tmt,\n._hmt .tmt + .tx {\n\tdisplay: none;\n}\n._hmd .tm .tx,\n._hmd .tmd {\n\tdisplay: none;\n}\n._od._hf .td {\n\tmargin-bottom: 0 !important;\n}\n._od._hd._hf .th,\n._or._hd .th {\n\tmargin-bottom: 0 !important;\n}\n@media (min-width: 460px) {\n\t.td {\n\t\tmargin-bottom: 0.7em;\n\t}\n}\n._ffsa {\n\tfont-family: -apple-system, system-ui, BlinkMacSystemFont, 'Segoe UI',\n\t\tRoboto, 'Helvetica Neue', Arial, sans-serif;\n}\n._ffse {\n\tfont-family: Georgia, 'Times New Roman', Times, serif;\n}\n._ffmo {\n\tfont-family: Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New',\n\t\tmonospace;\n}\n._ffco {\n\tfont-family: 'Comic Sans MS', 'Comic Sans', cursive;\n}\n._fwn {\n\tfont-weight: 400;\n}\n._fwb {\n\tfont-weight: 700;\n}\n._fsi {\n\tfont-style: italic;\n}\n._fsn {\n\tfont-style: normal;\n}\n._ttn {\n\ttext-transform: none;\n}\n._ttu {\n\ttext-transform: uppercase;\n\tletter-spacing: 0.025em;\n}\n._lh10 {\n\tline-height: 1;\n}\n._lh11 {\n\tline-height: 1.1;\n}\n._lh12 {\n\tline-height: 1.2;\n}\n._lh13 {\n\tline-height: 1.3;\n}\n._lh14 {\n\tline-height: 1.4;\n}\n._lh15 {\n\tline-height: 1.5;\n}\n._f3m {\n\tfont-size: 11px;\n}\n._f0,\n._f1m,\n._f2m,\n._f3m {\n\tfont-size: 12px;\n}\n._f1p,\n._f2p {\n\tfont-size: 13px;\n}\n._f3p {\n\tfont-size: 14px;\n}\n._f4p {\n\tfont-size: 16px;\n}\n@media (min-width: 360px) {\n\t._f0 {\n\t\tfont-size: 13px;\n\t}\n\t._f1p {\n\t\tfont-size: 14px;\n\t}\n\t._f2p {\n\t\tfont-size: 15px;\n\t}\n\t._f3p {\n\t\tfont-size: 16px;\n\t}\n\t._f4p {\n\t\tfont-size: 18px;\n\t}\n}\n@media (min-width: 460px) {\n\t._f1m {\n\t\tfont-size: 13px;\n\t}\n\t._f0 {\n\t\tfont-size: 14px;\n\t}\n\t._f1p {\n\t\tfont-size: 15px;\n\t}\n\t._f2p {\n\t\tfont-size: 16px;\n\t}\n\t._f3p {\n\t\tfont-size: 18px;\n\t}\n\t._f4p {\n\t\tfont-size: 21px;\n\t}\n}\n@media (min-width: 600px) {\n\t._f3m {\n\t\tfont-size: 12px;\n\t}\n\t._f2m {\n\t\tfont-size: 13px;\n\t}\n\t._f1m {\n\t\tfont-size: 14px;\n\t}\n\t._f0 {\n\t\tfont-size: 15px;\n\t}\n\t._f1p {\n\t\tfont-size: 17px;\n\t}\n\t._f2p {\n\t\tfont-size: 18px;\n\t}\n\t._f3p {\n\t\tfont-size: 21px;\n\t}\n\t._f4p {\n\t\tfont-size: 24px;\n\t}\n}\n.e {\n\toverflow: hidden;\n\tposition: relative;\n\twidth: 100%;\n}\n.e ._ls {\n\theight: 0;\n\tpadding-bottom: 56.25%;\n}\n@supports (-moz-appearance: meterbar) and (all: initial) {\n\t._lc .e {\n\t\t-ms-flex: 1;\n\t\tflex: 1;\n\t}\n}\n._lc:not(._ap) .e {\n\theight: 100%;\n\tpadding-bottom: 0;\n}\n.em {\n\tposition: absolute;\n\twidth: 100%;\n\theight: 100%;\n}\n.c,\n.co {\n\tposition: absolute;\n\twidth: 100%;\n\theight: 100%;\n}\n.c {\n\tdisplay: block;\n\twidth: 100%;\n\theight: 100%;\n\tbackground: no-repeat center;\n\tbackground-size: cover;\n}\n.c {\n\tz-index: 20;\n}\n.co {\n\tz-index: 30;\n}\n.pr {\n\tposition: absolute;\n\twidth: 100%;\n\theight: 100%;\n\tz-index: 10;\n}\n.pr \u003e video {\n\twidth: 100%;\n\theight: 100%;\n}\n.pr .plyr {\n\theight: 100%;\n}\n.pv {\n\tdisplay: block;\n\twidth: 100%;\n\theight: 100%;\n}\n.w {\n\tbackground-color: inherit;\n}\n.t {\n\tline-height: 1.4;\n\tcolor: inherit;\n}\n.th {\n\tcolor: inherit;\n}\n.tf {\n\tcolor: #999;\n}\n.tw {\n\tcolor: #999;\n}\n\u003c/style\u003e\n  \u003cdiv class=\"w __if _lc _sm _od _alsd _alcd _lh14 _xm _xi _ts _dm\"\u003e\n    \u003cdiv class=\"wf\"\u003e\n      \u003cdiv class=\"wc\"\u003e\n        \u003cdiv class=\"e\"\u003e\n          \u003cdiv class=\"em\"\u003e\n            \u003ca href=\"https://www.khronos.org/opengl/wiki/Built-in_Variable_(GLSL)\" target=\"_blank\" rel=\"noopener\" data-do-not-bind-click=\"\" class=\"c\" style=\"\n                background-image: url('https://www.khronos.org/favicon.ico');\n              \"\u003e\u003c/a\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n      \u003cdiv class=\"wt\"\u003e\n        \u003cdiv class=\"t _f0 _ffsa _fsn _fwn\"\u003e\n          \u003cdiv class=\"th _f1p _fsn _fwb\"\u003e\n            \u003ca href=\"https://www.khronos.org/opengl/wiki/Built-in_Variable_(GLSL)\" target=\"_blank\" rel=\"noopener\" class=\"thl\"\u003eBuilt-in Variable (GLSL) - OpenGL Wiki\u003c/a\u003e\n          \u003c/div\u003e\n          \u003cdiv class=\"td\"\u003eThe OpenGL Shading Language defines a number of special variables for the various shader stages. These built-in variables (or built-in variables) have special properties. They are usually for communicating with certain fixed-functionality. By convention, all predefined variables start with “gl_”; no user-defined variables may start with this.\u003c/div\u003e\n          \u003cdiv class=\"tf _f1m\"\u003e\n            \u003cdiv class=\"tc\"\u003e\n              \u003ca href=\"https://www.khronos.org/opengl/wiki/Built-in_Variable_(GLSL)\" target=\"_blank\" rel=\"noopener\" class=\"tw _f1m\"\u003e\u003cspan class=\"twt\"\u003ehttps://www.khronos.org/opengl/wiki/Built-in_Variable_(GLSL)\u003c/span\u003e\u003cspan class=\"twd\"\u003ehttps://www.khronos.org/opengl/wiki/Built-in_Variable_(GLSL)\u003c/span\u003e\u003c/a\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n  \u003c/div\u003e\n\u003c/div\u003e","Properties":{"id":"20240513165853-gmasy1l","updated":"20240513165853"}},{"ID":"20240513165945-s92k9cc","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20240513165945-s92k9cc","updated":"20240513165945"},"Children":[{"Type":"NodeText","Data":"Built-in Variable (GLSL)"}]},{"ID":"20240513165945-v66m2yo","Type":"NodeParagraph","Properties":{"id":"20240513165945-v66m2yo","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"The "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/OpenGL_Shading_Language","TextMarkATitle":"OpenGL Shading Language","TextMarkTextContent":"OpenGL Shading Language"},{"Type":"NodeText","Data":" defines a number of special variables for the various shader stages. These "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"built-in variables"},{"Type":"NodeText","Data":" (or built-in variables) have special properties. They are usually for communicating with certain fixed-functionality. By convention, all predefined variables start with \"gl_\"; no user-defined variables may start with this."}]},{"ID":"20240513165945-oezut4q","Type":"NodeParagraph","Properties":{"id":"20240513165945-oezut4q","updated":"20240513165946"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Note:"},{"Type":"NodeText","Data":" This page only describes the core OpenGL shading language pre-defined variables. Any variables that are from the compatibility profiles are not listed here."}]},{"ID":"20240513165945-65js4hp","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240513165945-65js4hp","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"Vertex shader inputs"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"["},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki_opengl/index.php?title=Built-in_Variable_(GLSL)\u0026amp;action=edit\u0026amp;section=1","TextMarkATitle":"Edit section: Vertex shader inputs","TextMarkTextContent":"edit"},{"Type":"NodeText","Data":"]"}]},{"ID":"20240513165945-b66bs7k","Type":"NodeParagraph","Properties":{"id":"20240513165945-b66bs7k","updated":"20240513165946"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Vertex_Shader/Defined_Inputs","TextMarkATitle":"Vertex Shader/Defined Inputs","TextMarkTextContent":"V"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"·"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki_opengl/index.php?title=Vertex_Shader/Defined_Inputs\u0026amp;action=edit","TextMarkTextContent":"E"}]},{"ID":"20240513165945-e1v8cgq","Type":"NodeParagraph","Properties":{"id":"20240513165945-e1v8cgq","updated":"20240513165946"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Vertex_Shader","TextMarkATitle":"Vertex Shader","TextMarkTextContent":"Vertex Shaders"},{"Type":"NodeText","Data":" have the following built-in input variables."}]},{"ID":"20240513165945-yaw123n","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513165945-yaw123n","updated":"20240513165946"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"in int gl_VertexID;\nin int gl_InstanceID;\nin int gl_DrawID; // Requires GLSL 4.60 or ARB_shader_draw_parameters\nin int gl_BaseVertex; // Requires GLSL 4.60 or ARB_shader_draw_parameters\nin int gl_BaseInstance; // Requires GLSL 4.60 or ARB_shader_draw_parameters\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240513165945-kmzixi6","Type":"NodeParagraph","Properties":{"id":"20240513165945-kmzixi6","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"gl_VertexIDthe index of the vertex currently being processed. When using non-indexed rendering, it is the effective index of the current vertex (the number of vertices processed + the "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"first"},{"Type":"NodeText","Data":" value). For indexed rendering, it is the index used to fetch this vertex from the buffer."},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Note:"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_VertexID"},{"Type":"NodeText","Data":" will have the "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Draw_Base_Index","TextMarkATitle":"Draw Base Index","TextMarkTextContent":"baseVertex parameter"},{"Type":"NodeText","Data":" added to the index, if there was such a parameter in the rendering command."}]},{"ID":"20240513165945-2ncmttn","Type":"NodeParagraph","Properties":{"id":"20240513165945-2ncmttn","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"gl_InstanceIDthe index of the current instance when doing some form of "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Instancing","TextMarkATitle":"Instancing","TextMarkTextContent":"instanced rendering"},{"Type":"NodeText","Data":". The instance count "},{"Type":"NodeTextMark","TextMarkType":"em","TextMarkTextContent":"always"},{"Type":"NodeText","Data":" starts at 0, even when using base instance calls. When not using instanced rendering, this value will be 0."},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Warning:"},{"Type":"NodeText","Data":" This value "},{"Type":"NodeTextMark","TextMarkType":"em strong","TextMarkTextContent":"does not"},{"Type":"NodeText","Data":" follow the "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Instancing","TextMarkATitle":"Instancing","TextMarkTextContent":"baseInstance provided by some instanced rendering functions"},{"Type":"NodeText","Data":". "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_InstanceID"},{"Type":"NodeText","Data":" always falls on the half-open range [0, "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"instancecount"},{"Type":"NodeText","Data":"). If you have GLSL 4.60, you may use "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_BaseInstance"},{"Type":"NodeText","Data":" to compute the proper instance index."}]},{"ID":"20240513165945-6ab6w5y","Type":"NodeParagraph","Properties":{"id":"20240513165945-6ab6w5y","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"gl_DrawIDthe index of the drawing command within "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Multidraw_Rendering","TextMarkATitle":"Multidraw Rendering","TextMarkTextContent":"multi-draw rendering"},{"Type":"NodeText","Data":" commands (including indirect multi-draw commands). The first draw command has an ID of 0, increasing by one as the renderer passes through drawing commands.This value will always be a "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Dynamically_Uniform_Expression","TextMarkATitle":"Dynamically Uniform Expression","TextMarkTextContent":"Dynamically Uniform Expression"},{"Type":"NodeText","Data":"."},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_BaseVertex"},{"Type":"NodeText","Data":"the value of the "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"baseVertex"},{"Type":"NodeText","Data":" parameter of the rendering command. If the rendering command did not include that parameter, the value of this input will be 0."},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_BaseInstance"},{"Type":"NodeText","Data":"the value of the "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"baseInstance"},{"Type":"NodeText","Data":" parameter of the "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Instancing","TextMarkATitle":"Instancing","TextMarkTextContent":"instanced rendering command"},{"Type":"NodeText","Data":". If the rendering command did not include this parameter, the value of this input will be 0.## Vertex shader outputs"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"["},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki_opengl/index.php?title=Built-in_Variable_(GLSL)\u0026amp;action=edit\u0026amp;section=2","TextMarkATitle":"Edit section: Vertex shader outputs","TextMarkTextContent":"edit"},{"Type":"NodeText","Data":"]"}]},{"ID":"20240513165945-gioifkr","Type":"NodeParagraph","Properties":{"id":"20240513165945-gioifkr","updated":"20240513165946"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Vertex_Shader/Defined_Outputs","TextMarkATitle":"Vertex Shader/Defined Outputs","TextMarkTextContent":"V"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"·"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki_opengl/index.php?title=Vertex_Shader/Defined_Outputs\u0026amp;action=edit","TextMarkTextContent":"E"}]},{"ID":"20240513165945-oi89fc0","Type":"NodeParagraph","Properties":{"id":"20240513165945-oi89fc0","updated":"20240513165946"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Vertex_Shader","TextMarkATitle":"Vertex Shader","TextMarkTextContent":"Vertex Shaders"},{"Type":"NodeText","Data":" have the following predefined outputs."}]},{"ID":"20240513165945-6pwapbq","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513165945-6pwapbq","updated":"20240513165946"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"out gl_PerVertex\n{\n  vec4 gl_Position;\n  float gl_PointSize;\n  float gl_ClipDistance[];\n};\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240513165945-mnj4hlu","Type":"NodeParagraph","Properties":{"id":"20240513165945-mnj4hlu","updated":"20240513165946"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_PerVertex"},{"Type":"NodeText","Data":" defines an "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Interface_Block_(GLSL)","TextMarkTextContent":"interface block"},{"Type":"NodeText","Data":" \"Interface Block (GLSL)\") for outputs. The block is defined without an instance name, so that prefixing the names is not required."}]},{"ID":"20240513165945-0dvgvm6","Type":"NodeParagraph","Properties":{"id":"20240513165945-0dvgvm6","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"These variables only take on the meanings below if this shader is the last active "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Vertex_Processing","TextMarkATitle":"Vertex Processing","TextMarkTextContent":"Vertex Processing"},{"Type":"NodeText","Data":" stage, and if rasterization is still active (ie: "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"GL_RASTERIZER_DISCARD"},{"Type":"NodeText","Data":" is not enabled). The text below explains how the "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Vertex_Post-Processing","TextMarkATitle":"Vertex Post-Processing","TextMarkTextContent":"Vertex Post-Processing"},{"Type":"NodeText","Data":" system uses the variables. These variables may not be redeclared with interpolation qualifiers."}]},{"ID":"20240513165945-slsg12p","Type":"NodeParagraph","Properties":{"id":"20240513165945-slsg12p","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"gl_Positionthe clip-space output position of the current vertex."},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_PointSize"},{"Type":"NodeText","Data":"the pixel width/height of the point being rasterized. It only has a meaning when rendering "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Point_Primitive","TextMarkATitle":"Point Primitive","TextMarkTextContent":"point primitives"},{"Type":"NodeText","Data":". It will be clamped to the "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"GL_POINT_SIZE_RANGE"},{"Type":"NodeText","Data":"."},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_ClipDistance"},{"Type":"NodeText","Data":"allows the shader to set the distance from the vertex to each "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/User-Defined_Clip_Plane","TextMarkATitle":"User-Defined Clip Plane","TextMarkTextContent":"user-defined clipping half-space"},{"Type":"NodeText","Data":". A non-negative distance means that the vertex is inside/behind the clip plane, and a negative distance means it is outside/in front of the clip plane. Each element in the array is one clip plane. In order to use this variable, the user must manually redeclare it with an explicit size. With GLSL 4.10 or "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"http://www.opengl.org/registry/specs/ARB/separate_shader_objects.txt","TextMarkTextContent":"ARB_separate_shader_objects"},{"Type":"NodeText","Data":", the whole "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_PerVertex"},{"Type":"NodeText","Data":" block needs to be redeclared. Otherwise just the "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_ClipDistance"},{"Type":"NodeText","Data":" built-in needs to be redeclared.## Tessellation control shader inputs"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"["},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki_opengl/index.php?title=Built-in_Variable_(GLSL)\u0026amp;action=edit\u0026amp;section=3","TextMarkATitle":"Edit section: Tessellation control shader inputs","TextMarkTextContent":"edit"},{"Type":"NodeText","Data":"]"}]},{"ID":"20240513165945-n9s99cj","Type":"NodeParagraph","Properties":{"id":"20240513165945-n9s99cj","updated":"20240513165946"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Tessellation_Control_Shader/Defined_Inputs","TextMarkATitle":"Tessellation Control Shader/Defined Inputs","TextMarkTextContent":"V"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"·"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki_opengl/index.php?title=Tessellation_Control_Shader/Defined_Inputs\u0026amp;action=edit","TextMarkTextContent":"E"}]},{"ID":"20240513165945-epawxw2","Type":"NodeParagraph","Properties":{"id":"20240513165945-epawxw2","updated":"20240513165946"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Tessellation_Control_Shader","TextMarkATitle":"Tessellation Control Shader","TextMarkTextContent":"Tessellation Control Shaders"},{"Type":"NodeText","Data":" provide the following built-in input variables:"}]},{"ID":"20240513165945-xbnk2u5","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513165945-xbnk2u5","updated":"20240513165946"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":" in int gl_PatchVerticesIn;\n in int gl_PrimitiveID;\n in int gl_InvocationID;\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240513165945-z0zxfdv","Type":"NodeParagraph","Properties":{"id":"20240513165945-z0zxfdv","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"gl_PatchVerticesInthe number of vertices in the input patch."},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_PrimitiveID"},{"Type":"NodeText","Data":"the index of the current patch within this rendering command."},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_InvocationID"},{"Type":"NodeText","Data":"the index of the TCS invocation within this patch. A TCS invocation writes to per-vertex output variables by using this to index them.The TCS also takes the built-in variables output by the "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Vertex_Shader#Outputs","TextMarkATitle":"Vertex Shader","TextMarkTextContent":"vertex shader"},{"Type":"NodeText","Data":":"}]},{"ID":"20240513165945-lpmhfnk","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513165945-lpmhfnk","updated":"20240513165946"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"in gl_PerVertex\n{\n  vec4 gl_Position;\n  float gl_PointSize;\n  float gl_ClipDistance[];\n} gl_in[gl_MaxPatchVertices];\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240513165945-3cm05la","Type":"NodeParagraph","Properties":{"id":"20240513165945-3cm05la","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"Note that just because "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_in"},{"Type":"NodeText","Data":" is defined to have "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxPatchVertices"},{"Type":"NodeText","Data":" entries does not mean that you can access beyond "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_PatchVerticesIn"},{"Type":"NodeText","Data":" and get reasonable values. These variables have only the meaning the vertex shader that passed them gave them."}]},{"ID":"20240513165945-th6cnpt","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240513165945-th6cnpt","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"Tessellation control shader outputs"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"["},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki_opengl/index.php?title=Built-in_Variable_(GLSL)\u0026amp;action=edit\u0026amp;section=4","TextMarkATitle":"Edit section: Tessellation control shader outputs","TextMarkTextContent":"edit"},{"Type":"NodeText","Data":"]"}]},{"ID":"20240513165945-i2403nu","Type":"NodeParagraph","Properties":{"id":"20240513165945-i2403nu","updated":"20240513165946"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Tessellation_Control_Shader/Defined_Outputs","TextMarkATitle":"Tessellation Control Shader/Defined Outputs","TextMarkTextContent":"V"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"·"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki_opengl/index.php?title=Tessellation_Control_Shader/Defined_Outputs\u0026amp;action=edit","TextMarkTextContent":"E"}]},{"ID":"20240513165945-hxudqg4","Type":"NodeParagraph","Properties":{"id":"20240513165945-hxudqg4","updated":"20240513165946"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Tessellation_Control_Shader","TextMarkATitle":"Tessellation Control Shader","TextMarkTextContent":"Tessellation Control Shaders"},{"Type":"NodeText","Data":" have the following built-in patch output variables:"}]},{"ID":"20240513165945-91iwfm2","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513165945-91iwfm2","updated":"20240513165946"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"patch out float gl_TessLevelOuter[4];\npatch out float gl_TessLevelInner[2];\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240513165945-hygkhyd","Type":"NodeParagraph","Properties":{"id":"20240513165945-hygkhyd","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"These define the outer and inner tessellation levels used by the "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Tessellation#Tessellation_primitive_generation","TextMarkATitle":"Tessellation","TextMarkTextContent":"tessellation primitive generator"},{"Type":"NodeText","Data":". They define how much tessellation to apply to the patch. Their exact meaning depends on the type of patch (and other settings) defined in the "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Tessellation_Evaluation_Shader","TextMarkATitle":"Tessellation Evaluation Shader","TextMarkTextContent":"Tessellation Evaluation Shader"},{"Type":"NodeText","Data":"."}]},{"ID":"20240513165945-srpcmp4","Type":"NodeParagraph","Properties":{"id":"20240513165945-srpcmp4","updated":"20240513165946"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Note:"},{"Type":"NodeText","Data":" If any of the outer levels used by the abstract patch type is 0 or negative (or NaN), then the patch will be discarded by the generator, and no TES invocations for this patch will result."}]},{"ID":"20240513165945-1gu42ab","Type":"NodeParagraph","Properties":{"id":"20240513165945-1gu42ab","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"As with any other "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"patch"},{"Type":"NodeText","Data":" variable, multiple TCS invocations for the same patch can write to the same tessellation level variable, so long as they are all computing and writing the exact same value."}]},{"ID":"20240513165945-fn679bx","Type":"NodeParagraph","Properties":{"id":"20240513165945-fn679bx","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"TCS's also provide the following optional per-vertex output variables:"}]},{"ID":"20240513165945-2bzdfs8","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513165945-2bzdfs8","updated":"20240513165946"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"out gl_PerVertex\n{\n  vec4 gl_Position;\n  float gl_PointSize;\n  float gl_ClipDistance[];\n} gl_out[];\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240513165945-oc1jq4y","Type":"NodeParagraph","Properties":{"id":"20240513165945-oc1jq4y","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"The use of any of these in a TCS is completely optional. Indeed, their semantics will generally be of no practical value to the TCS. They have the same general meaning as for "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Vertex_Shader/Defined_Outputs","TextMarkATitle":"Vertex Shader/Defined Outputs","TextMarkTextContent":"vertex shaders"},{"Type":"NodeText","Data":", but since a TCS must always be followed by an evaluation shader, the TCS never has to write to any of them."}]},{"ID":"20240513165945-g5t2vsz","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240513165945-g5t2vsz","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"Tessellation evaluation shader inputs"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"["},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki_opengl/index.php?title=Built-in_Variable_(GLSL)\u0026amp;action=edit\u0026amp;section=5","TextMarkATitle":"Edit section: Tessellation evaluation shader inputs","TextMarkTextContent":"edit"},{"Type":"NodeText","Data":"]"}]},{"ID":"20240513165945-08sz82l","Type":"NodeParagraph","Properties":{"id":"20240513165945-08sz82l","updated":"20240513165946"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Tessellation_Evaluation_Shader/Defined_Inputs","TextMarkATitle":"Tessellation Evaluation Shader/Defined Inputs","TextMarkTextContent":"V"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"·"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki_opengl/index.php?title=Tessellation_Evaluation_Shader/Defined_Inputs\u0026amp;action=edit","TextMarkTextContent":"E"}]},{"ID":"20240513165945-rw5ocsh","Type":"NodeParagraph","Properties":{"id":"20240513165945-rw5ocsh","updated":"20240513165946"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Tessellation_Evaluation_Shader","TextMarkATitle":"Tessellation Evaluation Shader","TextMarkTextContent":"Tessellation Evaluation Shaders"},{"Type":"NodeText","Data":" have the following built-in inputs."}]},{"ID":"20240513165945-20knlz7","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513165945-20knlz7","updated":"20240513165946"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"in vec3 gl_TessCoord;\nin int gl_PatchVerticesIn;\nin int gl_PrimitiveID;\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240513165945-58jm5g2","Type":"NodeParagraph","Properties":{"id":"20240513165945-58jm5g2","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"gl_TessCoordthe location within the "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Abstract_Patch","TextMarkATitle":"Abstract Patch","TextMarkTextContent":"tessellated abstract patch"},{"Type":"NodeText","Data":" for this particular vertex. Every input parameter other than this one will be identical for all TES invocations within a patch.Which components of this "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"vec3"},{"Type":"NodeText","Data":" that have valid values depends on the abstract patch type. For "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"isolines"},{"Type":"NodeText","Data":" and "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"quads"},{"Type":"NodeText","Data":", only the XY components have valid values. For "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"triangles"},{"Type":"NodeText","Data":", all three components have valid values. All valid values are normalized floats (on the range [0, 1])."},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_PatchVerticesIn"},{"Type":"NodeText","Data":"the vertex count for the patch being processed. This is either the output vertex count specified by the TCS, or the patch vertex size specified by "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/GLAPI/glPatchParameter","TextMarkATitle":"GLAPI/glPatchParameter","TextMarkTextContent":"glPatchParameter"},{"Type":"NodeText","Data":" if no TCS is active. Attempts to index per-vertex inputs by a value greater than or equal to "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_PatchVerticesIn"},{"Type":"NodeText","Data":" results in undefined behavior."},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_PrimitiveID"},{"Type":"NodeText","Data":"the index of the current patch in the series of patches being processed for this draw call. "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Primitive_restart","TextMarkATitle":"Primitive restart","TextMarkTextContent":"Primitive restart"},{"Type":"NodeText","Data":", if used, has no effect on the primitive ID."},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Note:"},{"Type":"NodeText","Data":" The "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Tessellation#Tessellation_primitive_generator","TextMarkATitle":"Tessellation","TextMarkTextContent":"tessellation primitive generator"},{"Type":"NodeText","Data":" will cull patches that have a zero for one of the active outer tessellation levels. "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/bugzilla/show_bug.cgi?id=754","TextMarkTextContent":"The intent of the specification seems to be"},{"Type":"NodeText","Data":" that "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_PrimitiveID"},{"Type":"NodeText","Data":" will still be incremented for culled patches. So the primitive ID for the TES is equivalent to the ID for the TCS invocations that generated that patch. But this is not entirely clear from the spec itself."}]},{"ID":"20240513165945-5d3payb","Type":"NodeParagraph","Properties":{"id":"20240513165945-5d3payb","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"The TES also has access to the tessellation levels provided for the patch by the TCS or by OpenGL:"}]},{"ID":"20240513165945-k9oye4w","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513165945-k9oye4w","updated":"20240513165946"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"patch in float gl_TessLevelOuter[4];\npatch in float gl_TessLevelInner[2];\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240513165945-smdlvbp","Type":"NodeParagraph","Properties":{"id":"20240513165945-smdlvbp","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"Only the outer and inner levels actually used by the abstract patch are valid. For example, if this TES uses "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"isolines"},{"Type":"NodeText","Data":", only "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_TessLevelOuter[0]"},{"Type":"NodeText","Data":" and "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_TessLevelOuter[1]"},{"Type":"NodeText","Data":" will have valid values."}]},{"ID":"20240513165945-3emh7wp","Type":"NodeParagraph","Properties":{"id":"20240513165945-3emh7wp","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"The TES also takes the built-in per-vertex variables output by the "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/TCS_Output","TextMarkATitle":"TCS Output","TextMarkTextContent":"TCS"},{"Type":"NodeText","Data":":"}]},{"ID":"20240513165945-8k2d6ne","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513165945-8k2d6ne","updated":"20240513165946"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"in gl_PerVertex\n{\n  vec4 gl_Position;\n  float gl_PointSize;\n  float gl_ClipDistance[];\n} gl_in[gl_MaxPatchVertices];\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240513165945-k57kvlo","Type":"NodeParagraph","Properties":{"id":"20240513165945-k57kvlo","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"Note that just because "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_in"},{"Type":"NodeText","Data":" is defined to have "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxPatchVertices"},{"Type":"NodeText","Data":" entries does not mean that you can access beyond "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_PatchVerticesIn"},{"Type":"NodeText","Data":" and get reasonable values."}]},{"ID":"20240513165945-6acktzq","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240513165945-6acktzq","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"Tessellation evaluation shader outputs"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"["},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki_opengl/index.php?title=Built-in_Variable_(GLSL)\u0026amp;action=edit\u0026amp;section=6","TextMarkATitle":"Edit section: Tessellation evaluation shader outputs","TextMarkTextContent":"edit"},{"Type":"NodeText","Data":"]"}]},{"ID":"20240513165945-xb981iw","Type":"NodeParagraph","Properties":{"id":"20240513165945-xb981iw","updated":"20240513165946"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Tessellation_Evaluation_Shader/Defined_Outputs","TextMarkATitle":"Tessellation Evaluation Shader/Defined Outputs","TextMarkTextContent":"V"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"·"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki_opengl/index.php?title=Tessellation_Evaluation_Shader/Defined_Outputs\u0026amp;action=edit","TextMarkTextContent":"E"}]},{"ID":"20240513165945-y5iu9dx","Type":"NodeParagraph","Properties":{"id":"20240513165945-y5iu9dx","updated":"20240513165946"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Tessellation_Evaluation_Shader","TextMarkATitle":"Tessellation Evaluation Shader","TextMarkTextContent":"Tessellation Evaluation Shaders"},{"Type":"NodeText","Data":" have the following built-in outputs."}]},{"ID":"20240513165945-balvd6g","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513165945-balvd6g","updated":"20240513165946"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"out gl_PerVertex {\n  vec4 gl_Position;\n  float gl_PointSize;\n  float gl_ClipDistance[];\n};\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240513165945-s9bwsjn","Type":"NodeParagraph","Properties":{"id":"20240513165945-s9bwsjn","updated":"20240513165946"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_PerVertex"},{"Type":"NodeText","Data":" defines an "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Interface_Block_(GLSL)","TextMarkTextContent":"interface block"},{"Type":"NodeText","Data":" \"Interface Block (GLSL)\") for outputs. The block is defined without an instance name, so that prefixing the names is not required."}]},{"ID":"20240513165945-1f3oeye","Type":"NodeParagraph","Properties":{"id":"20240513165945-1f3oeye","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"These variables only take on the meanings below if this shader is the last active "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Vertex_Processing","TextMarkATitle":"Vertex Processing","TextMarkTextContent":"Vertex Processing"},{"Type":"NodeText","Data":" stage, and if rasterization is still active (ie: "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"GL_RASTERIZER_DISCARD"},{"Type":"NodeText","Data":" is not enabled). The text below explains how the "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Vertex_Post-Processing","TextMarkATitle":"Vertex Post-Processing","TextMarkTextContent":"Vertex Post-Processing"},{"Type":"NodeText","Data":" system uses the variables. These variables may not be redeclared with interpolation qualifiers."}]},{"ID":"20240513165945-pr63thy","Type":"NodeParagraph","Properties":{"id":"20240513165945-pr63thy","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"gl_Positionthe clip-space output position of the current vertex."},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_PointSize"},{"Type":"NodeText","Data":"the "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Point_Sprite","TextMarkATitle":"Point Sprite","TextMarkTextContent":"pixel width/height of the point"},{"Type":"NodeText","Data":" being rasterized. It only has a meaning when rendering point primitives, which in a TES requires using the "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"point_mode"},{"Type":"NodeText","Data":" input layout qualifier."},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_ClipDistance"},{"Type":"NodeText","Data":"allows the shader to set the distance from the vertex to each "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/User-Defined_Clip_Plane","TextMarkATitle":"User-Defined Clip Plane","TextMarkTextContent":"User-Defined Clip Plane"},{"Type":"NodeText","Data":". A positive distance means that the vertex is inside/behind the clip plane, and a negative distance means it is outside/in front of the clip plane. Each element in the array is one clip plane. In order to use this variable, the user must manually redeclare it with an explicit size.## Geometry shader inputs"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"["},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki_opengl/index.php?title=Built-in_Variable_(GLSL)\u0026amp;action=edit\u0026amp;section=7","TextMarkATitle":"Edit section: Geometry shader inputs","TextMarkTextContent":"edit"},{"Type":"NodeText","Data":"]"}]},{"ID":"20240513165945-tkoq3fr","Type":"NodeParagraph","Properties":{"id":"20240513165945-tkoq3fr","updated":"20240513165946"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Geometry_Shader/Defined_Inputs","TextMarkATitle":"Geometry Shader/Defined Inputs","TextMarkTextContent":"V"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"·"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki_opengl/index.php?title=Geometry_Shader/Defined_Inputs\u0026amp;action=edit","TextMarkTextContent":"E"}]},{"ID":"20240513165945-0n04r9n","Type":"NodeParagraph","Properties":{"id":"20240513165945-0n04r9n","updated":"20240513165946"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Geometry_Shader","TextMarkATitle":"Geometry Shader","TextMarkTextContent":"Geometry Shaders"},{"Type":"NodeText","Data":" provide the following built-in input variables:"}]},{"ID":"20240513165945-fwqn9ih","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513165945-fwqn9ih","updated":"20240513165946"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"in gl_PerVertex\n{\n  vec4 gl_Position;\n  float gl_PointSize;\n  float gl_ClipDistance[];\n} gl_in[];\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240513165945-nq1kbxy","Type":"NodeParagraph","Properties":{"id":"20240513165945-nq1kbxy","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"These variables have only the meaning the prior shader stage(s) that passed them gave them."}]},{"ID":"20240513165945-3du5isa","Type":"NodeParagraph","Properties":{"id":"20240513165945-3du5isa","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"There are some GS input values that are based on primitives, not vertices. These are not aggregated into arrays. These are:"}]},{"ID":"20240513165945-fnxmqbr","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513165945-fnxmqbr","updated":"20240513165946"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"in int gl_PrimitiveIDIn;\nin int gl_InvocationID; // Requires GLSL 4.0 or ARB_gpu_shader5\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240513165945-hzoyuus","Type":"NodeParagraph","Properties":{"id":"20240513165945-hzoyuus","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"gl_PrimitiveIDInthe current input primitive's ID, based on the number of primitives processed by the GS since the current drawing command started."},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_InvocationID"},{"Type":"NodeText","Data":"the current instance, as defined when "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Geometry_Shader_Instancing","TextMarkATitle":"Geometry Shader Instancing","TextMarkTextContent":"instancing geometry shaders"},{"Type":"NodeText","Data":".## Geometry shader outputs"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"["},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki_opengl/index.php?title=Built-in_Variable_(GLSL)\u0026amp;action=edit\u0026amp;section=8","TextMarkATitle":"Edit section: Geometry shader outputs","TextMarkTextContent":"edit"},{"Type":"NodeText","Data":"]"}]},{"ID":"20240513165945-5pgx2cv","Type":"NodeParagraph","Properties":{"id":"20240513165945-5pgx2cv","updated":"20240513165946"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Geometry_Shader/Defined_Outputs","TextMarkATitle":"Geometry Shader/Defined Outputs","TextMarkTextContent":"V"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"·"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki_opengl/index.php?title=Geometry_Shader/Defined_Outputs\u0026amp;action=edit","TextMarkTextContent":"E"}]},{"ID":"20240513165945-q2wtvcy","Type":"NodeParagraph","Properties":{"id":"20240513165945-q2wtvcy","updated":"20240513165946"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Geometry_Shader","TextMarkATitle":"Geometry Shader","TextMarkTextContent":"Geometry Shaders"},{"Type":"NodeText","Data":" have the following built-in outputs."}]},{"ID":"20240513165945-1g1lm1d","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513165945-1g1lm1d","updated":"20240513165946"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"out gl_PerVertex\n{\n  vec4 gl_Position;\n  float gl_PointSize;\n  float gl_ClipDistance[];\n};\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240513165945-ev92pib","Type":"NodeParagraph","Properties":{"id":"20240513165945-ev92pib","updated":"20240513165946"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_PerVertex"},{"Type":"NodeText","Data":" defines an "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Interface_Block_(GLSL)","TextMarkTextContent":"interface block"},{"Type":"NodeText","Data":" \"Interface Block (GLSL)\") for outputs. The block is defined without an instance name, so that prefixing the names is not required."}]},{"ID":"20240513165945-asb6ijz","Type":"NodeParagraph","Properties":{"id":"20240513165945-asb6ijz","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"The GS is the final "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Vertex_Processing","TextMarkATitle":"Vertex Processing","TextMarkTextContent":"Vertex Processing"},{"Type":"NodeText","Data":" stage. Therefore, unless rasterization is being turned off, you must write to some of these values. These outputs are always associated with stream 0. So if you're emitting vertices to a different stream, you don't have to write to them."}]},{"ID":"20240513165945-ognikyq","Type":"NodeParagraph","Properties":{"id":"20240513165945-ognikyq","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"gl_Positionthe clip-space output position of the current vertex. This value must be written if you are emitting a vertex to stream 0, unless rasterization is off."},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_PointSize"},{"Type":"NodeText","Data":"the pixel width/height of the point being rasterized. It is only necessary to write to this when outputting "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Point_Primitive","TextMarkATitle":"Point Primitive","TextMarkTextContent":"point primitives"},{"Type":"NodeText","Data":"."},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_ClipDistance"},{"Type":"NodeText","Data":"allows the shader to set the distance from the vertex to each "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/User-Defined_Clip_Plane","TextMarkATitle":"User-Defined Clip Plane","TextMarkTextContent":"User-Defined Clip Plane"},{"Type":"NodeText","Data":". A positive distance means that the vertex is inside/behind the clip plane, and a negative distance means it is outside/in front of the clip plane. In order to use this variable, the user must manually redeclare it (and therefore the interface block) with an explicit size.Certain predefined outputs have special meaning and semantics."}]},{"ID":"20240513165945-tcj41w8","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513165945-tcj41w8","updated":"20240513165946"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"out int gl_PrimitiveID;\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240513165945-18tlfx8","Type":"NodeParagraph","Properties":{"id":"20240513165945-18tlfx8","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"The primitive ID will be passed to the fragment shader. The primitive ID for a particular line/triangle will be taken from the "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Provoking_Vertex","TextMarkATitle":"Provoking Vertex","TextMarkTextContent":"provoking vertex"},{"Type":"NodeText","Data":" of that line/triangle, so make sure that you are writing the correct value for the right provoking vertex."}]},{"ID":"20240513165945-exeiim5","Type":"NodeParagraph","Properties":{"id":"20240513165945-exeiim5","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"The meaning for this value is whatever you want it to be. However, if you want to match the standard OpenGL meaning (ie: what the "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Fragment_Shader","TextMarkATitle":"Fragment Shader","TextMarkTextContent":"Fragment Shader"},{"Type":"NodeText","Data":" would get if no GS were used), you must do this for each vertex before emitting it:"}]},{"ID":"20240513165945-v7yo01q","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513165945-v7yo01q","updated":"20240513165946"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"gl_PrimitiveID = gl_PrimitiveIDIn;\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240513165945-7ops6rs","Type":"NodeParagraph","Properties":{"id":"20240513165945-7ops6rs","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"This naturally assumes that the number of primitives output by the GS equals the number of primitives received by the GS."}]},{"ID":"20240513165945-ie8i55m","Type":"NodeParagraph","Properties":{"id":"20240513165945-ie8i55m","updated":"20240513165946"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Geometry_Shader/Defined_Outputs_Layered","TextMarkATitle":"Geometry Shader/Defined Outputs Layered","TextMarkTextContent":"V"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"·"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki_opengl/index.php?title=Geometry_Shader/Defined_Outputs_Layered\u0026amp;action=edit","TextMarkTextContent":"E"}]},{"ID":"20240513165945-zvfl2ok","Type":"NodeParagraph","Properties":{"id":"20240513165945-zvfl2ok","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"Layered rendering in the "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Geometry_Shader","TextMarkATitle":"Geometry Shader","TextMarkTextContent":"GS"},{"Type":"NodeText","Data":" works via two special output variables:"}]},{"ID":"20240513165945-4dxkwo2","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513165945-4dxkwo2","updated":"20240513165946"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"out int gl_Layer;\nout int gl_ViewportIndex; // Requires GL 4.1 or ARB_viewport_array.\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240513165945-u6pg3dw","Type":"NodeParagraph","Properties":{"id":"20240513165945-u6pg3dw","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"The "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_Layer"},{"Type":"NodeText","Data":" output defines which layer in the layered image the primitive goes to. Each vertex in the primitive must get the same layer index. Note that when rendering to cubemap arrays, the "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_Layer"},{"Type":"NodeText","Data":" value represents layer-faces (the faces within a layer), not the layers of cubemaps."}]},{"ID":"20240513165945-d103ngp","Type":"NodeParagraph","Properties":{"id":"20240513165945-d103ngp","updated":"20240513165946"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_ViewportIndex"},{"Type":"NodeText","Data":", which requires GL 4.1 or "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"http://www.opengl.org/registry/specs/ARB/viewport_array.txt","TextMarkTextContent":"ARB_viewport_array"},{"Type":"NodeText","Data":", specifies which viewport index to use with this primitive."}]},{"ID":"20240513165945-xwpi8pt","Type":"NodeParagraph","Properties":{"id":"20240513165945-xwpi8pt","updated":"20240513165946"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Note:"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"http://www.opengl.org/registry/specs/ARB/viewport_array.txt","TextMarkTextContent":"ARB_viewport_array"},{"Type":"NodeText","Data":", while technically a 4.1 feature, is widely available on 3.3 hardware, from both NVIDIA and AMD."}]},{"ID":"20240513165945-wvls8xn","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240513165945-wvls8xn","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"Fragment shader inputs"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"["},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki_opengl/index.php?title=Built-in_Variable_(GLSL)\u0026amp;action=edit\u0026amp;section=9","TextMarkATitle":"Edit section: Fragment shader inputs","TextMarkTextContent":"edit"},{"Type":"NodeText","Data":"]"}]},{"ID":"20240513165945-fnvfizl","Type":"NodeParagraph","Properties":{"id":"20240513165945-fnvfizl","updated":"20240513165946"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Fragment_Shader/Defined_Inputs","TextMarkATitle":"Fragment Shader/Defined Inputs","TextMarkTextContent":"V"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"·"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki_opengl/index.php?title=Fragment_Shader/Defined_Inputs\u0026amp;action=edit","TextMarkTextContent":"E"}]},{"ID":"20240513165945-8dyv0u7","Type":"NodeParagraph","Properties":{"id":"20240513165945-8dyv0u7","updated":"20240513165946"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Fragment_Shader","TextMarkATitle":"Fragment Shader","TextMarkTextContent":"Fragment Shaders"},{"Type":"NodeText","Data":" have the following built-in input variables."}]},{"ID":"20240513165945-f8j92gc","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513165945-f8j92gc","updated":"20240513165946"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"in vec4 gl_FragCoord;\nin bool gl_FrontFacing;\nin vec2 gl_PointCoord;\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240513165945-0le42pl","Type":"NodeParagraph","Properties":{"id":"20240513165945-0le42pl","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"gl_FragCoordThe location of the fragment in window space. The X, Y and Z components are the window-space position of the fragment. The Z value will be written to the depth buffer if "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_FragDepth"},{"Type":"NodeText","Data":" is not written to by this shader stage. The W component of "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_FragCoord"},{"Type":"NodeText","Data":" is 1/W~clip~, where W~clip~ is the interpolated W component of the clip-space vertex position output to "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_Position"},{"Type":"NodeText","Data":" from the last "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Vertex_Processing","TextMarkATitle":"Vertex Processing","TextMarkTextContent":"Vertex Processing"},{"Type":"NodeText","Data":" stage.The space of "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_FragCoord"},{"Type":"NodeText","Data":" can be modified by redeclaring "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_FragCoord"},{"Type":"NodeText","Data":" with special input layout qualifiers:"}]},{"ID":"20240513165945-wu5304q","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513165945-wu5304q","updated":"20240513165946"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"layout(origin_upper_left) in vec4 gl_FragCoord;\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240513165945-4vouuv8","Type":"NodeParagraph","Properties":{"id":"20240513165945-4vouuv8","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"This means that the origin for "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_FragCoord"},{"Type":"NodeText","Data":"'s window-space will be the upper-left of the screen, rather than the usual lower-left."}]},{"ID":"20240513165945-h0zy1yf","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513165945-h0zy1yf","updated":"20240513165946"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"layout(pixel_center_integer) in vec4 gl_FragCoord;\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240513165945-oyxoyav","Type":"NodeParagraph","Properties":{"id":"20240513165945-oyxoyav","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"OpenGL window space is defined such that pixel centers are on half-integer boundaries. So the center of the lower-left pixel is (0.5, 0.5). Using "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"pixel_center_integer"},{"Type":"NodeText","Data":" adjust "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_FragCoord"},{"Type":"NodeText","Data":" such that whole integer values represent pixel centers.Both of these exist to be compatible with D3D's window space. Unless you need your shaders to have this compatibility, you are advised not to use these features."},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_FrontFacing"},{"Type":"NodeText","Data":"This is false if the fragment was generated by the "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Winding_Order","TextMarkATitle":"Winding Order","TextMarkTextContent":"back-face of the primitive"},{"Type":"NodeText","Data":"; it is true in all other cases (including "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Primitive","TextMarkATitle":"Primitive","TextMarkTextContent":"Primitives"},{"Type":"NodeText","Data":" that have no back face)."},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_PointCoord"},{"Type":"NodeText","Data":"The location within a "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Primitive#Point_Primitives","TextMarkATitle":"Primitive","TextMarkTextContent":"point primitive"},{"Type":"NodeText","Data":" that defines the position of the fragment relative to the side of the point. Points are effectively rasterized as window-space squares of a certain pixel size. Since points are defined by a single vertex, the only way to tell where in that square a particular fragment is is with "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_PointCoord"},{"Type":"NodeText","Data":".The values of "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_PointCoord"},{"Type":"NodeText","Data":"'s coordinates range from [0, 1]. OpenGL uses a upper-left origin for point-coordinates by default, so (0, 0) is the upper-left. However, the origin can be switched to a bottom-left origin by calling "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/GLAPI/glPointParameter","TextMarkATitle":"GLAPI/glPointParameter","TextMarkTextContent":"glPointParameteri(GL_POINT_SPRITE_COORD_ORIGIN, GL_LOWER_LEFT);"},{"Type":"NodeText","Data":"OpenGL 4.0 and above define additional system-generated input values:"}]},{"ID":"20240513165945-ynund0u","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513165945-ynund0u","updated":"20240513165946"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"in int gl_SampleID;\nin vec2 gl_SamplePosition;\nin int gl_SampleMaskIn[];\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240513165945-jtg8ob2","Type":"NodeParagraph","Properties":{"id":"20240513165945-jtg8ob2","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"gl_SampleIDThis is an integer identifier for the current sample that this fragment is rasterized for."},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Warning:"},{"Type":"NodeText","Data":" Any use of this variable "},{"Type":"NodeTextMark","TextMarkType":"em","TextMarkTextContent":"at all"},{"Type":"NodeText","Data":" will force this shader to be evaluated per-sample. Since much of the point of "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Multisample","TextMarkATitle":"Multisample","TextMarkTextContent":"multisampling"},{"Type":"NodeText","Data":" is to avoid that, you should use it only when you must."}]},{"ID":"20240513165945-hris2wp","Type":"NodeParagraph","Properties":{"id":"20240513165945-hris2wp","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"gl_SamplePositionThis is the location of the current sample for the fragment within the pixel's area, with values on the range [0, 1]. The origin is the bottom-left of the pixel area."},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Warning:"},{"Type":"NodeText","Data":" Any use of this variable "},{"Type":"NodeTextMark","TextMarkType":"em","TextMarkTextContent":"at all"},{"Type":"NodeText","Data":" will force this shader to be evaluated per-sample. Since much of the point of "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Multisample","TextMarkATitle":"Multisample","TextMarkTextContent":"multisampling"},{"Type":"NodeText","Data":" is to avoid that, you should use it only when you must."}]},{"ID":"20240513165945-kudofpp","Type":"NodeParagraph","Properties":{"id":"20240513165945-kudofpp","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"gl_SampleMaskInWhen using "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Multisample","TextMarkATitle":"Multisample","TextMarkTextContent":"multisampling"},{"Type":"NodeText","Data":", this variable contains a bitfield for the sample mask of the fragment being generated. The array is as long as needed to fill in the number of samples supported by the GL implementation.Some Fragment shader built-in inputs will take values specified by OpenGL, but these values can be overridden by user control."}]},{"ID":"20240513165945-knmhsu3","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513165945-knmhsu3","updated":"20240513165946"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"in float gl_ClipDistance[];\nin int gl_PrimitiveID;\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240513165945-ebr2rxa","Type":"NodeParagraph","Properties":{"id":"20240513165945-ebr2rxa","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"gl_ClipDistanceThis array contains the interpolated clipping plane half-spaces, as output for vertices from the last "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Vertex_Processing","TextMarkATitle":"Vertex Processing","TextMarkTextContent":"Vertex Processing"},{"Type":"NodeText","Data":" stage."},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_PrimitiveID"},{"Type":"NodeText","Data":"This value is the index of the current primitive being rendered by this "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Vertex_Rendering","TextMarkATitle":"Vertex Rendering","TextMarkTextContent":"drawing command"},{"Type":"NodeText","Data":". This includes any "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Tessellation","TextMarkATitle":"Tessellation","TextMarkTextContent":"Tessellation"},{"Type":"NodeText","Data":" applied to the mesh, so each individual primitive will have a unique index.However, if a "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Geometry_Shader","TextMarkATitle":"Geometry Shader","TextMarkTextContent":"Geometry Shader"},{"Type":"NodeText","Data":" is active, then the "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_PrimitiveID"},{"Type":"NodeText","Data":" is exactly and only what the GS provided as output. Normally, "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_PrimitiveID"},{"Type":"NodeText","Data":" is guaranteed to be unique, so if two FS invocations have the same primitive ID, they come from the same primitive. But if a GS is active and outputs non-unique values, then different fragment shader invocations for different primitives will get the same value. If the GS did not output a value for "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_PrimitiveID"},{"Type":"NodeText","Data":", then the fragment shader gets an undefined value."}]},{"ID":"20240513165945-pv4e8sn","Type":"NodeParagraph","Properties":{"id":"20240513165945-pv4e8sn","updated":"20240513165946"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Warning:"},{"Type":"NodeText","Data":" The above discussion of "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_PrimitiveID"},{"Type":"NodeText","Data":" is based on a particular reading of the OpenGL 4.6 specification. However, the specification itself is somewhat inconsistent with this view, suggesting that the primitive ID may only get incremented based on data fed to the system, not data generated by, for example, the tessellator. And the Vulkan specification seems to concur with this interpretation, and "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://forums.khronos.org/showthread.php/83726-gl_PrimitiveID-in-fragment-shader-with-tessellation-enabled","TextMarkTextContent":"at least one implementation is known to agree with that as well"},{"Type":"NodeText","Data":". Until there is some "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://github.com/KhronosGroup/OpenGL-API/issues/47","TextMarkTextContent":"clarification on the issue"},{"Type":"NodeText","Data":", you should consider the above to be questionable."}]},{"ID":"20240513165945-qmbc6rj","Type":"NodeParagraph","Properties":{"id":"20240513165945-qmbc6rj","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"GL 4.3 provides the following additional inputs:"}]},{"ID":"20240513165945-bxoljm9","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513165945-bxoljm9","updated":"20240513165946"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"in int gl_Layer;\nin int gl_ViewportIndex;\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240513165945-pokr7lf","Type":"NodeParagraph","Properties":{"id":"20240513165945-pokr7lf","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"gl_LayerThis is either 0 or the "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Layered_Rendering","TextMarkATitle":"Layered Rendering","TextMarkTextContent":"layer number for this primitive output by the Geometry Shader"},{"Type":"NodeText","Data":"."},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_ViewportIndex"},{"Type":"NodeText","Data":"This is either 0 or the "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Layered_Rendering","TextMarkATitle":"Layered Rendering","TextMarkTextContent":"viewport index for this primitive output by the Geometry Shader"},{"Type":"NodeText","Data":".## Fragment shader outputs"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"["},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki_opengl/index.php?title=Built-in_Variable_(GLSL)\u0026amp;action=edit\u0026amp;section=10","TextMarkATitle":"Edit section: Fragment shader outputs","TextMarkTextContent":"edit"},{"Type":"NodeText","Data":"]"}]},{"ID":"20240513165945-qk3ybi2","Type":"NodeParagraph","Properties":{"id":"20240513165945-qk3ybi2","updated":"20240513165946"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Fragment_Shader/Defined_Outputs","TextMarkATitle":"Fragment Shader/Defined Outputs","TextMarkTextContent":"V"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"·"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki_opengl/index.php?title=Fragment_Shader/Defined_Outputs\u0026amp;action=edit","TextMarkTextContent":"E"}]},{"ID":"20240513165945-5b0an3k","Type":"NodeParagraph","Properties":{"id":"20240513165945-5b0an3k","updated":"20240513165946"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Fragment_Shader","TextMarkATitle":"Fragment Shader","TextMarkTextContent":"Fragment Shaders"},{"Type":"NodeText","Data":" have the following built-in output variables."}]},{"ID":"20240513165945-0boho79","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513165945-0boho79","updated":"20240513165946"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"out float gl_FragDepth;\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240513165945-m1jtrj3","Type":"NodeParagraph","Properties":{"id":"20240513165945-m1jtrj3","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"gl_FragDepthThis output is the fragment's depth. If the shader does not statically write this value, then it will take the value of "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_FragCoord.z"},{"Type":"NodeText","Data":".To \"statically write\" to a variable means that you write to it "},{"Type":"NodeTextMark","TextMarkType":"em","TextMarkTextContent":"anywhere"},{"Type":"NodeText","Data":" in the program. Even if the writing code is technically unreachable for some reason, if there is a "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_FragDepth ="},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"..."},{"Type":"NodeText","Data":" expression "},{"Type":"NodeTextMark","TextMarkType":"em","TextMarkTextContent":"anywhere"},{"Type":"NodeText","Data":" in the shader, then it is statically written."},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Warning:"},{"Type":"NodeText","Data":" If the fragment shader statically writes to "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_FragDepth"},{"Type":"NodeText","Data":", then it is the responsibility of the shader to statically write to the value in "},{"Type":"NodeTextMark","TextMarkType":"em","TextMarkTextContent":"all circumstances"},{"Type":"NodeText","Data":". No matter what branches may or may not be taken, the shader must ensure that the value is written. So, if you conditionally write to it in one place, you should at least make sure that there is a single non-conditional write sometime before that."}]},{"ID":"20240513165945-ka2js7m","Type":"NodeParagraph","Properties":{"id":"20240513165945-ka2js7m","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"GLSL 4.20 or "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"http://www.opengl.org/registry/specs/ARB/conservative_depth.txt","TextMarkTextContent":"ARB_conservative_depth"},{"Type":"NodeText","Data":" allows the user to specify that modifications to "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_FragDepth"},{"Type":"NodeText","Data":" (relative to the "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_FragCoord.z"},{"Type":"NodeText","Data":" value it would have otherwise had) will happen in certain ways. This allows the implementation the freedom to not turn off "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Early_Depth_Test","TextMarkATitle":"Early Depth Test","TextMarkTextContent":"Early Depth Tests"},{"Type":"NodeText","Data":" in certain situations."}]},{"ID":"20240513165945-zv73dy8","Type":"NodeParagraph","Properties":{"id":"20240513165945-zv73dy8","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"This is done by re-declaring "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_FragDepth"},{"Type":"NodeText","Data":" with a special layout qualifier:"}]},{"ID":"20240513165945-gc436v5","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513165945-gc436v5","updated":"20240513165946"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"layout (depth_\u003ccondition\u003e) out float gl_FragDepth;\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240513165945-kmyh3q3","Type":"NodeParagraph","Properties":{"id":"20240513165945-kmyh3q3","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"The "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"condition"},{"Type":"NodeText","Data":" can be one of the following:"}]},{"ID":"20240513165945-am8uwwh","Type":"NodeParagraph","Properties":{"id":"20240513165945-am8uwwh","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"anyThe default. You may freely change the depth, but you lose the most potential performance."},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"greater"},{"Type":"NodeText","Data":"You will only make the depth "},{"Type":"NodeTextMark","TextMarkType":"em","TextMarkTextContent":"larger"},{"Type":"NodeText","Data":", compared to "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_FragCoord.z"},{"Type":"NodeText","Data":"."},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"less"},{"Type":"NodeText","Data":"You will only make the depth "},{"Type":"NodeTextMark","TextMarkType":"em","TextMarkTextContent":"smaller"},{"Type":"NodeText","Data":", compared to "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_FragCoord.z"},{"Type":"NodeText","Data":"."},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"unchanged"},{"Type":"NodeText","Data":"If you write to "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_FragDepth"},{"Type":"NodeText","Data":", you will write exactly "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_FragCoord.z"},{"Type":"NodeText","Data":".Violating the "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"condition"},{"Type":"NodeText","Data":" yields undefined behavior."}]},{"ID":"20240513165945-rzqdw98","Type":"NodeParagraph","Properties":{"id":"20240513165945-rzqdw98","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"GLSL 4.00 or "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"http://www.opengl.org/registry/specs/ARB/sample_shading.txt","TextMarkTextContent":"ARB_sample_shading"},{"Type":"NodeText","Data":" brings us:"}]},{"ID":"20240513165945-jnt3523","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513165945-jnt3523","updated":"20240513165946"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"out int gl_SampleMask[];\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240513165945-uki4bqm","Type":"NodeParagraph","Properties":{"id":"20240513165945-uki4bqm","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"gl_SampleMaskThis defines the sample mask for the fragment when performing "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Multisample","TextMarkATitle":"Multisample","TextMarkTextContent":"mutlisampled rendering"},{"Type":"NodeText","Data":". If a shader does not statically write to it, then it will be filled in by "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_SampleMaskIn"},{"Type":"NodeText","Data":". The sample mask output here will be logically AND'd with the sample mask computed by the rasterizer."},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Warning:"},{"Type":"NodeText","Data":" Just as with "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_FragDepth"},{"Type":"NodeText","Data":", if a fragment shader writes to "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_SampleMask"},{"Type":"NodeText","Data":" at all, it must make sure to write to the value for all execution paths. But it must "},{"Type":"NodeTextMark","TextMarkType":"em","TextMarkTextContent":"also"},{"Type":"NodeText","Data":" make sure to write to each element in the array. The array has the same size as "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_SampleMaskIn"},{"Type":"NodeText","Data":"."}]},{"ID":"20240513165945-pxr8wrh","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240513165945-pxr8wrh","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"Compute shader inputs"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"["},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki_opengl/index.php?title=Built-in_Variable_(GLSL)\u0026amp;action=edit\u0026amp;section=11","TextMarkATitle":"Edit section: Compute shader inputs","TextMarkTextContent":"edit"},{"Type":"NodeText","Data":"]"}]},{"ID":"20240513165945-drvcr2o","Type":"NodeParagraph","Properties":{"id":"20240513165945-drvcr2o","updated":"20240513165946"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Compute_Shader/Defined_Inputs","TextMarkATitle":"Compute Shader/Defined Inputs","TextMarkTextContent":"V"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"·"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki_opengl/index.php?title=Compute_Shader/Defined_Inputs\u0026amp;action=edit","TextMarkTextContent":"E"}]},{"ID":"20240513165945-amecvfo","Type":"NodeParagraph","Properties":{"id":"20240513165945-amecvfo","updated":"20240513165946"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Compute_Shader","TextMarkATitle":"Compute Shader","TextMarkTextContent":"Compute Shaders"},{"Type":"NodeText","Data":" have the following built-in input variables."}]},{"ID":"20240513165945-c1bc28r","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513165945-c1bc28r","updated":"20240513165946"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"in uvec3 gl_NumWorkGroups;\nin uvec3 gl_WorkGroupID;\nin uvec3 gl_LocalInvocationID;\nin uvec3 gl_GlobalInvocationID;\nin uint  gl_LocalInvocationIndex;\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240513165945-0fqzfwv","Type":"NodeParagraph","Properties":{"id":"20240513165945-0fqzfwv","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"gl_NumWorkGroupsThis variable contains the number of work groups passed to the dispatch function."},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_WorkGroupID"},{"Type":"NodeText","Data":"This is the current work group for this shader invocation. Each of the XYZ components will be on the half-open range [0, gl_NumWorkGroups.XYZ)."},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_LocalInvocationID"},{"Type":"NodeText","Data":"This is the current invocation of the shader "},{"Type":"NodeTextMark","TextMarkType":"em","TextMarkTextContent":"within"},{"Type":"NodeText","Data":" the work group. Each of the XYZ components will be on the half-open range [0, "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_WorkGroupSize.XYZ"},{"Type":"NodeText","Data":")."},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_GlobalInvocationID"},{"Type":"NodeText","Data":"This value uniquely identifies this particular invocation of the compute shader among "},{"Type":"NodeTextMark","TextMarkType":"em","TextMarkTextContent":"all"},{"Type":"NodeText","Data":" invocations of this compute dispatch call. It's a short-hand for the math computation:"}]},{"ID":"20240513165945-pwzunl0","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513165945-pwzunl0","updated":"20240513165946"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"gl_WorkGroupID * gl_WorkGroupSize + gl_LocalInvocationID;\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240513165945-x4gqxwx","Type":"NodeParagraph","Properties":{"id":"20240513165945-x4gqxwx","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"gl_LocalInvocationIndexThis is a 1D version of "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_LocalInvocationID"},{"Type":"NodeText","Data":". It identifies this invocation's index "},{"Type":"NodeTextMark","TextMarkType":"em","TextMarkTextContent":"within"},{"Type":"NodeText","Data":" the work group. It is short-hand for this math computation:"}]},{"ID":"20240513165945-lzvb0wh","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513165945-lzvb0wh","updated":"20240513165946"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"  gl_LocalInvocationIndex =\n          gl_LocalInvocationID.z * gl_WorkGroupSize.x * gl_WorkGroupSize.y +\n          gl_LocalInvocationID.y * gl_WorkGroupSize.x + \n          gl_LocalInvocationID.x;\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240513165945-j6thcw4","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240513165945-j6thcw4","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"Compute shader other variables"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"["},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki_opengl/index.php?title=Built-in_Variable_(GLSL)\u0026amp;action=edit\u0026amp;section=12","TextMarkATitle":"Edit section: Compute shader other variables","TextMarkTextContent":"edit"},{"Type":"NodeText","Data":"]"}]},{"ID":"20240513165945-b6obdqr","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513165945-b6obdqr","updated":"20240513165946"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"const uvec3 gl_WorkGroupSize;   // GLSL ≥ 4.30\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240513165945-87qci01","Type":"NodeParagraph","Properties":{"id":"20240513165945-87qci01","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"The "},{"Type":"NodeTextMark","TextMarkType":"em","TextMarkTextContent":"gl_WorkGroupSize"},{"Type":"NodeText","Data":" variable is a constant that contains the local work-group size of the shader, in 3 dimensions. It is defined by the "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Layout_Qualifier_(GLSL)","TextMarkTextContent":"layout qualifiers"},{"Type":"NodeText","Data":" \"Layout Qualifier (GLSL)\") "},{"Type":"NodeTextMark","TextMarkType":"em","TextMarkTextContent":"local_size_x/y/z"},{"Type":"NodeText","Data":". This is a compile-time constant."}]},{"ID":"20240513165945-s5zrpod","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240513165945-s5zrpod","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"Shader uniforms"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"["},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki_opengl/index.php?title=Built-in_Variable_(GLSL)\u0026amp;action=edit\u0026amp;section=13","TextMarkATitle":"Edit section: Shader uniforms","TextMarkTextContent":"edit"},{"Type":"NodeText","Data":"]"}]},{"ID":"20240513165945-64jm1jo","Type":"NodeParagraph","Properties":{"id":"20240513165945-64jm1jo","updated":"20240513165946"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Shader/Defined_Uniforms","TextMarkATitle":"Shader/Defined Uniforms","TextMarkTextContent":"V"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"·"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki_opengl/index.php?title=Shader/Defined_Uniforms\u0026amp;action=edit","TextMarkTextContent":"E"}]},{"ID":"20240513165945-okmy5a1","Type":"NodeParagraph","Properties":{"id":"20240513165945-okmy5a1","updated":"20240513165946"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Shader","TextMarkATitle":"Shader","TextMarkTextContent":"Shaders"},{"Type":"NodeText","Data":" define the following uniforms."}]},{"ID":"20240513165945-4n9dk1m","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513165945-4n9dk1m","updated":"20240513165946"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"struct gl_DepthRangeParameters\n{\n    float near;\n    float far;\n    float diff;\n};\nuniform gl_DepthRangeParameters gl_DepthRange;\n\nuniform int gl_NumSamples; // GLSL 4.20\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240513165945-z5ersfh","Type":"NodeParagraph","Properties":{"id":"20240513165945-z5ersfh","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"This struct provides access to the "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/GLAPI/glDepthRange","TextMarkATitle":"GLAPI/glDepthRange","TextMarkTextContent":"glDepthRange"},{"Type":"NodeText","Data":" near and far values. The "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"diff"},{"Type":"NodeText","Data":" value is the "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"far"},{"Type":"NodeText","Data":" value minus the "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"near"},{"Type":"NodeText","Data":" value. Do recall that OpenGL makes no requirement that "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"far"},{"Type":"NodeText","Data":" is greater than "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"near"},{"Type":"NodeText","Data":". With regard to multiple "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Viewport","TextMarkATitle":"Viewport","TextMarkTextContent":"Viewports"},{"Type":"NodeText","Data":", "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_DepthRange"},{"Type":"NodeText","Data":" only stores the range for viewport 0."}]},{"ID":"20240513165945-jcfm62l","Type":"NodeParagraph","Properties":{"id":"20240513165945-jcfm62l","updated":"20240513165946"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_NumSamples"},{"Type":"NodeText","Data":" is the number of samples in the current "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Framebuffer","TextMarkATitle":"Framebuffer","TextMarkTextContent":"Framebuffer"},{"Type":"NodeText","Data":". If the framebuffer is not multisampled, then this value will be 1."}]},{"ID":"20240513165945-oh5tbc9","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240513165945-oh5tbc9","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"Constants"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"["},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki_opengl/index.php?title=Built-in_Variable_(GLSL)\u0026amp;action=edit\u0026amp;section=14","TextMarkATitle":"Edit section: Constants","TextMarkTextContent":"edit"},{"Type":"NodeText","Data":"]"}]},{"ID":"20240513165945-9lbvxn5","Type":"NodeParagraph","Properties":{"id":"20240513165945-9lbvxn5","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"There are many "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Shader_Resource_Limit","TextMarkATitle":"Shader Resource Limit","TextMarkTextContent":"implementation-defined shader stage limits"},{"Type":"NodeText","Data":" who's values would be useful to a particular shader. GLSL provides a number of constant integer variables that give these values to shaders. All of these values are available to "},{"Type":"NodeTextMark","TextMarkType":"em","TextMarkTextContent":"all"},{"Type":"NodeText","Data":" shader stages."}]},{"ID":"20240513165945-b7zg36o","Type":"NodeParagraph","Properties":{"id":"20240513165945-b7zg36o","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"All of these variables are declared as "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"const"},{"Type":"NodeText","Data":", so they are considered "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Constant_Expression","TextMarkATitle":"Constant Expression","TextMarkTextContent":"constant expressions"},{"Type":"NodeText","Data":". These constants are named based on the OpenGL enumerators used to specify those limitations. The transformation is quite simple: take the GLSL name, put an underscore before every capital letter (unless there's one there already), and then make all the letters capital."}]},{"ID":"20240513165945-fjxj2oi","Type":"NodeParagraph","Properties":{"id":"20240513165945-fjxj2oi","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"The variables are as follows:"}]},{"ID":"20240513165945-3e8jonn","Type":"NodeTable","TableAligns":[0,0,0],"Properties":{"colgroup":"||","id":"20240513165945-3e8jonn","updated":"20240513165946"},"Children":[{"Type":"NodeTableHead","Data":"thead","Children":[{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"th"},{"Type":"NodeTableCell","Data":"th"},{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"Minimum Required Value"}]}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"Type"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"Name"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"GL 3.3"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxVertexAttribs"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"16"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxVertexOutputComponents"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"64"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxVertexUniformComponents"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"1024"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxVertexTextureImageUnits"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"16"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxGeometryInputComponents"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"64"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxGeometryOutputComponents"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"128"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxGeometryUniformComponents"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"1024"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxGeometryTextureImageUnits"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"16"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxGeometryOutputVertices"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"256"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxGeometryTotalOutputComponents"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"1024"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxGeometryVaryingComponents"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"64"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxFragmentInputComponents"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"128"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxDrawBuffers"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"8"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxFragmentUniformComponents"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"1024"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxTextureImageUnits"},{"Type":"NodeText","Data":"^1^"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"16"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxClipDistances"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"8"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxCombinedTextureImageUnits"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"48"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"Requires OpenGL 4.0"}]},{"Type":"NodeTableCell","Data":"td"},{"Type":"NodeTableCell","Data":"td"}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxTessControlInputComponents"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxTessControlOutputComponents"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxTessControlUniformComponents"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxTessControlTextureImageUnits"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxTessControlTotalOutputComponents"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxTessEvaluationInputComponents"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxTessEvaluationOutputComponents"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxTessEvaluationUniformComponents"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxTessEvaluationTextureImageUnits"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxTessPatchComponents"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxPatchVertices"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxTessGenLevel"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"Requires OpenGL 4.1"}]},{"Type":"NodeTableCell","Data":"td"},{"Type":"NodeTableCell","Data":"td"}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxViewports"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxVertexUniformVectors"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxFragmentUniformVectors"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxVaryingVectors"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"Requires OpenGL 4.2"}]},{"Type":"NodeTableCell","Data":"td"},{"Type":"NodeTableCell","Data":"td"}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxVertexImageUniforms"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxVertexAtomicCounters"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxVertexAtomicCounterBuffers"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxTessControlImageUniforms"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxTessControlAtomicCounters"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxTessControlAtomicCounterBuffers"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxTessEvaluationImageUniforms"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxTessEvaluationAtomicCounters"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxTessEvaluationAtomicCounterBuffers"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxGeometryImageUniforms"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxGeometryAtomicCounters"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxGeometryAtomicCounterBuffers"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxFragmentImageUniforms"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxFragmentAtomicCounters"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxFragmentAtomicCounterBuffers"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxCombinedImageUniforms"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxCombinedAtomicCounters"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxCombinedAtomicCounterBuffers"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxImageUnits"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxCombinedImageUnitsAndFragmentOutputs"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxImageSamples"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxAtomicCounterBindings"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxAtomicCounterBufferSize"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MinProgramTexelOffset"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxProgramTexelOffset"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"Requires OpenGL 4.3"}]},{"Type":"NodeTableCell","Data":"td"},{"Type":"NodeTableCell","Data":"td"}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"ivec3"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxComputeWorkGroupCount"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"ivec3"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxComputeWorkGroupSize"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxComputeUniformComponents"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxComputeTextureImageUnits"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxComputeImageUniforms"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxComputeAtomicCounters"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxComputeAtomicCounterBuffers"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"Requires OpenGL 4.4"}]},{"Type":"NodeTableCell","Data":"td"},{"Type":"NodeTableCell","Data":"td"}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxTransformFeedbackBuffers"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"gl_MaxTransformFeedbackInterleavedComponents"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"N/A"}]}]}]},{"ID":"20240513165945-7zp5mc0","Type":"NodeParagraph","Properties":{"id":"20240513165945-7zp5mc0","updated":"20240513165946"},"Children":[{"Type":"NodeText","Data":"^1^: This is the number of fragment shader texture image units."}]},{"ID":"20240513165945-hz0ss2i","Type":"NodeParagraph","Properties":{"id":"20240513165945-hz0ss2i","updated":"20240513165946"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Special:Categories","TextMarkATitle":"Special:Categories","TextMarkTextContent":"Categories"},{"Type":"NodeText","Data":": * "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki_opengl/index.php?title=Category:Pages_using_deprecated_source_tags\u0026amp;action=edit\u0026amp;redlink=1","TextMarkATitle":"Category:Pages using deprecated source tags (page does not exist)","TextMarkTextContent":"Pages using deprecated source tags"}]},{"ID":"20240513165945-owd40o0","Type":"NodeList","ListData":{},"Properties":{"id":"20240513165945-owd40o0","updated":"20240513165946"},"Children":[{"ID":"20240513165945-3n7sy9t","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240513165945-3n7sy9t","updated":"20240513165945"},"Children":[{"ID":"20240513165945-t88r0qb","Type":"NodeParagraph","Properties":{"id":"20240513165945-t88r0qb","updated":"20240513165945"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.khronos.org/opengl/wiki/Category:OpenGL_Shading_Language","TextMarkATitle":"Category:OpenGL Shading Language","TextMarkTextContent":"OpenGL Shading Language"}]}]}]}]}