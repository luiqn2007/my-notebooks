{"ID":"20240513180452-3sm79px","Spec":"1","Type":"NodeDocument","Properties":{"icon":"minecraft.ico","id":"20240513180452-3sm79px","title":"CocartesianLike","type":"doc","updated":"20240513180500"},"Children":[{"ID":"20240513180500-6dnyfqf","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513180500-6dnyfqf","updated":"20240513180500"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"public interface CocartesianLike\u003cT extends K1, C,  Mu extends CocartesianLike.Mu\u003e extends Functor\u003cT, Mu\u003e {\n    interface Mu extends Functor.Mu, Traversable.Mu {}\n  \n    \u003cA\u003e App\u003cEither.Mu\u003cC\u003e, A\u003e to(App\u003cT, A\u003e input);\n    \u003cA\u003e App\u003cT, A\u003e from(App\u003cEither.Mu\u003cC\u003e, A\u003e input);\n\n    default \u003cF extends K1, A, B\u003e App\u003cF, App\u003cT, B\u003e\u003e traverse(Applicative\u003cF, ?\u003e applicative, Function\u003cA, App\u003cF, B\u003e\u003e function, App\u003cT, A\u003e input);\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240513180500-2yql0y1","Type":"NodeParagraph","Properties":{"id":"20240513180500-2yql0y1","updated":"20240513180500"},"Children":[{"Type":"NodeText","Data":"该类型表示经算子变换后的结果集和输入集之间有满射关系，但不满足双射关系，因此返回的是一个 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Either"},{"Type":"NodeText","Data":"​ 而不是 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Pair"},{"Type":"NodeText","Data":"​"}]}]}