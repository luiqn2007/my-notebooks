{"ID":"20240513180439-z3pydjt","Spec":"1","Type":"NodeDocument","Properties":{"icon":"minecraft.ico","id":"20240513180439-z3pydjt","title":"CartesianLike","type":"doc","updated":"20240513180446"},"Children":[{"ID":"20240513180446-sdnbun6","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513180446-sdnbun6","updated":"20240513180446"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"public interface CartesianLike\u003cT extends K1, C,  Mu extends CartesianLike.Mu\u003e extends Functor\u003cT, Mu\u003e {\n    interface Mu extends Functor.Mu, Traversable.Mu {}\n  \n    \u003cA\u003e App\u003cPair.Mu\u003cC\u003e, A\u003e to(App\u003cT, A\u003e input);\n    \u003cA\u003e App\u003cT, A\u003e from(App\u003cPair.Mu\u003cC\u003e, A\u003e input);\n\n    default \u003cF extends K1, A, B\u003e App\u003cF, App\u003cT, B\u003e\u003e traverse(Applicative\u003cF, ?\u003e applicative, Function\u003cA, App\u003cF, B\u003e\u003e function, App\u003cT, A\u003e input);\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240513180446-e2lwi1e","Type":"NodeParagraph","Properties":{"id":"20240513180446-e2lwi1e","updated":"20240513180446"},"Children":[{"Type":"NodeText","Data":"该接口描述通过算子变换前后的数据集满足双射的关系。该接口的三个泛型 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"T"},{"Type":"NodeText","Data":"​, "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"C"},{"Type":"NodeText","Data":"​, "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Mu"},{"Type":"NodeText","Data":"​ 分别表示操作容器类型、映射对应的另一个类型、算子类型。"}]},{"ID":"20240513180446-4l1ud3r","Type":"NodeParagraph","Properties":{"id":"20240513180446-4l1ud3r","updated":"20240513180446"},"Children":[{"Type":"NodeText","Data":"该接口定义了三个方法。"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"from"},{"Type":"NodeText","Data":"​ 和 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"to"},{"Type":"NodeText","Data":"​ 分别表示从两个集合之间的映射结果，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"traverse"},{"Type":"NodeText","Data":"​ 则具有类似 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"flatMap"},{"Type":"NodeText","Data":"​ 的效果，变换函数返回的就是一个容器。"}]},{"ID":"20240513180446-6was820","Type":"NodeParagraph","Properties":{"id":"20240513180446-6was820","updated":"20240513180446"},"Children":[{"Type":"NodeText","Data":"该接口 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"from"},{"Type":"NodeText","Data":"​, "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"to"},{"Type":"NodeText","Data":"​ 的返回值实际是 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Pair"},{"Type":"NodeText","Data":"​ 类型，表示一个切实存在的一一映射。"}]}]}