{"ID":"20240513180050-sx00c6z","Spec":"1","Type":"NodeDocument","Properties":{"icon":"minecraft.ico","id":"20240513180050-sx00c6z","title":"创建 Codec","type":"doc","updated":"20240513180227"},"Children":[{"ID":"20240513180058-o6ivmo6","Type":"NodeParagraph","Properties":{"id":"20240513180058-o6ivmo6","updated":"20240513180058"},"Children":[{"Type":"NodeText","Data":"通过 Codec 的实现类 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"RecordCodecBuilder"},{"Type":"NodeText","Data":"​ 可创建用于任意类型的 Codec 对象。以下例子仅以 record 类作为例子，实际上可以用任何类型"}]},{"ID":"20240513180058-9qclp0y","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513180058-9qclp0y","updated":"20240513180058"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"// 需要序列化/反序列化的类\nrecord MyData(String name, int value) {}\n\n// Codec\npublic static final Codec\u003cMyData\u003e CODEC = RecordCodecBuilder.create(instance -\u003e\n        instance.group(\n                // fieldOf 对应序列化后的键，forGetter 对应序列化时如何取值\n                Codec.STRING.fieldOf(\"name\").forGetter(MyData::name),\n                Codec.INT.fieldOf(\"value\").forGetter(MyData::value)\n        // apply 方法用于反序列化时创建一个对象\n        ).apply(instance, MyData::new));\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240513180104-b8oo0pi","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20240513180104-b8oo0pi","updated":"20240513180104"},"Children":[{"Type":"NodeText","Data":"派生 Codec"}]},{"ID":"20240513180111-d16ny7v","Type":"NodeParagraph","Properties":{"id":"20240513180111-d16ny7v","updated":"20240513180111"},"Children":[{"Type":"NodeText","Data":"根据现有 Codec，创建新 Codec"}]},{"ID":"20240513180111-11du0ca","Type":"NodeList","ListData":{},"Properties":{"id":"20240513180111-11du0ca","updated":"20240513180227"},"Children":[{"ID":"20240513180111-a036zhe","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240513180111-a036zhe","updated":"20240513180111"},"Children":[{"ID":"20240513180111-lp2tra5","Type":"NodeParagraph","Properties":{"id":"20240513180111-lp2tra5","updated":"20240513180111"},"Children":[{"Type":"NodeText","Data":"装箱：将一个对象在序列化时打包成一个单独的对象，使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"forGetter"},{"Type":"NodeText","Data":"​ 指定键名"}]},{"ID":"20240513180111-7g58rnx","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513180111-7g58rnx","updated":"20240513180111"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"Codec\u003cMyData\u003e CODEC;\n// { \"name\": ..., \"value\": ... }\nCODEC.encodeStart(JsonOps.INSTANCE, object).result().get()\n\nCodec\u003cMyData\u003e CODEC_BOXED = CODEC.fieldOf(\"data\").codec();\n// { \"data\": { \"name\": ..., \"value\": ... } }\nCODEC_BOXED.encodeStart(JsonOps.INSTANCE, object).result().get()\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]},{"ID":"20240513180127-bofkac3","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240513180127-bofkac3"},"Children":[{"ID":"20240513180127-s7cbcwl","Type":"NodeParagraph","Properties":{"id":"20240513180127-s7cbcwl","updated":"20240513180132"},"Children":[{"Type":"NodeText","Data":"常量：使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Codec.unit(value)"},{"Type":"NodeText","Data":"​ 创建一个常量 Codec。当序列化时，产生空值；反序列化时，总是传入的 value"}]},{"ID":"20240513180111-1kfi4zr","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513180111-1kfi4zr","updated":"20240513180111"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"Codec\u003cInteger\u003e CODEC_5 = Codec.unit(5);\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]},{"ID":"20240513180138-5lhairl","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240513180138-5lhairl"},"Children":[{"ID":"20240513180138-37xwgo2","Type":"NodeParagraph","Properties":{"id":"20240513180138-37xwgo2","updated":"20240513180142"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"List"},{"Type":"NodeText","Data":"​："},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Codec#listOf()"},{"Type":"NodeText","Data":"​ 将 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Code\u0026lt;T\u0026gt;"},{"Type":"NodeText","Data":"​ 转化为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Codec\u0026lt;List\u0026lt;T\u0026gt;\u0026gt;"},{"Type":"NodeText","Data":"​"}]},{"ID":"20240513180111-r15qach","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513180111-r15qach","updated":"20240513180111"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"Codec\u003cMyData\u003e CODEC;\nCodec\u003cList\u003cMyData\u003e\u003e CODEC_LIST = CODEC.listOf();\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]},{"ID":"20240513180149-gheaxre","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240513180149-gheaxre"},"Children":[{"ID":"20240513180149-k3na35d","Type":"NodeParagraph","Properties":{"id":"20240513180149-k3na35d","updated":"20240513180153"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Map"},{"Type":"NodeText","Data":"​：使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Codec.unboundedMap(CodecKey, CodecValue)"},{"Type":"NodeText","Data":"​ 创建 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Codec\u0026lt;Map\u0026lt;Key, Value\u0026gt;\u0026gt;"},{"Type":"NodeText","Data":"​ 对象，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"CodecKey"},{"Type":"NodeText","Data":"​ 必须可以与 String 互相转换"}]}]},{"ID":"20240513180154-no2hcog","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240513180154-no2hcog"},"Children":[{"ID":"20240513180154-es6zvng","Type":"NodeParagraph","Properties":{"id":"20240513180154-es6zvng","updated":"20240513180159"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Pair"},{"Type":"NodeText","Data":"​："},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Codec.pair(CodecA, CodecB)"},{"Type":"NodeText","Data":"​，传入的 Codec 必须是一个显示的对象，如 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"RecordCodecBuilder"},{"Type":"NodeText","Data":"​，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"unit"},{"Type":"NodeText","Data":"​ 或 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"fieldOf"},{"Type":"NodeText","Data":"​ 创建的 Codec，生成合并两个对象的结果"}]},{"ID":"20240513180111-6cuk2uz","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513180111-6cuk2uz","updated":"20240513180111"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"// { \"name\": \"...\" }\npublic static final Codec\u003cString\u003e CODEC_NAME = Codec.STRING.fieldOf(\"name\").codec();  \n// { \"value\": ... }\npublic static final Codec\u003cInteger\u003e CODEC_VALUE = Codec.INT.fieldOf(\"value\").codec();\n// { \"name\": \"...\", \"value\": ... }\npublic static final Codec\u003cPair\u003cString, Integer\u003e\u003e CODEC_PAIR = Codec.pair(CODEC_NAME, CODEC_VALUE);\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]},{"ID":"20240513180203-bcchdju","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240513180203-bcchdju"},"Children":[{"ID":"20240513180203-tlntfql","Type":"NodeParagraph","Properties":{"id":"20240513180203-tlntfql","updated":"20240513180206"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Either"},{"Type":"NodeText","Data":"​："},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Codec.either(CodecA, CodecB)"},{"Type":"NodeText","Data":"​，类似 Pair，生成 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Codec\u0026lt;Either\u0026lt;A, B\u0026gt;\u0026gt;"},{"Type":"NodeText","Data":"​，二选一"}]},{"ID":"20240513180111-70e5q96","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513180111-70e5q96","updated":"20240513180111"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"public static final Codec\u003cString\u003e CODEC_STRING;\npublic static final Codec\u003cInteger\u003e CODEC_INT;\npublic static final Codec\u003cEither\u003cString, Integer\u003e\u003e CODEC_EITHER = Codec.either(CODEC_STRING, CODEC_INT);\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]},{"ID":"20240513180213-lhbwowp","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240513180213-lhbwowp","updated":"20240513180227"},"Children":[{"ID":"20240513180213-3oq52x6","Type":"NodeParagraph","Properties":{"id":"20240513180213-3oq52x6","updated":"20240513180216"},"Children":[{"Type":"NodeText","Data":"等效类型：在存在 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Codec\u0026lt;A\u0026gt;"},{"Type":"NodeText","Data":"​ 的情况下，若我们有一个类型 B，A 与 B 之间可以一对一转换，则可以通过 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Codec\u0026lt;A\u0026gt;.xmap(Function\u0026lt;A, B\u0026gt;, Function\u0026lt;B, A\u0026gt;)"},{"Type":"NodeText","Data":"​ 创建 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Codec\u0026lt;B\u0026gt;"},{"Type":"NodeText","Data":"​"}]},{"ID":"20240513180111-dypvipo","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513180111-dypvipo","updated":"20240513180222"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr"},{"Type":"NodeCodeBlockCode","Data":"Codec\u003cPair\u003cString, Integer\u003e\u003e CODEC_PAIR;\nCodec\u003cMyData\u003e CODEC_XMAP = CODEC_PAIR.xmap(\n            // Function\u003cPair\u003cString, Integer\u003e, MyData\u003e\n            p -\u003e new MyData(p.getFirst(), p.getSecond()),\n            // Function\u003cMyData, Pair\u003cString, Integer\u003e\u003e\n            data -\u003e Pair.of(data.name(), data.value()));\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240513180111-ej2kugz","Type":"NodeParagraph","Properties":{"id":"20240513180111-ej2kugz","updated":"20240513180227"},"Children":[{"Type":"NodeText","Data":"若 A 与 B 之间不一定能完全转换成功，如 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"ResourceLocation"},{"Type":"NodeText","Data":"​ 可以转换为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"String"},{"Type":"NodeText","Data":"​，但反过来可能无法完成转换（要求字符串必须是 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"a:b"},{"Type":"NodeText","Data":"​ 的格式），则为部分等效类型"}]},{"ID":"20240513180111-ku7xd6l","Type":"NodeTable","TableAligns":[0,0,0],"Properties":{"colgroup":"||","id":"20240513180111-ku7xd6l","updated":"20240513180227"},"Children":[{"Type":"NodeTableHead","Data":"thead","Children":[{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"转换方法"}]},{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"A-\u003eB 一定成功"}]},{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"B-\u003eA 一定成功"}]}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"xmap"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"是"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"是"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"flatComapMap"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"是"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"否"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"comapFlatMap"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"否"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"是"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"flatXmap"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"否"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"否"}]}]}]}]}]}]}