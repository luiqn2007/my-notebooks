{"ID":"20240513180553-02lo1bh","Spec":"1","Type":"NodeDocument","Properties":{"icon":"minecraft.ico","id":"20240513180553-02lo1bh","title":"内置容器","type":"doc","updated":"20240513180707"},"Children":[{"ID":"20240513180559-hv256xp","Type":"NodeParagraph","Properties":{"id":"20240513180559-hv256xp","updated":"20240513180559"},"Children":[{"Type":"NodeText","Data":"DFU 提供了几种内置容器，通常都含有 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"create"},{"Type":"NodeText","Data":"​ 方法用于创建对应容器，以及 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"unbox"},{"Type":"NodeText","Data":"​ 方法用于从 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"App\u0026lt;Mu, ?\u0026gt;"},{"Type":"NodeText","Data":"​ 类型的对象转换为具体的实现类型。"}]},{"ID":"20240513180559-56h8irz","Type":"NodeParagraph","Properties":{"id":"20240513180559-56h8irz","updated":"20240513180559"},"Children":[{"Type":"NodeText","Data":"同时，几乎每个容器都包含一个 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Instance"},{"Type":"NodeText","Data":"​ 类，该类实现 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Application"},{"Type":"NodeText","Data":"​ 接口，用于操作容器内的数据。"}]},{"ID":"20240513180707-pwgoz94","Type":"NodeParagraph","Properties":{"id":"20240513180707-pwgoz94","updated":"20240513180707"},"Children":[{"Type":"NodeText","Data":"DFU 提供了几种内置容器，通常都含有 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"create"},{"Type":"NodeText","Data":"​ 方法用于创建对应容器，以及 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"unbox"},{"Type":"NodeText","Data":"​ 方法用于从 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"App\u0026lt;Mu, ?\u0026gt;"},{"Type":"NodeText","Data":"​ 类型的对象转换为具体的实现类型。"}]},{"ID":"20240513180707-f2xebxc","Type":"NodeParagraph","Properties":{"id":"20240513180707-f2xebxc","updated":"20240513180707"},"Children":[{"Type":"NodeText","Data":"同时，几乎每个容器都包含一个 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Instance"},{"Type":"NodeText","Data":"​ 类，该类实现 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Application"},{"Type":"NodeText","Data":"​ 接口，用于操作容器内的数据。"}]},{"ID":"20240513180707-dxq7gh1","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240513180707-dxq7gh1","updated":"20240513180707"},"Children":[{"Type":"NodeText","Data":"IdF"}]},{"ID":"20240513180707-okdsvb9","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513180707-okdsvb9","updated":"20240513180708"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"public final class IdF\u003cA\u003e implements App\u003cIdF.Mu, A\u003e {\n    public static final class Mu implements K1 {}\n\n    final A value;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240513180707-y63z0oz","Type":"NodeParagraph","Properties":{"id":"20240513180707-y63z0oz","updated":"20240513180708"},"Children":[{"Type":"NodeText","Data":"IdF 即 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"IndentityF"},{"Type":"NodeText","Data":"​ 是一种最简单的容器，该容器只读的存储了一个值。"}]},{"ID":"20240513180707-5cjfeq2","Type":"NodeParagraph","Properties":{"id":"20240513180707-5cjfeq2","updated":"20240513180708"},"Children":[{"Type":"NodeText","Data":"该类的静态方法中没有 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"unbox"},{"Type":"NodeText","Data":"​ 方法，但有 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"get"},{"Type":"NodeText","Data":"​ 方法可用于直接获取其中的值。"}]},{"ID":"20240513180707-r57uu33","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240513180707-r57uu33","updated":"20240513180707"},"Children":[{"Type":"NodeText","Data":"Const"}]},{"ID":"20240513180707-qrdor53","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513180707-qrdor53","updated":"20240513180708"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"public final class Const\u003cC, T\u003e implements App\u003cConst.Mu\u003cC\u003e, T\u003e {\n    public static final class Mu\u003cC\u003e implements K1 {}\n\n    public static \u003cC, T\u003e C unbox(App\u003cMu\u003cC\u003e, T\u003e box) {\n        return ((Const\u003cC, T\u003e) box).value;\n    }\n\n    private final C value;\n\n    Const(C value) {\n        this.value = value;\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240513180707-2nmyito","Type":"NodeParagraph","Properties":{"id":"20240513180707-2nmyito","updated":"20240513180708"},"Children":[{"Type":"NodeText","Data":"Const 也是存储一个常量，但他的数据通过一个 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Monoid"},{"Type":"NodeText","Data":"​ 构建。"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Monoid"},{"Type":"NodeText","Data":"​ 表示一个容器，其行为符合数学上的幺半群，自定义运算符为两个容器连接，即："}]},{"ID":"20240513180707-pe0xo3f","Type":"NodeList","ListData":{},"Properties":{"id":"20240513180707-pe0xo3f","updated":"20240513180708"},"Children":[{"ID":"20240513180707-74pooap","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240513180707-74pooap","updated":"20240513180707"},"Children":[{"ID":"20240513180707-h86xahu","Type":"NodeParagraph","Properties":{"id":"20240513180707-h86xahu","updated":"20240513180707"},"Children":[{"Type":"NodeText","Data":"两个内部元素类型为 T 的容器连接后的结果仍是一个内部元素类型为 T 的同类容器"}]}]},{"ID":"20240513180707-6pnpe9i","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240513180707-6pnpe9i","updated":"20240513180707"},"Children":[{"ID":"20240513180707-xlyt38z","Type":"NodeParagraph","Properties":{"id":"20240513180707-xlyt38z","updated":"20240513180707"},"Children":[{"Type":"NodeText","Data":"多个容器按顺序连接，符合结合律"}]}]},{"ID":"20240513180707-odi1g18","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240513180707-odi1g18","updated":"20240513180707"},"Children":[{"ID":"20240513180707-ultxs0c","Type":"NodeParagraph","Properties":{"id":"20240513180707-ultxs0c","updated":"20240513180707"},"Children":[{"Type":"NodeText","Data":"有一个容器与其他所有容器相连接都是原容器\n一个典型的实现是 List"}]}]}]},{"ID":"20240513180707-3unrkuy","Type":"NodeParagraph","Properties":{"id":"20240513180707-3unrkuy","updated":"20240513180708"},"Children":[{"Type":"NodeText","Data":"Const 有一个 unbox 函数，但实际做的是 IdF 的 get 的事情，即取出值而不是转换为 Const 类"}]},{"ID":"20240513180707-n4w518j","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240513180707-n4w518j","updated":"20240513180707"},"Children":[{"Type":"NodeText","Data":"ListBox"}]},{"ID":"20240513180707-ob1hqmk","Type":"NodeParagraph","Properties":{"id":"20240513180707-ob1hqmk","updated":"20240513180708"},"Children":[{"Type":"NodeText","Data":"该类存储一个 List，但他的 Instance 实现了 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Traversable"},{"Type":"NodeText","Data":"​ 没有实现 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Application"},{"Type":"NodeText","Data":"​"}]},{"ID":"20240513180707-x7mhd63","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240513180707-x7mhd63","updated":"20240513180707"},"Children":[{"Type":"NodeText","Data":"Either"}]},{"ID":"20240513180707-qplju6t","Type":"NodeParagraph","Properties":{"id":"20240513180707-qplju6t","updated":"20240513180708"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Either"},{"Type":"NodeText","Data":"​ 本身包含两个泛型，其 App 类型为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Either\u0026lt;L, R\u0026gt; implements App\u0026lt;Mu\u0026lt;R\u0026gt;, L\u0026gt;"},{"Type":"NodeText","Data":"​。"}]},{"ID":"20240513180707-gxitrf9","Type":"NodeParagraph","Properties":{"id":"20240513180707-gxitrf9","updated":"20240513180708"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Either"},{"Type":"NodeText","Data":"​ 实现的是 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"if-else"},{"Type":"NodeText","Data":"​ 或 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"try-catch"},{"Type":"NodeText","Data":"​ 模型。通常情况下，右值 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Right"},{"Type":"NodeText","Data":"​ 是正常情况下使用的值，左值 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Left"},{"Type":"NodeText","Data":"​ 是右值不存在时使用的值，或异常信息。"}]},{"ID":"20240513180707-0pt1f1z","Type":"NodeParagraph","Properties":{"id":"20240513180707-0pt1f1z","updated":"20240513180708"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Either"},{"Type":"NodeText","Data":"​ 可以通过 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"swap()"},{"Type":"NodeText","Data":"​ 方法交换 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Left"},{"Type":"NodeText","Data":"​、"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Right"},{"Type":"NodeText","Data":"​ 值。"}]},{"ID":"20240513180707-4zuo3jb","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240513180707-4zuo3jb","updated":"20240513180707"},"Children":[{"Type":"NodeText","Data":"Pair"}]},{"ID":"20240513180707-u8z40ke","Type":"NodeParagraph","Properties":{"id":"20240513180707-u8z40ke","updated":"20240513180708"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Pair"},{"Type":"NodeText","Data":"​ 是一个包含两个值的容器，其 App 类型为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Pair\u0026lt;F, S\u0026gt; implements App\u0026lt;Mu\u0026lt;S\u0026gt;, F\u0026gt;"},{"Type":"NodeText","Data":"​，可以通过 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"swap()"},{"Type":"NodeText","Data":"​ 方法交换 First、Second 值。"}]},{"ID":"20240513180707-w3qd30u","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240513180707-w3qd30u","updated":"20240513180707"},"Children":[{"Type":"NodeText","Data":"Monad"}]},{"ID":"20240513180707-zft0ae7","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513180707-zft0ae7","updated":"20240513180708"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"public interface Monoid\u003cT\u003e {\n    T point();\n    T add(final T first, final T second);\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240513180707-ura9lj0","Type":"NodeParagraph","Properties":{"id":"20240513180707-ura9lj0","updated":"20240513180708"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Monand"},{"Type":"NodeText","Data":"​ 表示指代一种配备 “monoid” 结构的函子。"}]},{"ID":"20240513180707-b9p7yml","Type":"NodeParagraph","Properties":{"id":"20240513180707-b9p7yml","updated":"20240513180708"},"Children":[{"Type":"NodeText","Data":"简单来说，满足以下情况："}]},{"ID":"20240513180707-nuk0caq","Type":"NodeList","ListData":{},"Properties":{"id":"20240513180707-nuk0caq","updated":"20240513180708"},"Children":[{"ID":"20240513180707-f7zs16x","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240513180707-f7zs16x","updated":"20240513180707"},"Children":[{"ID":"20240513180707-vplij2t","Type":"NodeParagraph","Properties":{"id":"20240513180707-vplij2t","updated":"20240513180707"},"Children":[{"Type":"NodeText","Data":"（单位元）存在单位元 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"e: Unit -\u0026gt; M"},{"Type":"NodeText","Data":"​，对应 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"point()"},{"Type":"NodeText","Data":"​ 方法返回的是一个无内容的容器"}]}]},{"ID":"20240513180707-f9t0k5b","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240513180707-f9t0k5b","updated":"20240513180707"},"Children":[{"ID":"20240513180707-726ryvf","Type":"NodeParagraph","Properties":{"id":"20240513180707-726ryvf","updated":"20240513180707"},"Children":[{"Type":"NodeText","Data":"（结合律）两个容器进行某种运算后结果仍为该容器"}]}]}]},{"ID":"20240513180707-8qqv7x5","Type":"NodeParagraph","Properties":{"id":"20240513180707-8qqv7x5","updated":"20240513180708"},"Children":[{"Type":"NodeText","Data":"若将该结构类比于面向对象的普通 Collection，单位元即空容器，某种运算即 addAll"}]},{"ID":"20240513180707-vaio0a5","Type":"NodeParagraph","Properties":{"id":"20240513180707-vaio0a5","updated":"20240513180708"},"Children":[{"Type":"NodeText","Data":"该结构通常用于带有副作用的操作，如 IO"}]},{"ID":"20240513180707-jq9hnar","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240513180707-jq9hnar","updated":"20240513180707"},"Children":[{"Type":"NodeText","Data":"DataResult"}]},{"ID":"20240513180707-uhb4fk4","Type":"NodeParagraph","Properties":{"id":"20240513180707-uhb4fk4","updated":"20240513180708"},"Children":[{"Type":"NodeText","Data":"该类用于存储一组数据操作后结果，包含一个 Either"}]}]}