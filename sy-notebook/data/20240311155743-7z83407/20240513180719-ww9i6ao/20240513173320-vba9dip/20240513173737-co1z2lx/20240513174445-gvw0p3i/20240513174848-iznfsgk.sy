{"ID":"20240513174848-iznfsgk","Spec":"1","Type":"NodeDocument","Properties":{"icon":"minecraft.ico","id":"20240513174848-iznfsgk","title":"Applicative functor","type":"doc","updated":"20240513175726"},"Children":[{"ID":"20240513174859-y76npvc","Type":"NodeParagraph","Properties":{"id":"20240513174859-y76npvc","updated":"20240513175726"},"Children":[{"Type":"NodeText","Data":"Applicative functor 是实现了 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"ap"},{"Type":"NodeText","Data":"​ 方法的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"pointed functor"},{"Type":"NodeText","Data":"​。该接口实现的是让不同 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"functor"},{"Type":"NodeText","Data":"​ 相互 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"apply"},{"Type":"NodeText","Data":"​（即 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"map"},{"Type":"NodeText","Data":"​） 的功能。"}]},{"ID":"20240513174859-xx2x7fs","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513174859-xx2x7fs","updated":"20240513174859"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"// pointed functor\ninterface PointedFunctor\u003cT\u003e {\n    \u003cR\u003e Applicative\u003cR\u003e map(Function\u003cT, R\u003e f);\n    static \u003cT\u003e Applicative\u003cT\u003e(T value);\n    T getValue();\n}\n// applicative functor\ninterface Applicative\u003cT\u003e extends PointedFunctor\u003cT\u003e {\n    // ap 函数\n    default \u003cR, I\u003e PointedFunctor\u003cR\u003e ap(PointedFunctor\u003cI\u003e other) {\n        // 要求 T 本身是一个函数 Function\u003cI, R\u003e\n        return other.map((Function\u003cI, R\u003e) value());\n    }\n    // static 版本的 ap，带有类型校验\n    static \u003cT, R\u003e PointedFunctor\u003cR\u003e ap(\n                      Applicative\u003cFunction\u003cT, R\u003e\u003e f, \n                      PointedFunctor\u003cT\u003e v) {\n        return v.map(f.value());\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240513174859-nq3i7i8","Type":"NodeParagraph","Properties":{"id":"20240513174859-nq3i7i8","updated":"20240513174859"},"Children":[{"Type":"NodeText","Data":"这种写法有点像前序的运算符。下面例子中使用伪代码，F 是一个 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"applicative functor"},{"Type":"NodeText","Data":"​"}]},{"ID":"20240513174859-e5lvigv","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513174859-e5lvigv","updated":"20240513174859"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"add :: int -\u003e int -\u003e int\nint a, b, sum\n\nsum = F.of(add)      // F(int -\u003e int -\u003e int)\n       .ap(F.of(a))  // F(int -\u003e int)\n       .ap(F.of(b))  // int\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240513174859-hv7gil9","Type":"NodeParagraph","Properties":{"id":"20240513174859-hv7gil9","updated":"20240513174859"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"map"},{"Type":"NodeText","Data":"​ 等价于 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"of/ap"},{"Type":"NodeText","Data":"​"}]},{"ID":"20240513174859-7fhq88o","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513174859-7fhq88o","updated":"20240513174859"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"f :: int -\u003e int\nint x\n\n// 等价\nF.of(x).map(f) == F.of(f).ap(F.of(x))\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}