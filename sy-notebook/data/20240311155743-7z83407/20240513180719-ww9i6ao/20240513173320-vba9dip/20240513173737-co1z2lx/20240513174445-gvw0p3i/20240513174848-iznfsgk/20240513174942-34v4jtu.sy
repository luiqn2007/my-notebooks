{"ID":"20240513174942-34v4jtu","Spec":"1","Type":"NodeDocument","Properties":{"icon":"minecraft.ico","id":"20240513174942-34v4jtu","title":"lift","type":"doc","updated":"20240513175005"},"Children":[{"ID":"20240513174942-rnwobd2","Type":"NodeParagraph","Properties":{"id":"20240513174942-rnwobd2","style":"color: var(--b3-card-info-color);background-color: var(--b3-card-info-background);","updated":"20240513174956"},"Children":[{"Type":"NodeText","Data":"lift：一个函数在调用的时候，如果被 "},{"Type":"NodeTextMark","Properties":{"parent-style":"color: var(--b3-card-info-color);background-color: var(--b3-card-info-background);"},"TextMarkType":"code","TextMarkTextContent":"map"},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"color: var(--b3-card-info-color);background-color: var(--b3-card-info-background);\"}"},{"Type":"NodeText","Data":"​ 包裹了，那么它就会从一个非 functor 函数转换为一个 functor 函数。这个过程称为 "},{"Type":"NodeTextMark","Properties":{"parent-style":"color: var(--b3-card-info-color);background-color: var(--b3-card-info-background);"},"TextMarkType":"code","TextMarkTextContent":"lift"},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"color: var(--b3-card-info-color);background-color: var(--b3-card-info-background);\"}"},{"Type":"NodeText","Data":"​"}]},{"ID":"20240513175005-sfz630e","Type":"NodeParagraph","Properties":{"id":"20240513175005-sfz630e","updated":"20240513175005"},"Children":[{"Type":"NodeText","Data":"可以通过 pointfree 的方式调用 applicative functor，其中 App 是一个 applicative functor"}]},{"ID":"20240513175005-t8h10os","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513175005-t8h10os","updated":"20240513175005"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"App\u003cR\u003e lift(Function\u003cT, R\u003e f, App\u003cT\u003e v) {\n    return v.map(f);\n}\nApp\u003cR\u003e lift2(BiFunction\u003cT1, T2, R\u003e f, App\u003cT1\u003e v1, App\u003cT2\u003e v2) {\n    return v1.map(f).ap(v2);\n}\nApp\u003cR\u003e lift3(Function3\u003cT1, T2, T3, R\u003e f, App\u003cT1\u003e v1, App\u003cT2\u003e v2, App\u003cT3\u003e v3) {\n    return v1.map(f).ap(v2).ap(v3);\n}\n// ... 可以有无数个\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}