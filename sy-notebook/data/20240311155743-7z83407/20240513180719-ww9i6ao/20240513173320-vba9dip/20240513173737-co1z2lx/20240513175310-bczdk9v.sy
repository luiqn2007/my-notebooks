{"ID":"20240513175310-bczdk9v","Spec":"1","Type":"NodeDocument","Properties":{"icon":"minecraft.ico","id":"20240513175310-bczdk9v","title":"自然变换","type":"doc","updated":"20240513175412"},"Children":[{"ID":"20240513175321-d3qogcu","Type":"NodeParagraph","Properties":{"id":"20240513175321-d3qogcu","style":"color: var(--b3-card-info-color);background-color: var(--b3-card-info-background);","updated":"20240513175347"},"Children":[{"Type":"NodeText","Data":"自然变换：Nature Transformation, nt，应用于容器上的一种变换。我们可以先自然变换再"},{"Type":"NodeTextMark","Properties":{"parent-style":"color: var(--b3-card-info-color);background-color: var(--b3-card-info-background);"},"TextMarkType":"code","TextMarkTextContent":"map"},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"color: var(--b3-card-info-color);background-color: var(--b3-card-info-background);\"}"},{"Type":"NodeText","Data":"​，或者先"},{"Type":"NodeTextMark","Properties":{"parent-style":"color: var(--b3-card-info-color);background-color: var(--b3-card-info-background);"},"TextMarkType":"code","TextMarkTextContent":"map"},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"color: var(--b3-card-info-color);background-color: var(--b3-card-info-background);\"}"},{"Type":"NodeText","Data":"​再自然变换，结果都是一样的。"}]},{"ID":"20240513175353-rbussuz","Type":"NodeParagraph","Properties":{"id":"20240513175353-rbussuz","updated":"20240513175353"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Properties":{"parent-style":"width: 546px;","style":"width: 536px;"},"Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"Pasted image 20231023091816"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/Pasted image 20231023091816-20240513175353-dmabtwd.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"width: 536px;\" parent-style=\"width: 546px;\"}"},{"Type":"NodeText","Data":"​"}]},{"ID":"20240513175321-56ggsdz","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513175321-56ggsdz","updated":"20240513175321"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"nt :: (Functor F, Functor G) =\u003e F a -\u003e G a\n\ncompose(map(f), nt) == compose(nt, map(f));\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240513175404-pjnu6ix","Type":"NodeParagraph","Properties":{"id":"20240513175404-pjnu6ix","style":"color: var(--b3-card-info-color);background-color: var(--b3-card-info-background);","updated":"20240513175412"},"Children":[{"Type":"NodeText","Data":"同构：isomorphism，一个值在两种类型之间可以互相转换，且不会损失任何数据称为同构"}]},{"ID":"20240513175321-uic4u3m","Type":"NodeParagraph","Properties":{"id":"20240513175321-uic4u3m","updated":"20240513175321"},"Children":[{"Type":"NodeText","Data":"在 Nature Transformation 接口中，既可以 from，又可以 to 的两个类型即同构。"}]}]}