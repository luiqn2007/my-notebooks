{"ID":"20240513174125-xloay3y","Spec":"1","Type":"NodeDocument","Properties":{"icon":"minecraft.ico","id":"20240513174125-xloay3y","title":"函数","type":"doc","updated":"20240513174436"},"Children":[{"ID":"20240513174131-vto8wub","Type":"NodeParagraph","Properties":{"id":"20240513174131-vto8wub","updated":"20240513174131"},"Children":[{"Type":"NodeText","Data":"函数式编程中的函数指的是数学中的函数，即自变量的映射，具有以下特点："}]},{"ID":"20240513174131-z7nc8tt","Type":"NodeList","ListData":{},"Properties":{"id":"20240513174131-z7nc8tt","updated":"20240513174131"},"Children":[{"ID":"20240513174131-fssmd0e","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240513174131-fssmd0e","updated":"20240513174131"},"Children":[{"ID":"20240513174131-f2wqp83","Type":"NodeParagraph","Properties":{"id":"20240513174131-f2wqp83","updated":"20240513174131"},"Children":[{"Type":"NodeText","Data":"函数是一等公民，即与其他数据类型具有相同地位，可用于参数、赋值等"}]}]},{"ID":"20240513174131-rvvaqnk","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240513174131-rvvaqnk","updated":"20240513174131"},"Children":[{"ID":"20240513174131-1al41vn","Type":"NodeParagraph","Properties":{"id":"20240513174131-1al41vn","updated":"20240513174131"},"Children":[{"Type":"NodeText","Data":"函数是纯函数"}]}]}]},{"ID":"20240513174132-eybdup1","Type":"NodeParagraph","Properties":{"id":"20240513174132-eybdup1","style":"color: var(--b3-card-info-color);background-color: var(--b3-card-info-background);","updated":"20240513174144"},"Children":[{"Type":"NodeText","Data":"纯函数：相同的输入，永远会得到相同的输出，而且没有任何可观察的副作用。"}]},{"ID":"20240513174146-94p5eku","Type":"NodeParagraph","Properties":{"id":"20240513174146-94p5eku","style":"color: var(--b3-card-info-color);background-color: var(--b3-card-info-background);","updated":"20240513174157"},"Children":[{"Type":"NodeText","Data":"副作用：与函数外部环境发生任何交互，包括但不限于任何对函数之外的状态发生改变，用户输入输出交互，HTTP 请求等"}]},{"ID":"20240513174203-yndpwhs","Type":"NodeParagraph","Properties":{"id":"20240513174203-yndpwhs","updated":"20240513174203"},"Children":[{"Type":"NodeText","Data":"纯函数为函数式编程带来了很多优点："}]},{"ID":"20240513174203-raj7g5t","Type":"NodeList","ListData":{},"Properties":{"id":"20240513174203-raj7g5t","updated":"20240513174203"},"Children":[{"ID":"20240513174203-h9r5dz8","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240513174203-h9r5dz8","updated":"20240513174203"},"Children":[{"ID":"20240513174203-i6eaek1","Type":"NodeParagraph","Properties":{"id":"20240513174203-i6eaek1","updated":"20240513174203"},"Children":[{"Type":"NodeText","Data":"可缓存性 Cacheable：纯函数可方便的根据输入做缓存"}]},{"ID":"20240513174203-6gl1vsy","Type":"NodeList","ListData":{},"Properties":{"id":"20240513174203-6gl1vsy","updated":"20240513174203"},"Children":[{"ID":"20240513174203-oejde0n","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240513174203-oejde0n","updated":"20240513174203"},"Children":[{"ID":"20240513174203-9s7aewa","Type":"NodeParagraph","Properties":{"id":"20240513174203-9s7aewa","updated":"20240513174203"},"Children":[{"Type":"NodeText","Data":"延迟执行"}]}]}]}]},{"ID":"20240513174203-ua2g9kx","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240513174203-ua2g9kx","updated":"20240513174203"},"Children":[{"ID":"20240513174203-ajs0xpk","Type":"NodeParagraph","Properties":{"id":"20240513174203-ajs0xpk","updated":"20240513174203"},"Children":[{"Type":"NodeText","Data":"可移植性 Portable：纯函数计算结果与外界环境无关，且不与外界产生任何交互"}]}]},{"ID":"20240513174203-7cz12xw","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240513174203-7cz12xw","updated":"20240513174203"},"Children":[{"ID":"20240513174203-3zw8nlo","Type":"NodeParagraph","Properties":{"id":"20240513174203-3zw8nlo","updated":"20240513174203"},"Children":[{"Type":"NodeText","Data":"自文档化 Self-Documenting：依赖明确，便于观察和理解"}]}]},{"ID":"20240513174203-bnyct9a","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240513174203-bnyct9a","updated":"20240513174203"},"Children":[{"ID":"20240513174203-mhk6knw","Type":"NodeParagraph","Properties":{"id":"20240513174203-mhk6knw","updated":"20240513174203"},"Children":[{"Type":"NodeText","Data":"可测试性 Testable：允许方便的自动生成输入并断言输出，不需要模拟外部环境"}]}]},{"ID":"20240513174203-3km6ksy","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240513174203-3km6ksy","updated":"20240513174203"},"Children":[{"ID":"20240513174203-ywvv5j9","Type":"NodeParagraph","Properties":{"id":"20240513174203-ywvv5j9","updated":"20240513174203"},"Children":[{"Type":"NodeText","Data":"合理性 Reasonable：纯函数总是符合引用透明性的"}]}]},{"ID":"20240513174203-rwre4c6","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240513174203-rwre4c6","updated":"20240513174203"},"Children":[{"ID":"20240513174203-rumcc6t","Type":"NodeParagraph","Properties":{"id":"20240513174203-rumcc6t","updated":"20240513174203"},"Children":[{"Type":"NodeText","Data":"并行性：纯函数不需要任何共享内存"}]}]}]},{"ID":"20240513174211-ndudlyj","Type":"NodeParagraph","Properties":{"id":"20240513174211-ndudlyj","style":"color: var(--b3-card-info-color);background-color: var(--b3-card-info-background);","updated":"20240513174219"},"Children":[{"Type":"NodeText","Data":"引用透明性：一段代码可以替换成它执行所得的结果，而且是在不改变整个程序行为的前提下替换的，那么我们就说这段代码是引用透明的"}]},{"ID":"20240513174230-vm357wd","Type":"NodeParagraph","Properties":{"id":"20240513174230-vm357wd","updated":"20240513174234"},"Children":[{"Type":"NodeText","Data":"最简单的一个纯函数称为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"identity"},{"Type":"NodeText","Data":"​ 或 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"id"},{"Type":"NodeText","Data":"​ 函数，输入一个值，并直接返回输入的值。"}]},{"ID":"20240513174252-x49ksa5","Type":"NodeParagraph","Properties":{"id":"20240513174252-x49ksa5","updated":"20240513174334"},"Children":[{"Type":"NodeText","Data":"函数基本运算包括函数合成（Compose）和柯里化（Curry）。"}]},{"ID":"20240513174250-55gnbub","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20240513174250-55gnbub","updated":"20240513174331"},"Children":[{"Type":"NodeText","Data":"柯里化"}]},{"ID":"20240513174305-omz97qx","Type":"NodeParagraph","Properties":{"id":"20240513174305-omz97qx","style":"color: var(--b3-card-info-color);background-color: var(--b3-card-info-background);","updated":"20240513174331"},"Children":[{"Type":"NodeText","Data":"柯里化：Curry，只传递给函数一部分参数来调用它，让它返回一个函数去处理剩下的参数。"}]},{"ID":"20240513174324-ejihtge","Type":"NodeParagraph","Properties":{"id":"20240513174324-ejihtge","updated":"20240513174331"},"Children":[{"Type":"NodeText","Data":"只传给函数一部分参数通常也叫做部分求值或局部调用，函数接收一些函数但不立即求值，而是返回一个保存有已有参数的新函数，直到所有参数都传入时再求值，能够大量减少样板文件代码。"}]},{"ID":"20240513174324-isou2hv","Type":"NodeParagraph","Properties":{"id":"20240513174324-isou2hv","updated":"20240513174331"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"curry"},{"Type":"NodeText","Data":"​ 函数也是一个纯函数。每通过 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"curry"},{"Type":"NodeText","Data":"​ 传递一个参数调用函数，就返回一个确定的新函数处理剩余的参数。某些实现中 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"curry"},{"Type":"NodeText","Data":"​ 函数也允许一次传递多个参数，等效于多次调用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"curry"},{"Type":"NodeText","Data":"​ 函数。以下是 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"curry"},{"Type":"NodeText","Data":"​ 函数的一个 Java 实现"}]},{"ID":"20240513174324-23sqqsc","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513174324-23sqqsc","updated":"20240513174331"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"// Function3 接口\ninterface Function3\u003cT1, T2, T3, R\u003e { R invoke(T1 v1, T2 v2, T3 v3); }\n\n// curry 方法的一种简单实现\n\u003cT1, T2, T3, R\u003e BiFunction\u003cT2, T3, R\u003e curry(Function3\u003cT1, T2, T3, R\u003e func, T1 v1) {\n    return (v2, v3) =\u003e func(v1, v2, v3);\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240513174334-6j4sr0q","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20240513174334-6j4sr0q","updated":"20240513174338"},"Children":[{"Type":"NodeText","Data":"代码组合"}]},{"ID":"20240513174339-4xmqt87","Type":"NodeParagraph","Properties":{"id":"20240513174339-4xmqt87","updated":"20240513174345"},"Children":[{"Type":"NodeText","Data":"函数合成是指将多个函数组合后生成新函数的过程"}]},{"ID":"20240513174345-5yhy4ve","Type":"NodeParagraph","Properties":{"id":"20240513174345-5yhy4ve","style":"color: var(--b3-card-info-color);background-color: var(--b3-card-info-background);","updated":"20240513174416"},"Children":[{"Type":"NodeText","Data":"pointfree：无值风格，函数无须提及将要操作的数据是什么样的。\n -- 运算过程抽象化，处理一个值，但不提到这个值。"}]},{"ID":"20240513174406-n9dtkne","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240513174406-n9dtkne","updated":"20240513174423"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"Function f1, f2;\n\n// 非 pointfree 形式写法\n// 因为提及了传入参数 v\nFunction f = v -\u003e f2.apply(f1.apply(v));\n\n// pointfree 形式的写法\n// 假设一个 compose 方法\nFunction compose(Function f1, Function f2);\nFunction f = compose(f1, f2);\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240513174424-2vt8jpq","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20240513174424-2vt8jpq","updated":"20240513174432"},"Children":[{"Type":"NodeText","Data":"高阶函数"}]},{"ID":"20240513174436-zi3tync","Type":"NodeParagraph","Properties":{"id":"20240513174436-zi3tync","updated":"20240513174436"},"Children":[{"Type":"NodeText","Data":"满足以下特点之一的函数称为高阶函数"}]},{"ID":"20240513174436-2r3m5pv","Type":"NodeList","ListData":{},"Properties":{"id":"20240513174436-2r3m5pv","updated":"20240513174436"},"Children":[{"ID":"20240513174436-lpsc8q3","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240513174436-lpsc8q3","updated":"20240513174436"},"Children":[{"ID":"20240513174436-bnqi90k","Type":"NodeParagraph","Properties":{"id":"20240513174436-bnqi90k","updated":"20240513174436"},"Children":[{"Type":"NodeText","Data":"接受函数作为参数，如集合中常见的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"map"},{"Type":"NodeText","Data":"​，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"foreach"},{"Type":"NodeText","Data":"​，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"reduce"},{"Type":"NodeText","Data":"​ 等"}]}]},{"ID":"20240513174436-det8alr","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240513174436-det8alr","updated":"20240513174436"},"Children":[{"ID":"20240513174436-rwqkiho","Type":"NodeParagraph","Properties":{"id":"20240513174436-rwqkiho","updated":"20240513174436"},"Children":[{"Type":"NodeText","Data":"返回值是一个函数，如柯里化方法等"}]}]}]}]}