{"ID":"20240421182308-wondh1o","Spec":"1","Type":"NodeDocument","Properties":{"icon":"thymeleaf.png","id":"20240421182308-wondh1o","title":"附录：内置方法","type":"doc","updated":"20240421182529"},"Children":[{"ID":"20240421182506-joimeqb","Type":"NodeHTMLBlock","Data":"\u003cdiv style=\"\n    border: 1px solid rgb(222, 222, 222);\n    box-shadow: rgba(0, 0, 0, 0.06) 0px 1px 3px;\n  \"\u003e\n\u003cstyle\u003e\n.w {\n\toverflow: hidden;\n\tmargin: 0;\n\tpadding: 0;\n\tbackground: none transparent;\n\ttext-align: left;\n}\n.em \u003e a,\n.tc \u003e a,\n.th \u003e a {\n\tbackground-color: transparent;\n\t-webkit-text-decoration-skip: objects;\n}\n.em a:not([href]):not([tabindex]),\n.tc a:not([href]):not([tabindex]),\n.th a:not([href]):not([tabindex]) {\n\tcolor: inherit;\n\ttext-decoration: none;\n}\n.em a:not([href]):not([tabindex]):focus,\n.tc a:not([href]):not([tabindex]):focus,\n.th a:not([href]):not([tabindex]):focus {\n\toutline: 0;\n}\n.em \u003e a,\n.tc \u003e a,\n.th \u003e a {\n\ttext-decoration: none;\n\tcolor: inherit;\n\t-ms-touch-action: manipulation;\n\ttouch-action: manipulation;\n}\n.w {\n\tline-height: 1.4;\n\tfont-family: -apple-system, system-ui, BlinkMacSystemFont, 'Segoe UI',\n\t\tRoboto, 'Helvetica Neue', Arial, sans-serif;\n\tfont-weight: 400;\n\tfont-size: 15px;\n\tcolor: inherit;\n\t-webkit-hyphens: auto;\n\t-moz-hyphens: auto;\n\t-ms-hyphens: auto;\n\thyphens: auto;\n\tword-wrap: break-word;\n\toverflow-wrap: break-word;\n}\n._rtl {\n\tdirection: rtl;\n\ttext-align: right;\n}\n.t,\n.w,\n.wf {\n\tdisplay: -ms-flexbox;\n\tdisplay: flex;\n\t-ms-flex-direction: column;\n\tflex-direction: column;\n\tmax-width: 100%;\n\twidth: 100%;\n}\n@supports (-webkit-overflow-scrolling: touch) {\n\t.w {\n\t\tmax-width: 100vw;\n\t}\n}\n.wc,\n.wt {\n\toverflow: hidden;\n}\n._sc,\n._sm {\n\tbackground: inherit;\n}\n._or .tf {\n\t-ms-flex-order: 0;\n\torder: 0;\n}\n._or .th {\n\t-ms-flex-order: 1;\n\torder: 1;\n}\n._or .td {\n\t-ms-flex-order: 2;\n\torder: 2;\n}\n._alsr._ls .wf {\n\t-ms-flex-direction: column-reverse;\n\tflex-direction: column-reverse;\n}\n._alcr._lc .wf {\n\t-ms-flex-direction: row-reverse;\n\tflex-direction: row-reverse;\n}\n._sc._ls .wt,\n._ss._ls .wt {\n\tpadding-left: 0;\n\tpadding-right: 0;\n}\n._sc._ls._alsd .wt,\n._ss._ls._alsd .wt {\n\tpadding-bottom: 0;\n}\n._sc._ls._alsr .wt,\n._ss._ls._alsr .wt {\n\tpadding-top: 0;\n}\n._sc._lc .wt,\n._ss._lc .wt {\n\tpadding-top: 0;\n\tpadding-bottom: 0;\n}\n._ss._lc._alcd .wt {\n\tpadding-right: 0;\n}\n._ss._lc._alcr .wt {\n\tpadding-left: 0;\n}\n._lc .wf {\n\t-ms-flex-direction: row;\n\tflex-direction: row;\n}\n._lc .wt {\n\tdisplay: -ms-flexbox;\n\tdisplay: flex;\n\t-ms-flex: 1;\n\tflex: 1;\n\t-ms-flex-align: center;\n\talign-items: center;\n}\n._sc._lc._alcd .wf {\n\tpadding-right: 0 !important;\n}\n._sc._lc._alcr .wf {\n\tpadding-left: 0 !important;\n}\n.wt {\n\tpadding: 8px 10px;\n}\n@media (min-width: 360px) {\n\t.wt {\n\t\tpadding: 12px 15px;\n\t}\n}\n@media (min-width: 600px) {\n\t.wt {\n\t\tpadding: 16px 20px;\n\t}\n}\n._lc._sm:not(.xd) .wc {\n\tmin-width: 100px;\n\twidth: 100px;\n\tmin-height: 100px;\n}\n@media (min-width: 360px) {\n\t._lc._sm:not(.xd) .wc {\n\t\tmin-width: 110px;\n\t\twidth: 110px;\n\t\tmin-height: 110px;\n\t}\n}\n@media (min-width: 460px) {\n\t._lc._sm:not(.xd) .wc {\n\t\tmin-width: 140px;\n\t\twidth: 140px;\n\t\tmin-height: 140px;\n\t}\n}\n@media (min-width: 600px) {\n\t._lc._sm:not(.xd) .wc {\n\t\tmin-width: 160px;\n\t\twidth: 160px;\n\t\tmin-height: 160px;\n\t}\n}\n._lc._sm._xd:not(._xf) .wc,\n._lc._sm._xf:not(._xd) .wc {\n\tmin-width: 100px;\n\twidth: 100px;\n\tmin-height: 100px;\n}\n@media (min-width: 360px) {\n\t._lc._sm._xd:not(._xf) .wc,\n\t._lc._sm._xf:not(._xd) .wc {\n\t\tmin-width: 110px;\n\t\twidth: 110px;\n\t\tmin-height: 110px;\n\t}\n}\n@media (min-width: 600px) {\n\t._lc._sm._xd:not(._xf) .wc,\n\t._lc._sm._xf:not(._xd) .wc {\n\t\tmin-width: 120px;\n\t\twidth: 120px;\n\t\tmin-height: 120px;\n\t}\n}\n._lc._sm._xd._xf .wc {\n\tmin-width: 100px;\n\twidth: 100px;\n\tmin-height: 100px;\n}\n._lc._sc:not(.xd) .wc {\n\tmin-width: 92px;\n\twidth: 92px;\n\tmin-height: 92px;\n}\n@media (min-width: 360px) {\n\t._lc._sc:not(.xd) .wc {\n\t\tmin-width: 100px;\n\t\twidth: 100px;\n\t\tmin-height: 100px;\n\t}\n}\n@media (min-width: 460px) {\n\t._lc._sc:not(.xd) .wc {\n\t\tmin-width: 130px;\n\t\twidth: 130px;\n\t\tmin-height: 130px;\n\t}\n}\n@media (min-width: 600px) {\n\t._lc._sc:not(.xd) .wc {\n\t\tmin-width: 145px;\n\t\twidth: 145px;\n\t\tmin-height: 145px;\n\t}\n}\n._lc._sc._xd:not(._xf) .wc,\n._lc._sc._xf:not(._xd) .wc {\n\tmin-width: 92px;\n\twidth: 92px;\n\tmin-height: 92px;\n}\n@media (min-width: 360px) {\n\t._lc._sc._xd:not(._xf) .wc,\n\t._lc._sc._xf:not(._xd) .wc {\n\t\tmin-width: 100px;\n\t\twidth: 100px;\n\t\tmin-height: 100px;\n\t}\n}\n@media (min-width: 600px) {\n\t._lc._sc._xd:not(._xf) .wc,\n\t._lc._sc._xf:not(._xd) .wc {\n\t\tmin-width: 110px;\n\t\twidth: 110px;\n\t\tmin-height: 110px;\n\t}\n}\n._lc._sc._xd._xf .wc {\n\tmin-width: 92px;\n\twidth: 92px;\n\tmin-height: 92px;\n}\n@supports (-moz-appearance: meterbar) and (all: initial) {\n\t._lc .wc {\n\t\tdisplay: -ms-flexbox;\n\t\tdisplay: flex;\n\t\t-ms-flex-direction: column;\n\t\tflex-direction: column;\n\t\t-ms-flex-align: stretch;\n\t\talign-items: stretch;\n\t\t-ms-flex-line-pack: stretch;\n\t\talign-content: stretch;\n\t}\n}\n._lc._ss:not(.xd) .wc {\n\tmin-width: 100px;\n\twidth: 100px;\n\tmin-height: 100px;\n}\n@media (min-width: 360px) {\n\t._lc._ss:not(.xd) .wc {\n\t\tmin-width: 110px;\n\t\twidth: 110px;\n\t\tmin-height: 110px;\n\t}\n}\n@media (min-width: 460px) {\n\t._lc._ss:not(.xd) .wc {\n\t\tmin-width: 140px;\n\t\twidth: 140px;\n\t\tmin-height: 140px;\n\t}\n}\n@media (min-width: 600px) {\n\t._lc._ss:not(.xd) .wc {\n\t\tmin-width: 160px;\n\t\twidth: 160px;\n\t\tmin-height: 160px;\n\t}\n}\n._lc._ss._xd:not(._xf) .wc,\n._lc._ss._xf:not(._xd) .wc {\n\tmin-width: 100px;\n\twidth: 100px;\n\tmin-height: 100px;\n}\n@media (min-width: 360px) {\n\t._lc._ss._xd:not(._xf) .wc,\n\t._lc._ss._xf:not(._xd) .wc {\n\t\tmin-width: 110px;\n\t\twidth: 110px;\n\t\tmin-height: 110px;\n\t}\n}\n@media (min-width: 600px) {\n\t._lc._ss._xd:not(._xf) .wc,\n\t._lc._ss._xf:not(._xd) .wc {\n\t\tmin-width: 120px;\n\t\twidth: 120px;\n\t\tmin-height: 120px;\n\t}\n}\n._lc._ss._xd._xf .wc {\n\tmin-width: 100px;\n\twidth: 100px;\n\tmin-height: 100px;\n}\n._sc .wf {\n\tpadding: 8px;\n}\n@media (min-width: 360px) {\n\t._sc:not(._xd):not(._xf) .wf {\n\t\tpadding: 10px;\n\t}\n}\n@media (min-width: 460px) {\n\t._sc:not(._xd):not(._xf) .wf {\n\t\tpadding: 12px;\n\t}\n}\n@media (min-width: 600px) {\n\t._sc:not(._xd):not(._xf) .wf {\n\t\tpadding: 16px;\n\t}\n}\n._ls .th {\n\t-webkit-line-clamp: 2;\n}\n._ls._lh10 .th {\n\tmax-height: 2em;\n}\n._ls._lh11 .th {\n\tmax-height: 2.2em;\n}\n._ls._lh12 .th {\n\tmax-height: 2.4em;\n}\n._ls._lh13 .th {\n\tmax-height: 2.6em;\n}\n._ls._lh14 .th {\n\tmax-height: 2.8em;\n}\n._ls._lh15 .th {\n\tmax-height: 3em;\n}\n._ls .td {\n\t-webkit-line-clamp: 3;\n}\n._ls._lh10 .td {\n\tmax-height: 3em;\n}\n._ls._lh11 .td {\n\tmax-height: 3.3em;\n}\n._ls._lh12 .td {\n\tmax-height: 3.6em;\n}\n._ls._lh13 .td {\n\tmax-height: 3.9em;\n}\n._ls._lh14 .td {\n\tmax-height: 4.2em;\n}\n._ls._lh15 .td {\n\tmax-height: 4.5em;\n}\n._ls .twd {\n\tdisplay: none;\n}\n@media (max-width: 459px) {\n\t._lc .ti,\n\t._lc .tm,\n\t._lc .tw + .tx,\n\t._lc .twt {\n\t\tdisplay: none;\n\t}\n}\n@media (min-width: 460px) {\n\t._lc .twd {\n\t\tdisplay: none;\n\t}\n}\n._lc:not(._ap):not(._ts) .th {\n\t-webkit-line-clamp: 3;\n}\n._lc:not(._ap):not(._ts)._lh10 .th {\n\tmax-height: 3em;\n}\n._lc:not(._ap):not(._ts)._lh11 .th {\n\tmax-height: 3.3em;\n}\n._lc:not(._ap):not(._ts)._lh12 .th {\n\tmax-height: 3.6em;\n}\n._lc:not(._ap):not(._ts)._lh13 .th {\n\tmax-height: 3.9em;\n}\n._lc:not(._ap):not(._ts)._lh14 .th {\n\tmax-height: 4.2em;\n}\n._lc:not(._ap):not(._ts)._lh15 .th {\n\tmax-height: 4.5em;\n}\n@media (max-width: 359px) {\n\t._lc:not(._ap):not(._ts) .td {\n\t\tdisplay: none;\n\t}\n}\n@media (min-width: 360px) {\n\t._lc:not(._ap):not(._ts) .th {\n\t\t-webkit-line-clamp: 2;\n\t}\n\t._lc:not(._ap):not(._ts)._lh10 .th {\n\t\tmax-height: 2em;\n\t}\n\t._lc:not(._ap):not(._ts)._lh11 .th {\n\t\tmax-height: 2.2em;\n\t}\n\t._lc:not(._ap):not(._ts)._lh12 .th {\n\t\tmax-height: 2.4em;\n\t}\n\t._lc:not(._ap):not(._ts)._lh13 .th {\n\t\tmax-height: 2.6em;\n\t}\n\t._lc:not(._ap):not(._ts)._lh14 .th {\n\t\tmax-height: 2.8em;\n\t}\n\t._lc:not(._ap):not(._ts)._lh15 .th {\n\t\tmax-height: 3em;\n\t}\n\t._lc:not(._ap):not(._ts) .td {\n\t\t-webkit-line-clamp: 1;\n\t}\n\t._lc:not(._ap):not(._ts)._lh10 .td {\n\t\tmax-height: 1em;\n\t}\n\t._lc:not(._ap):not(._ts)._lh11 .td {\n\t\tmax-height: 1.1em;\n\t}\n\t._lc:not(._ap):not(._ts)._lh12 .td {\n\t\tmax-height: 1.2em;\n\t}\n\t._lc:not(._ap):not(._ts)._lh13 .td {\n\t\tmax-height: 1.3em;\n\t}\n\t._lc:not(._ap):not(._ts)._lh14 .td {\n\t\tmax-height: 1.4em;\n\t}\n\t._lc:not(._ap):not(._ts)._lh15 .td {\n\t\tmax-height: 1.5em;\n\t}\n}\n@media (min-width: 460px) {\n\t._lc:not(._ap):not(._ts) .td {\n\t\t-webkit-line-clamp: 2;\n\t}\n\t._lc:not(._ap):not(._ts)._lh10 .td {\n\t\tmax-height: 2em;\n\t}\n\t._lc:not(._ap):not(._ts)._lh11 .td {\n\t\tmax-height: 2.2em;\n\t}\n\t._lc:not(._ap):not(._ts)._lh12 .td {\n\t\tmax-height: 2.4em;\n\t}\n\t._lc:not(._ap):not(._ts)._lh13 .td {\n\t\tmax-height: 2.6em;\n\t}\n\t._lc:not(._ap):not(._ts)._lh14 .td {\n\t\tmax-height: 2.8em;\n\t}\n\t._lc:not(._ap):not(._ts)._lh15 .td {\n\t\tmax-height: 3em;\n\t}\n}\n._lc._ap:not(._ts) .th {\n\t-webkit-line-clamp: 3;\n}\n._lc._ap:not(._ts)._lh10 .th {\n\tmax-height: 3em;\n}\n._lc._ap:not(._ts)._lh11 .th {\n\tmax-height: 3.3em;\n}\n._lc._ap:not(._ts)._lh12 .th {\n\tmax-height: 3.6em;\n}\n._lc._ap:not(._ts)._lh13 .th {\n\tmax-height: 3.9em;\n}\n._lc._ap:not(._ts)._lh14 .th {\n\tmax-height: 4.2em;\n}\n._lc._ap:not(._ts)._lh15 .th {\n\tmax-height: 4.5em;\n}\n._lc._ap:not(._ts) .td {\n\t-webkit-line-clamp: 2;\n}\n._lc._ap:not(._ts)._lh10 .td {\n\tmax-height: 2em;\n}\n._lc._ap:not(._ts)._lh11 .td {\n\tmax-height: 2.2em;\n}\n._lc._ap:not(._ts)._lh12 .td {\n\tmax-height: 2.4em;\n}\n._lc._ap:not(._ts)._lh13 .td {\n\tmax-height: 2.6em;\n}\n._lc._ap:not(._ts)._lh14 .td {\n\tmax-height: 2.8em;\n}\n._lc._ap:not(._ts)._lh15 .td {\n\tmax-height: 3em;\n}\n@media (min-width: 360px) {\n\t._lc._ap:not(._ts) .th {\n\t\t-webkit-line-clamp: 2;\n\t}\n\t._lc._ap:not(._ts)._lh10 .th {\n\t\tmax-height: 2em;\n\t}\n\t._lc._ap:not(._ts)._lh11 .th {\n\t\tmax-height: 2.2em;\n\t}\n\t._lc._ap:not(._ts)._lh12 .th {\n\t\tmax-height: 2.4em;\n\t}\n\t._lc._ap:not(._ts)._lh13 .th {\n\t\tmax-height: 2.6em;\n\t}\n\t._lc._ap:not(._ts)._lh14 .th {\n\t\tmax-height: 2.8em;\n\t}\n\t._lc._ap:not(._ts)._lh15 .th {\n\t\tmax-height: 3em;\n\t}\n\t._lc._ap:not(._ts) .td {\n\t\t-webkit-line-clamp: 3;\n\t}\n\t._lc._ap:not(._ts)._lh10 .td {\n\t\tmax-height: 3em;\n\t}\n\t._lc._ap:not(._ts)._lh11 .td {\n\t\tmax-height: 3.3em;\n\t}\n\t._lc._ap:not(._ts)._lh12 .td {\n\t\tmax-height: 3.6em;\n\t}\n\t._lc._ap:not(._ts)._lh13 .td {\n\t\tmax-height: 3.9em;\n\t}\n\t._lc._ap:not(._ts)._lh14 .td {\n\t\tmax-height: 4.2em;\n\t}\n\t._lc._ap:not(._ts)._lh15 .td {\n\t\tmax-height: 4.5em;\n\t}\n}\n@media (min-width: 460px) {\n\t._lc._ap:not(._ts) .td {\n\t\t-webkit-line-clamp: 4;\n\t}\n\t._lc._ap:not(._ts)._lh10 .td {\n\t\tmax-height: 4em;\n\t}\n\t._lc._ap:not(._ts)._lh11 .td {\n\t\tmax-height: 4.4em;\n\t}\n\t._lc._ap:not(._ts)._lh12 .td {\n\t\tmax-height: 4.8em;\n\t}\n\t._lc._ap:not(._ts)._lh13 .td {\n\t\tmax-height: 5.2em;\n\t}\n\t._lc._ap:not(._ts)._lh14 .td {\n\t\tmax-height: 5.6em;\n\t}\n\t._lc._ap:not(._ts)._lh15 .td {\n\t\tmax-height: 6em;\n\t}\n}\n._lc._ts .th {\n\t-webkit-line-clamp: 1;\n}\n._lc._ts._lh10 .th {\n\tmax-height: 1em;\n}\n._lc._ts._lh11 .th {\n\tmax-height: 1.1em;\n}\n._lc._ts._lh12 .th {\n\tmax-height: 1.2em;\n}\n._lc._ts._lh13 .th {\n\tmax-height: 1.3em;\n}\n._lc._ts._lh14 .th {\n\tmax-height: 1.4em;\n}\n._lc._ts._lh15 .th {\n\tmax-height: 1.5em;\n}\n._lc._ts .td {\n\t-webkit-line-clamp: 2;\n}\n._lc._ts._lh10 .td {\n\tmax-height: 2em;\n}\n._lc._ts._lh11 .td {\n\tmax-height: 2.2em;\n}\n._lc._ts._lh12 .td {\n\tmax-height: 2.4em;\n}\n._lc._ts._lh13 .td {\n\tmax-height: 2.6em;\n}\n._lc._ts._lh14 .td {\n\tmax-height: 2.8em;\n}\n._lc._ts._lh15 .td {\n\tmax-height: 3em;\n}\n@media (min-width: 460px) {\n\t._lc._ts .th {\n\t\t-webkit-line-clamp: 1;\n\t}\n\t._lc._ts._lh10 .th {\n\t\tmax-height: 1em;\n\t}\n\t._lc._ts._lh11 .th {\n\t\tmax-height: 1.1em;\n\t}\n\t._lc._ts._lh12 .th {\n\t\tmax-height: 1.2em;\n\t}\n\t._lc._ts._lh13 .th {\n\t\tmax-height: 1.3em;\n\t}\n\t._lc._ts._lh14 .th {\n\t\tmax-height: 1.4em;\n\t}\n\t._lc._ts._lh15 .th {\n\t\tmax-height: 1.5em;\n\t}\n\t._lc._ts .td {\n\t\t-webkit-line-clamp: 3;\n\t}\n\t._lc._ts._lh10 .td {\n\t\tmax-height: 3em;\n\t}\n\t._lc._ts._lh11 .td {\n\t\tmax-height: 3.3em;\n\t}\n\t._lc._ts._lh12 .td {\n\t\tmax-height: 3.6em;\n\t}\n\t._lc._ts._lh13 .td {\n\t\tmax-height: 3.9em;\n\t}\n\t._lc._ts._lh14 .td {\n\t\tmax-height: 4.2em;\n\t}\n\t._lc._ts._lh15 .td {\n\t\tmax-height: 4.5em;\n\t}\n}\n@media (min-width: 460px) {\n\t._lc._xf:not(._xd)._ts .td {\n\t\t-webkit-line-clamp: 2;\n\t}\n\t._lc._xf:not(._xd)._ts._lh10 .td {\n\t\tmax-height: 2em;\n\t}\n\t._lc._xf:not(._xd)._ts._lh11 .td {\n\t\tmax-height: 2.2em;\n\t}\n\t._lc._xf:not(._xd)._ts._lh12 .td {\n\t\tmax-height: 2.4em;\n\t}\n\t._lc._xf:not(._xd)._ts._lh13 .td {\n\t\tmax-height: 2.6em;\n\t}\n\t._lc._xf:not(._xd)._ts._lh14 .td {\n\t\tmax-height: 2.8em;\n\t}\n\t._lc._xf:not(._xd)._ts._lh15 .td {\n\t\tmax-height: 3em;\n\t}\n}\n@media (min-width: 460px) {\n\t._lc._xf:not(._xd)._tl .td,\n\t._lc._xf:not(._xd)._tm .td {\n\t\t-webkit-line-clamp: 1;\n\t}\n\t._lc._xf:not(._xd)._tl._lh10 .td,\n\t._lc._xf:not(._xd)._tm .td {\n\t\tmax-height: 1em;\n\t}\n\t._lc._xf:not(._xd)._tl._lh11 .td,\n\t._lc._xf:not(._xd)._tm .td {\n\t\tmax-height: 1.1em;\n\t}\n\t._lc._xf:not(._xd)._tl._lh12 .td,\n\t._lc._xf:not(._xd)._tm .td {\n\t\tmax-height: 1.2em;\n\t}\n\t._lc._xf:not(._xd)._tl._lh13 .td,\n\t._lc._xf:not(._xd)._tm .td {\n\t\tmax-height: 1.3em;\n\t}\n\t._lc._xf:not(._xd)._tl._lh14 .td,\n\t._lc._xf:not(._xd)._tm .td {\n\t\tmax-height: 1.4em;\n\t}\n\t._lc._xf:not(._xd)._tl._lh15 .td,\n\t._lc._xf:not(._xd)._tm .td {\n\t\tmax-height: 1.5em;\n\t}\n}\n.t {\n\t-webkit-hyphens: auto;\n\t-moz-hyphens: auto;\n\t-ms-hyphens: auto;\n\thyphens: auto;\n}\n.td,\n.th {\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n\tdisplay: block;\n}\n@supports (display: -webkit-box) {\n\t.td,\n\t.th {\n\t\tdisplay: -webkit-box;\n\t\t-webkit-box-orient: vertical;\n\t}\n}\n.td {\n\tvertical-align: inherit;\n}\n.tf,\n.th {\n\tmargin-bottom: 0.5em;\n}\n.td {\n\tmargin-bottom: 0.6em;\n}\n._od .td:last-child,\n._od .tf:last-child,\n._od .th:last-child {\n\tmargin-bottom: 0 !important;\n}\n._or .td {\n\tmargin-bottom: 0 !important;\n}\n.tf {\n\tdisplay: -ms-flexbox;\n\tdisplay: flex;\n\t-ms-flex-align: center;\n\talign-items: center;\n}\n.tc {\n\t-ms-flex: 1;\n\tflex: 1;\n\twhite-space: nowrap;\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n}\n.tim {\n\tdisplay: block;\n\tmin-width: 16px;\n\tmin-height: 16px;\n\twidth: 1em;\n\theight: 1em;\n\tmargin-right: 6px;\n}\n._rtl .tim {\n\tmargin-left: 6px;\n\tmargin-right: 0;\n}\n.tx {\n\topacity: 0.3;\n\tmargin: 0 0.25em;\n}\n.tx:last-child {\n\tdisplay: none !important;\n}\n._hd .td,\n._hf .tf {\n\tdisplay: none;\n}\n._hw .ti,\n._hw .tw,\n._hw .tw + .tx {\n\tdisplay: none;\n}\n._hm .tm,\n._hm .tw + .tx {\n\tdisplay: none;\n}\n._hwi .ti {\n\tdisplay: none;\n}\n._hwt .tw,\n._hwt .tw + .tx {\n\tdisplay: none;\n}\n._hmt .tmt,\n._hmt .tmt + .tx {\n\tdisplay: none;\n}\n._hmd .tm .tx,\n._hmd .tmd {\n\tdisplay: none;\n}\n._od._hf .td {\n\tmargin-bottom: 0 !important;\n}\n._od._hd._hf .th,\n._or._hd .th {\n\tmargin-bottom: 0 !important;\n}\n@media (min-width: 460px) {\n\t.td {\n\t\tmargin-bottom: 0.7em;\n\t}\n}\n._ffsa {\n\tfont-family: -apple-system, system-ui, BlinkMacSystemFont, 'Segoe UI',\n\t\tRoboto, 'Helvetica Neue', Arial, sans-serif;\n}\n._ffse {\n\tfont-family: Georgia, 'Times New Roman', Times, serif;\n}\n._ffmo {\n\tfont-family: Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New',\n\t\tmonospace;\n}\n._ffco {\n\tfont-family: 'Comic Sans MS', 'Comic Sans', cursive;\n}\n._fwn {\n\tfont-weight: 400;\n}\n._fwb {\n\tfont-weight: 700;\n}\n._fsi {\n\tfont-style: italic;\n}\n._fsn {\n\tfont-style: normal;\n}\n._ttn {\n\ttext-transform: none;\n}\n._ttu {\n\ttext-transform: uppercase;\n\tletter-spacing: 0.025em;\n}\n._lh10 {\n\tline-height: 1;\n}\n._lh11 {\n\tline-height: 1.1;\n}\n._lh12 {\n\tline-height: 1.2;\n}\n._lh13 {\n\tline-height: 1.3;\n}\n._lh14 {\n\tline-height: 1.4;\n}\n._lh15 {\n\tline-height: 1.5;\n}\n._f3m {\n\tfont-size: 11px;\n}\n._f0,\n._f1m,\n._f2m,\n._f3m {\n\tfont-size: 12px;\n}\n._f1p,\n._f2p {\n\tfont-size: 13px;\n}\n._f3p {\n\tfont-size: 14px;\n}\n._f4p {\n\tfont-size: 16px;\n}\n@media (min-width: 360px) {\n\t._f0 {\n\t\tfont-size: 13px;\n\t}\n\t._f1p {\n\t\tfont-size: 14px;\n\t}\n\t._f2p {\n\t\tfont-size: 15px;\n\t}\n\t._f3p {\n\t\tfont-size: 16px;\n\t}\n\t._f4p {\n\t\tfont-size: 18px;\n\t}\n}\n@media (min-width: 460px) {\n\t._f1m {\n\t\tfont-size: 13px;\n\t}\n\t._f0 {\n\t\tfont-size: 14px;\n\t}\n\t._f1p {\n\t\tfont-size: 15px;\n\t}\n\t._f2p {\n\t\tfont-size: 16px;\n\t}\n\t._f3p {\n\t\tfont-size: 18px;\n\t}\n\t._f4p {\n\t\tfont-size: 21px;\n\t}\n}\n@media (min-width: 600px) {\n\t._f3m {\n\t\tfont-size: 12px;\n\t}\n\t._f2m {\n\t\tfont-size: 13px;\n\t}\n\t._f1m {\n\t\tfont-size: 14px;\n\t}\n\t._f0 {\n\t\tfont-size: 15px;\n\t}\n\t._f1p {\n\t\tfont-size: 17px;\n\t}\n\t._f2p {\n\t\tfont-size: 18px;\n\t}\n\t._f3p {\n\t\tfont-size: 21px;\n\t}\n\t._f4p {\n\t\tfont-size: 24px;\n\t}\n}\n.e {\n\toverflow: hidden;\n\tposition: relative;\n\twidth: 100%;\n}\n.e ._ls {\n\theight: 0;\n\tpadding-bottom: 56.25%;\n}\n@supports (-moz-appearance: meterbar) and (all: initial) {\n\t._lc .e {\n\t\t-ms-flex: 1;\n\t\tflex: 1;\n\t}\n}\n._lc:not(._ap) .e {\n\theight: 100%;\n\tpadding-bottom: 0;\n}\n.em {\n\tposition: absolute;\n\twidth: 100%;\n\theight: 100%;\n}\n.c,\n.co {\n\tposition: absolute;\n\twidth: 100%;\n\theight: 100%;\n}\n.c {\n\tdisplay: block;\n\twidth: 100%;\n\theight: 100%;\n\tbackground: no-repeat center;\n\tbackground-size: cover;\n}\n.c {\n\tz-index: 20;\n}\n.co {\n\tz-index: 30;\n}\n.pr {\n\tposition: absolute;\n\twidth: 100%;\n\theight: 100%;\n\tz-index: 10;\n}\n.pr \u003e video {\n\twidth: 100%;\n\theight: 100%;\n}\n.pr .plyr {\n\theight: 100%;\n}\n.pv {\n\tdisplay: block;\n\twidth: 100%;\n\theight: 100%;\n}\n.w {\n\tbackground-color: inherit;\n}\n.t {\n\tline-height: 1.4;\n\tcolor: inherit;\n}\n.th {\n\tcolor: inherit;\n}\n.tf {\n\tcolor: #999;\n}\n.tw {\n\tcolor: #999;\n}\n\u003c/style\u003e\n  \u003cdiv class=\"w __if _lc _sm _od _alsd _alcd _lh14 _xm _xi _ts _dm\"\u003e\n    \u003cdiv class=\"wf\"\u003e\n      \u003cdiv class=\"wc\"\u003e\n        \u003cdiv class=\"e\"\u003e\n          \u003cdiv class=\"em\"\u003e\n            \u003ca href=\"https://www.thymeleaf.org/doc/tutorials/3.1/usingthymeleaf.html#appendix-b-expression-utility-objects\" target=\"_blank\" rel=\"noopener\" data-do-not-bind-click=\"\" class=\"c\" style=\"\n                background-image: url('https://www.thymeleaf.org/doc/images/favicon.ico');\n              \"\u003e\u003c/a\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n      \u003cdiv class=\"wt\"\u003e\n        \u003cdiv class=\"t _f0 _ffsa _fsn _fwn\"\u003e\n          \u003cdiv class=\"th _f1p _fsn _fwb\"\u003e\n            \u003ca href=\"https://www.thymeleaf.org/doc/tutorials/3.1/usingthymeleaf.html#appendix-b-expression-utility-objects\" target=\"_blank\" rel=\"noopener\" class=\"thl\"\u003eTutorial: Using Thymeleaf\u003c/a\u003e\n          \u003c/div\u003e\n          \u003cdiv class=\"td\"\u003eThymeleaf is a modern server-side Java template engine for both web and standalone environments, capable of processing HTML, XML, JavaScript, CSS and even plain text.\u003c/div\u003e\n          \u003cdiv class=\"tf _f1m\"\u003e\n            \u003cdiv class=\"tc\"\u003e\n              \u003ca href=\"https://www.thymeleaf.org/doc/tutorials/3.1/usingthymeleaf.html#appendix-b-expression-utility-objects\" target=\"_blank\" rel=\"noopener\" class=\"tw _f1m\"\u003e\u003cspan class=\"twt\"\u003ehttps://www.thymeleaf.org/doc/tutorials/3.1/usingthymeleaf.html#appendix-b-expression-utility-objects\u003c/span\u003e\u003cspan class=\"twd\"\u003ehttps://www.thymeleaf.org/doc/tutorials/3.1/usingthymeleaf.html#appendix-b-expression-utility-objects\u003c/span\u003e\u003c/a\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n  \u003c/div\u003e\n\u003c/div\u003e","Properties":{"id":"20240421182506-joimeqb","updated":"20240421182506"}},{"ID":"20240421182529-0tzr0q2","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20240421182529-0tzr0q2","updated":"20240421182529"},"Children":[{"Type":"NodeText","Data":"Appendix B: Expression Utility Objects"}]},{"ID":"20240421182529-am4iehb","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240421182529-am4iehb","updated":"20240421182530"},"Children":[{"Type":"NodeText","Data":"Execution Info"}]},{"ID":"20240421182529-nqnmpq6","Type":"NodeList","ListData":{},"Properties":{"id":"20240421182529-nqnmpq6","updated":"20240421182530"},"Children":[{"ID":"20240421182529-7jutwbs","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240421182529-7jutwbs","updated":"20240421182529"},"Children":[{"ID":"20240421182529-owd3xas","Type":"NodeParagraph","Properties":{"id":"20240421182529-owd3xas","updated":"20240421182529"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"#execInfo"},{"Type":"NodeText","Data":" : expression object providing useful information about the template being processed inside Thymeleaf Standard Expressions."}]}]}]},{"ID":"20240421182529-8vsojo2","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240421182529-8vsojo2","updated":"20240421182530"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"/*\n * ======================================================================\n * See javadoc API for class org.thymeleaf.expression.ExecutionInfo\n * ======================================================================\n */\n\n/*\n * Return the name and mode of the 'leaf' template. This means the template\n * from where the events being processed were parsed. So if this piece of\n * code is not in the root template \"A\" but on a fragment being inserted\n * into \"A\" from another template called \"B\", this will return \"B\" as a\n * name, and B's mode as template mode.\n */\n${#execInfo.templateName}\n${#execInfo.templateMode}\n\n/*\n * Return the name and mode of the 'root' template. This means the template\n * that the template engine was originally asked to process. So if this\n * piece of code is not in the root template \"A\" but on a fragment being\n * inserted into \"A\" from another template called \"B\", this will still \n * return \"A\" and A's template mode.\n */\n${#execInfo.processedTemplateName}\n${#execInfo.processedTemplateMode}\n\n/*\n * Return the stacks (actually, List\u003cString\u003e or List\u003cTemplateMode\u003e) of\n * templates being processed. The first element will be the \n * 'processedTemplate' (the root one), the last one will be the 'leaf'\n * template, and in the middle all the fragments inserted in nested\n * manner to reach the leaf from the root will appear.\n */\n${#execInfo.templateNames}\n${#execInfo.templateModes}\n\n/*\n * Return the stack of templates being processed similarly (and in the\n * same order) to 'templateNames' and 'templateModes', but returning\n * a List\u003cTemplateData\u003e with the full template metadata.\n */\n${#execInfo.templateStack}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240421182529-s6yruvn","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240421182529-s6yruvn","updated":"20240421182530"},"Children":[{"Type":"NodeText","Data":"Messages"}]},{"ID":"20240421182529-yoc1fc2","Type":"NodeList","ListData":{},"Properties":{"id":"20240421182529-yoc1fc2","updated":"20240421182530"},"Children":[{"ID":"20240421182529-kg4mry2","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240421182529-kg4mry2","updated":"20240421182529"},"Children":[{"ID":"20240421182529-tvsexcj","Type":"NodeParagraph","Properties":{"id":"20240421182529-tvsexcj","updated":"20240421182529"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"#messages"},{"Type":"NodeText","Data":" : utility methods for obtaining externalized messages inside variables expressions, in the same way as they would be obtained using "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"#{...}"},{"Type":"NodeText","Data":"​ syntax."}]}]}]},{"ID":"20240421182529-sh5camu","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240421182529-sh5camu","updated":"20240421182530"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"/*\n * ======================================================================\n * See javadoc API for class org.thymeleaf.expression.Messages\n * ======================================================================\n */\n\n/*\n * Obtain externalized messages. Can receive a single key, a key plus arguments,\n * or an array/list/set of keys (in which case it will return an array/list/set of \n * externalized messages).\n * If a message is not found, a default message (like '??msgKey??') is returned.\n */\n${#messages.msg('msgKey')}\n${#messages.msg('msgKey', param1)}\n${#messages.msg('msgKey', param1, param2)}\n${#messages.msg('msgKey', param1, param2, param3)}\n${#messages.msgWithParams('msgKey', new Object[] {param1, param2, param3, param4})}\n${#messages.arrayMsg(messageKeyArray)}\n${#messages.listMsg(messageKeyList)}\n${#messages.setMsg(messageKeySet)}\n\n/*\n * Obtain externalized messages or null. Null is returned instead of a default\n * message if a message for the specified key is not found.\n */\n${#messages.msgOrNull('msgKey')}\n${#messages.msgOrNull('msgKey', param1)}\n${#messages.msgOrNull('msgKey', param1, param2)}\n${#messages.msgOrNull('msgKey', param1, param2, param3)}\n${#messages.msgOrNullWithParams('msgKey', new Object[] {param1, param2, param3, param4})}\n${#messages.arrayMsgOrNull(messageKeyArray)}\n${#messages.listMsgOrNull(messageKeyList)}\n${#messages.setMsgOrNull(messageKeySet)}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240421182529-svnfnc8","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240421182529-svnfnc8","updated":"20240421182530"},"Children":[{"Type":"NodeText","Data":"URIs/URLs"}]},{"ID":"20240421182529-tz2asp9","Type":"NodeList","ListData":{},"Properties":{"id":"20240421182529-tz2asp9","updated":"20240421182530"},"Children":[{"ID":"20240421182529-kf9v8ol","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240421182529-kf9v8ol","updated":"20240421182529"},"Children":[{"ID":"20240421182529-dvrceqn","Type":"NodeParagraph","Properties":{"id":"20240421182529-dvrceqn","updated":"20240421182529"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"#uris"},{"Type":"NodeText","Data":" : utility object for performing URI/URL operations (esp. escaping/unescaping) inside Thymeleaf Standard Expressions."}]}]}]},{"ID":"20240421182529-chdmcxn","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240421182529-chdmcxn","updated":"20240421182530"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"/*\n * ======================================================================\n * See javadoc API for class org.thymeleaf.expression.Uris\n * ======================================================================\n */\n\n/*\n * Escape/Unescape as a URI/URL path\n */\n${#uris.escapePath(uri)}\n${#uris.escapePath(uri, encoding)}\n${#uris.unescapePath(uri)}\n${#uris.unescapePath(uri, encoding)}\n\n/*\n * Escape/Unescape as a URI/URL path segment (between '/' symbols)\n */\n${#uris.escapePathSegment(uri)}\n${#uris.escapePathSegment(uri, encoding)}\n${#uris.unescapePathSegment(uri)}\n${#uris.unescapePathSegment(uri, encoding)}\n\n/*\n * Escape/Unescape as a Fragment Identifier (#frag)\n */\n${#uris.escapeFragmentId(uri)}\n${#uris.escapeFragmentId(uri, encoding)}\n${#uris.unescapeFragmentId(uri)}\n${#uris.unescapeFragmentId(uri, encoding)}\n\n/*\n * Escape/Unescape as a Query Parameter (?var=value)\n */\n${#uris.escapeQueryParam(uri)}\n${#uris.escapeQueryParam(uri, encoding)}\n${#uris.unescapeQueryParam(uri)}\n${#uris.unescapeQueryParam(uri, encoding)}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240421182529-66c6mqs","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240421182529-66c6mqs","updated":"20240421182530"},"Children":[{"Type":"NodeText","Data":"Conversions"}]},{"ID":"20240421182529-2bd73mf","Type":"NodeList","ListData":{},"Properties":{"id":"20240421182529-2bd73mf","updated":"20240421182530"},"Children":[{"ID":"20240421182529-1gujh1b","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240421182529-1gujh1b","updated":"20240421182529"},"Children":[{"ID":"20240421182529-m9odqe5","Type":"NodeParagraph","Properties":{"id":"20240421182529-m9odqe5","updated":"20240421182529"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"#conversions"},{"Type":"NodeText","Data":" : utility object that allows the execution of the "},{"Type":"NodeTextMark","TextMarkType":"em","TextMarkTextContent":"Conversion Service"},{"Type":"NodeText","Data":" at any point of a template:"}]}]}]},{"ID":"20240421182529-gaz5jky","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240421182529-gaz5jky","updated":"20240421182530"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"/*\n * ======================================================================\n * See javadoc API for class org.thymeleaf.expression.Conversions\n * ======================================================================\n */\n\n/*\n * Execute the desired conversion of the 'object' value into the\n * specified class.\n */\n${#conversions.convert(object, 'java.util.TimeZone')}\n${#conversions.convert(object, targetClass)}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240421182529-3i96yt7","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240421182529-3i96yt7","updated":"20240421182530"},"Children":[{"Type":"NodeText","Data":"Dates"}]},{"ID":"20240421182529-g4q8hh6","Type":"NodeList","ListData":{},"Properties":{"id":"20240421182529-g4q8hh6","updated":"20240421182530"},"Children":[{"ID":"20240421182529-d20s42e","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240421182529-d20s42e","updated":"20240421182529"},"Children":[{"ID":"20240421182529-0tr24hh","Type":"NodeParagraph","Properties":{"id":"20240421182529-0tr24hh","updated":"20240421182529"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"#dates"},{"Type":"NodeText","Data":" : utility methods for "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"java.util.Date"},{"Type":"NodeText","Data":"​ objects:"}]}]}]},{"ID":"20240421182529-a9smzvy","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240421182529-a9smzvy","updated":"20240421182530"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"/*\n * ======================================================================\n * See javadoc API for class org.thymeleaf.expression.Dates\n * ======================================================================\n */\n\n/*\n * Format date with the standard locale format\n * Also works with arrays, lists or sets\n */\n${#dates.format(date)}\n${#dates.arrayFormat(datesArray)}\n${#dates.listFormat(datesList)}\n${#dates.setFormat(datesSet)}\n\n/*\n * Format date with the ISO8601 format\n * Also works with arrays, lists or sets\n */\n${#dates.formatISO(date)}\n${#dates.arrayFormatISO(datesArray)}\n${#dates.listFormatISO(datesList)}\n${#dates.setFormatISO(datesSet)}\n\n/*\n * Format date with the specified pattern\n * Also works with arrays, lists or sets\n */\n${#dates.format(date, 'dd/MMM/yyyy HH:mm')}\n${#dates.arrayFormat(datesArray, 'dd/MMM/yyyy HH:mm')}\n${#dates.listFormat(datesList, 'dd/MMM/yyyy HH:mm')}\n${#dates.setFormat(datesSet, 'dd/MMM/yyyy HH:mm')}\n\n/*\n * Obtain date properties\n * Also works with arrays, lists or sets\n */\n${#dates.day(date)}                    // also arrayDay(...), listDay(...), etc.\n${#dates.month(date)}                  // also arrayMonth(...), listMonth(...), etc.\n${#dates.monthName(date)}              // also arrayMonthName(...), listMonthName(...), etc.\n${#dates.monthNameShort(date)}         // also arrayMonthNameShort(...), listMonthNameShort(...), etc.\n${#dates.year(date)}                   // also arrayYear(...), listYear(...), etc.\n${#dates.dayOfWeek(date)}              // also arrayDayOfWeek(...), listDayOfWeek(...), etc.\n${#dates.dayOfWeekName(date)}          // also arrayDayOfWeekName(...), listDayOfWeekName(...), etc.\n${#dates.dayOfWeekNameShort(date)}     // also arrayDayOfWeekNameShort(...), listDayOfWeekNameShort(...), etc.\n${#dates.hour(date)}                   // also arrayHour(...), listHour(...), etc.\n${#dates.minute(date)}                 // also arrayMinute(...), listMinute(...), etc.\n${#dates.second(date)}                 // also arraySecond(...), listSecond(...), etc.\n${#dates.millisecond(date)}            // also arrayMillisecond(...), listMillisecond(...), etc.\n\n/*\n * Create date (java.util.Date) objects from its components\n */\n${#dates.create(year,month,day)}\n${#dates.create(year,month,day,hour,minute)}\n${#dates.create(year,month,day,hour,minute,second)}\n${#dates.create(year,month,day,hour,minute,second,millisecond)}\n\n/*\n * Create a date (java.util.Date) object for the current date and time\n */\n${#dates.createNow()}\n\n${#dates.createNowForTimeZone()}\n\n/*\n * Create a date (java.util.Date) object for the current date (time set to 00:00)\n */\n${#dates.createToday()}\n\n${#dates.createTodayForTimeZone()}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240421182529-k74ptlp","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240421182529-k74ptlp","updated":"20240421182530"},"Children":[{"Type":"NodeText","Data":"Calendars"}]},{"ID":"20240421182529-g0rb9on","Type":"NodeList","ListData":{},"Properties":{"id":"20240421182529-g0rb9on","updated":"20240421182530"},"Children":[{"ID":"20240421182529-h19nv5h","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240421182529-h19nv5h","updated":"20240421182529"},"Children":[{"ID":"20240421182529-eb4lkgx","Type":"NodeParagraph","Properties":{"id":"20240421182529-eb4lkgx","updated":"20240421182529"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"#calendars"},{"Type":"NodeText","Data":" : analogous to "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"#dates"},{"Type":"NodeText","Data":"​, but for "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"java.util.Calendar"},{"Type":"NodeText","Data":"​ objects:"}]}]}]},{"ID":"20240421182529-0lofths","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240421182529-0lofths","updated":"20240421182530"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"/*\n * ======================================================================\n * See javadoc API for class org.thymeleaf.expression.Calendars\n * ======================================================================\n */\n\n/*\n * Format calendar with the standard locale format\n * Also works with arrays, lists or sets\n */\n${#calendars.format(cal)}\n${#calendars.arrayFormat(calArray)}\n${#calendars.listFormat(calList)}\n${#calendars.setFormat(calSet)}\n\n/*\n * Format calendar with the ISO8601 format\n * Also works with arrays, lists or sets\n */\n${#calendars.formatISO(cal)}\n${#calendars.arrayFormatISO(calArray)}\n${#calendars.listFormatISO(calList)}\n${#calendars.setFormatISO(calSet)}\n\n/*\n * Format calendar with the specified pattern\n * Also works with arrays, lists or sets\n */\n${#calendars.format(cal, 'dd/MMM/yyyy HH:mm')}\n${#calendars.arrayFormat(calArray, 'dd/MMM/yyyy HH:mm')}\n${#calendars.listFormat(calList, 'dd/MMM/yyyy HH:mm')}\n${#calendars.setFormat(calSet, 'dd/MMM/yyyy HH:mm')}\n\n/*\n * Obtain calendar properties\n * Also works with arrays, lists or sets\n */\n${#calendars.day(date)}                // also arrayDay(...), listDay(...), etc.\n${#calendars.month(date)}              // also arrayMonth(...), listMonth(...), etc.\n${#calendars.monthName(date)}          // also arrayMonthName(...), listMonthName(...), etc.\n${#calendars.monthNameShort(date)}     // also arrayMonthNameShort(...), listMonthNameShort(...), etc.\n${#calendars.year(date)}               // also arrayYear(...), listYear(...), etc.\n${#calendars.dayOfWeek(date)}          // also arrayDayOfWeek(...), listDayOfWeek(...), etc.\n${#calendars.dayOfWeekName(date)}      // also arrayDayOfWeekName(...), listDayOfWeekName(...), etc.\n${#calendars.dayOfWeekNameShort(date)} // also arrayDayOfWeekNameShort(...), listDayOfWeekNameShort(...), etc.\n${#calendars.hour(date)}               // also arrayHour(...), listHour(...), etc.\n${#calendars.minute(date)}             // also arrayMinute(...), listMinute(...), etc.\n${#calendars.second(date)}             // also arraySecond(...), listSecond(...), etc.\n${#calendars.millisecond(date)}        // also arrayMillisecond(...), listMillisecond(...), etc.\n\n/*\n * Create calendar (java.util.Calendar) objects from its components\n */\n${#calendars.create(year,month,day)}\n${#calendars.create(year,month,day,hour,minute)}\n${#calendars.create(year,month,day,hour,minute,second)}\n${#calendars.create(year,month,day,hour,minute,second,millisecond)}\n\n${#calendars.createForTimeZone(year,month,day,timeZone)}\n${#calendars.createForTimeZone(year,month,day,hour,minute,timeZone)}\n${#calendars.createForTimeZone(year,month,day,hour,minute,second,timeZone)}\n${#calendars.createForTimeZone(year,month,day,hour,minute,second,millisecond,timeZone)}\n\n/*\n * Create a calendar (java.util.Calendar) object for the current date and time\n */\n${#calendars.createNow()}\n\n${#calendars.createNowForTimeZone()}\n\n/*\n * Create a calendar (java.util.Calendar) object for the current date (time set to 00:00)\n */\n${#calendars.createToday()}\n\n${#calendars.createTodayForTimeZone()}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240421182529-zit5env","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240421182529-zit5env","updated":"20240421182530"},"Children":[{"Type":"NodeText","Data":"Temporals (java.time)"}]},{"ID":"20240421182529-uhmg1sd","Type":"NodeList","ListData":{},"Properties":{"id":"20240421182529-uhmg1sd","updated":"20240421182530"},"Children":[{"ID":"20240421182529-ohlm7j5","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240421182529-ohlm7j5","updated":"20240421182529"},"Children":[{"ID":"20240421182529-u2q4iam","Type":"NodeParagraph","Properties":{"id":"20240421182529-u2q4iam","updated":"20240421182529"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"#temporals"},{"Type":"NodeText","Data":" : deal with date/time objects from the JDK8+ "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"java.time"},{"Type":"NodeText","Data":"​ API:"}]}]}]},{"ID":"20240421182529-7mnaxcr","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240421182529-7mnaxcr","updated":"20240421182530"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"/*\n * ======================================================================\n * See javadoc API for class org.thymeleaf.expression.Temporals\n * ======================================================================\n */\n\n/*\n *\n * Format date with the standard locale format\n * Also works with arrays, lists or sets\n */\n${#temporals.format(temporal)}\n${#temporals.arrayFormat(temporalsArray)}\n${#temporals.listFormat(temporalsList)}\n${#temporals.setFormat(temporalsSet)}\n\n/*\n * Format date with the standard format for the provided locale\n * Also works with arrays, lists or sets\n */\n${#temporals.format(temporal, locale)}\n${#temporals.arrayFormat(temporalsArray, locale)}\n${#temporals.listFormat(temporalsList, locale)}\n${#temporals.setFormat(temporalsSet, locale)}\n\n/*\n * Format date with the specified pattern\n * SHORT, MEDIUM, LONG and FULL can also be specified to used the default java.time.format.FormatStyle patterns\n * Also works with arrays, lists or sets\n */\n${#temporals.format(temporal, 'dd/MMM/yyyy HH:mm')}\n${#temporals.format(temporal, 'dd/MMM/yyyy HH:mm', 'Europe/Paris')}\n${#temporals.arrayFormat(temporalsArray, 'dd/MMM/yyyy HH:mm')}\n${#temporals.listFormat(temporalsList, 'dd/MMM/yyyy HH:mm')}\n${#temporals.setFormat(temporalsSet, 'dd/MMM/yyyy HH:mm')}\n\n/*\n * Format date with the specified pattern and locale\n * Also works with arrays, lists or sets\n */\n${#temporals.format(temporal, 'dd/MMM/yyyy HH:mm', locale)}\n${#temporals.arrayFormat(temporalsArray, 'dd/MMM/yyyy HH:mm', locale)}\n${#temporals.listFormat(temporalsList, 'dd/MMM/yyyy HH:mm', locale)}\n${#temporals.setFormat(temporalsSet, 'dd/MMM/yyyy HH:mm', locale)}\n\n/*\n * Format date with ISO-8601 format\n * Also works with arrays, lists or sets\n */\n${#temporals.formatISO(temporal)}\n${#temporals.arrayFormatISO(temporalsArray)}\n${#temporals.listFormatISO(temporalsList)}\n${#temporals.setFormatISO(temporalsSet)}\n\n/*\n * Obtain date properties\n * Also works with arrays, lists or sets\n */\n${#temporals.day(temporal)}                    // also arrayDay(...), listDay(...), etc.\n${#temporals.month(temporal)}                  // also arrayMonth(...), listMonth(...), etc.\n${#temporals.monthName(temporal)}              // also arrayMonthName(...), listMonthName(...), etc.\n${#temporals.monthNameShort(temporal)}         // also arrayMonthNameShort(...), listMonthNameShort(...), etc.\n${#temporals.year(temporal)}                   // also arrayYear(...), listYear(...), etc.\n${#temporals.dayOfWeek(temporal)}              // also arrayDayOfWeek(...), listDayOfWeek(...), etc.\n${#temporals.dayOfWeekName(temporal)}          // also arrayDayOfWeekName(...), listDayOfWeekName(...), etc.\n${#temporals.dayOfWeekNameShort(temporal)}     // also arrayDayOfWeekNameShort(...), listDayOfWeekNameShort(...), etc.\n${#temporals.hour(temporal)}                   // also arrayHour(...), listHour(...), etc.\n${#temporals.minute(temporal)}                 // also arrayMinute(...), listMinute(...), etc.\n${#temporals.second(temporal)}                 // also arraySecond(...), listSecond(...), etc.\n${#temporals.nanosecond(temporal)}             // also arrayNanosecond(...), listNanosecond(...), etc.\n\n/*\n * Create temporal (java.time.Temporal) objects from its components\n */\n${#temporals.create(year,month,day)}                                // return a instance of java.time.LocalDate\n${#temporals.create(year,month,day,hour,minute)}                    // return a instance of java.time.LocalDateTime\n${#temporals.create(year,month,day,hour,minute,second)}             // return a instance of java.time.LocalDateTime\n${#temporals.create(year,month,day,hour,minute,second,nanosecond)}  // return a instance of java.time.LocalDateTime\n\n/*\n * Create a temporal (java.time.Temporal) object for the current date and time\n */\n${#temporals.createNow()}                      // return a instance of java.time.LocalDateTime\n${#temporals.createNowForTimeZone(zoneId)}     // return a instance of java.time.ZonedDateTime\n${#temporals.createToday()}                    // return a instance of java.time.LocalDate\n${#temporals.createTodayForTimeZone(zoneId)}   // return a instance of java.time.LocalDate\n\n/*\n * Create a temporal (java.time.Temporal) object for the provided date\n */\n${#temporals.createDate(isoDate)}              // return a instance of java.time.LocalDate\n${#temporals.createDateTime(isoDate)}          // return a instance of java.time.LocalDateTime\n${#temporals.createDate(isoDate, pattern)}     // return a instance of java.time.LocalDate\n${#temporals.createDateTime(isoDate, pattern)} // return a instance of java.time.LocalDateTime\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240421182529-dkhocyj","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240421182529-dkhocyj","updated":"20240421182530"},"Children":[{"Type":"NodeText","Data":"Numbers"}]},{"ID":"20240421182529-1g8ew3w","Type":"NodeList","ListData":{},"Properties":{"id":"20240421182529-1g8ew3w","updated":"20240421182530"},"Children":[{"ID":"20240421182529-t9wbd48","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240421182529-t9wbd48","updated":"20240421182529"},"Children":[{"ID":"20240421182529-ncwhfzg","Type":"NodeParagraph","Properties":{"id":"20240421182529-ncwhfzg","updated":"20240421182529"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"#numbers"},{"Type":"NodeText","Data":" : utility methods for number objects:"}]}]}]},{"ID":"20240421182529-49zvr3x","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240421182529-49zvr3x","updated":"20240421182530"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"/*\n * ======================================================================\n * See javadoc API for class org.thymeleaf.expression.Numbers\n * ======================================================================\n */\n\n/*\n * ==========================\n * Formatting integer numbers\n * ==========================\n */\n\n/* \n * Set minimum integer digits.\n * Also works with arrays, lists or sets\n */\n${#numbers.formatInteger(num,3)}\n${#numbers.arrayFormatInteger(numArray,3)}\n${#numbers.listFormatInteger(numList,3)}\n${#numbers.setFormatInteger(numSet,3)}\n\n\n/* \n * Set minimum integer digits and thousands separator: \n * 'POINT', 'COMMA', 'WHITESPACE', 'NONE' or 'DEFAULT' (by locale).\n * Also works with arrays, lists or sets\n */\n${#numbers.formatInteger(num,3,'POINT')}\n${#numbers.arrayFormatInteger(numArray,3,'POINT')}\n${#numbers.listFormatInteger(numList,3,'POINT')}\n${#numbers.setFormatInteger(numSet,3,'POINT')}\n\n\n/*\n * ==========================\n * Formatting decimal numbers\n * ==========================\n */\n\n/*\n * Set minimum integer digits and (exact) decimal digits.\n * Also works with arrays, lists or sets\n */\n${#numbers.formatDecimal(num,3,2)}\n${#numbers.arrayFormatDecimal(numArray,3,2)}\n${#numbers.listFormatDecimal(numList,3,2)}\n${#numbers.setFormatDecimal(numSet,3,2)}\n\n/*\n * Set minimum integer digits and (exact) decimal digits, and also decimal separator.\n * Also works with arrays, lists or sets\n */\n${#numbers.formatDecimal(num,3,2,'COMMA')}\n${#numbers.arrayFormatDecimal(numArray,3,2,'COMMA')}\n${#numbers.listFormatDecimal(numList,3,2,'COMMA')}\n${#numbers.setFormatDecimal(numSet,3,2,'COMMA')}\n\n/*\n * Set minimum integer digits and (exact) decimal digits, and also thousands and \n * decimal separator.\n * Also works with arrays, lists or sets\n */\n${#numbers.formatDecimal(num,3,'POINT',2,'COMMA')}\n${#numbers.arrayFormatDecimal(numArray,3,'POINT',2,'COMMA')}\n${#numbers.listFormatDecimal(numList,3,'POINT',2,'COMMA')}\n${#numbers.setFormatDecimal(numSet,3,'POINT',2,'COMMA')}\n\n\n/* \n * =====================\n * Formatting currencies\n * =====================\n */\n\n${#numbers.formatCurrency(num)}\n${#numbers.arrayFormatCurrency(numArray)}\n${#numbers.listFormatCurrency(numList)}\n${#numbers.setFormatCurrency(numSet)}\n\n\n/* \n * ======================\n * Formatting percentages\n * ======================\n */\n\n${#numbers.formatPercent(num)}\n${#numbers.arrayFormatPercent(numArray)}\n${#numbers.listFormatPercent(numList)}\n${#numbers.setFormatPercent(numSet)}\n\n/* \n * Set minimum integer digits and (exact) decimal digits.\n */\n${#numbers.formatPercent(num, 3, 2)}\n${#numbers.arrayFormatPercent(numArray, 3, 2)}\n${#numbers.listFormatPercent(numList, 3, 2)}\n${#numbers.setFormatPercent(numSet, 3, 2)}\n\n\n/*\n * ===============\n * Utility methods\n * ===============\n */\n\n/*\n * Create a sequence (array) of integer numbers going\n * from x to y\n */\n${#numbers.sequence(from,to)}\n${#numbers.sequence(from,to,step)}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240421182529-7rmsn58","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240421182529-7rmsn58","updated":"20240421182530"},"Children":[{"Type":"NodeText","Data":"Strings"}]},{"ID":"20240421182529-me5wd94","Type":"NodeList","ListData":{},"Properties":{"id":"20240421182529-me5wd94","updated":"20240421182530"},"Children":[{"ID":"20240421182529-vtlv41d","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240421182529-vtlv41d","updated":"20240421182529"},"Children":[{"ID":"20240421182529-58m5m0z","Type":"NodeParagraph","Properties":{"id":"20240421182529-58m5m0z","updated":"20240421182529"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"#strings"},{"Type":"NodeText","Data":" : utility methods for "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"String"},{"Type":"NodeText","Data":"​ objects:"}]}]}]},{"ID":"20240421182529-4smf6sw","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240421182529-4smf6sw","updated":"20240421182530"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"/*\n * ======================================================================\n * See javadoc API for class org.thymeleaf.expression.Strings\n * ======================================================================\n */\n\n/*\n * Null-safe toString()\n */\n${#strings.toString(obj)}                           // also array*, list* and set*\n\n/*\n * Check whether a String is empty (or null). Performs a trim() operation before check\n * Also works with arrays, lists or sets\n */\n${#strings.isEmpty(name)}\n${#strings.arrayIsEmpty(nameArr)}\n${#strings.listIsEmpty(nameList)}\n${#strings.setIsEmpty(nameSet)}\n\n/*\n * Perform an 'isEmpty()' check on a string and return it if false, defaulting to\n * another specified string if true.\n * Also works with arrays, lists or sets\n */\n${#strings.defaultString(text,default)}\n${#strings.arrayDefaultString(textArr,default)}\n${#strings.listDefaultString(textList,default)}\n${#strings.setDefaultString(textSet,default)}\n\n/*\n * Check whether a fragment is contained in a String\n * Also works with arrays, lists or sets\n */\n${#strings.contains(name,'ez')}                     // also array*, list* and set*\n${#strings.containsIgnoreCase(name,'ez')}           // also array*, list* and set*\n\n/*\n * Check whether a String starts or ends with a fragment\n * Also works with arrays, lists or sets\n */\n${#strings.startsWith(name,'Don')}                  // also array*, list* and set*\n${#strings.endsWith(name,endingFragment)}           // also array*, list* and set*\n\n/*\n * Substring-related operations\n * Also works with arrays, lists or sets\n */\n${#strings.indexOf(name,frag)}                      // also array*, list* and set*\n${#strings.substring(name,3,5)}                     // also array*, list* and set*\n${#strings.substringAfter(name,prefix)}             // also array*, list* and set*\n${#strings.substringBefore(name,suffix)}            // also array*, list* and set*\n${#strings.replace(name,'las','ler')}               // also array*, list* and set*\n\n/*\n * Append and prepend\n * Also works with arrays, lists or sets\n */\n${#strings.prepend(str,prefix)}                     // also array*, list* and set*\n${#strings.append(str,suffix)}                      // also array*, list* and set*\n\n/*\n * Change case\n * Also works with arrays, lists or sets\n */\n${#strings.toUpperCase(name)}                       // also array*, list* and set*\n${#strings.toLowerCase(name)}                       // also array*, list* and set*\n\n/*\n * Split and join\n */\n${#strings.arrayJoin(namesArray,',')}\n${#strings.listJoin(namesList,',')}\n${#strings.setJoin(namesSet,',')}\n${#strings.arraySplit(namesStr,',')}                // returns String[]\n${#strings.listSplit(namesStr,',')}                 // returns List\u003cString\u003e\n${#strings.setSplit(namesStr,',')}                  // returns Set\u003cString\u003e\n\n/*\n * Trim\n * Also works with arrays, lists or sets\n */\n${#strings.trim(str)}                               // also array*, list* and set*\n\n/*\n * Compute length\n * Also works with arrays, lists or sets\n */\n${#strings.length(str)}                             // also array*, list* and set*\n\n/*\n * Abbreviate text making it have a maximum size of n. If text is bigger, it\n * will be clipped and finished in \"...\"\n * Also works with arrays, lists or sets\n */\n${#strings.abbreviate(str,10)}                      // also array*, list* and set*\n\n/*\n * Convert the first character to upper-case (and vice-versa)\n */\n${#strings.capitalize(str)}                         // also array*, list* and set*\n${#strings.unCapitalize(str)}                       // also array*, list* and set*\n\n/*\n * Convert the first character of every word to upper-case\n */\n${#strings.capitalizeWords(str)}                    // also array*, list* and set*\n${#strings.capitalizeWords(str,delimiters)}         // also array*, list* and set*\n\n/*\n * Escape the string\n */\n${#strings.escapeXml(str)}                          // also array*, list* and set*\n${#strings.escapeJava(str)}                         // also array*, list* and set*\n${#strings.escapeJavaScript(str)}                   // also array*, list* and set*\n${#strings.unescapeJava(str)}                       // also array*, list* and set*\n${#strings.unescapeJavaScript(str)}                 // also array*, list* and set*\n\n/*\n * Null-safe comparison and concatenation\n */\n${#strings.equals(first, second)}\n${#strings.equalsIgnoreCase(first, second)}\n${#strings.concat(values...)}\n${#strings.concatReplaceNulls(nullValue, values...)}\n\n/*\n * Random\n */\n${#strings.randomAlphanumeric(count)}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240421182529-3ue57xt","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240421182529-3ue57xt","updated":"20240421182530"},"Children":[{"Type":"NodeText","Data":"Objects"}]},{"ID":"20240421182529-2xtfwvk","Type":"NodeList","ListData":{},"Properties":{"id":"20240421182529-2xtfwvk","updated":"20240421182530"},"Children":[{"ID":"20240421182529-5hbxc2t","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240421182529-5hbxc2t","updated":"20240421182529"},"Children":[{"ID":"20240421182529-3tz0zaf","Type":"NodeParagraph","Properties":{"id":"20240421182529-3tz0zaf","updated":"20240421182529"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"#objects"},{"Type":"NodeText","Data":" : utility methods for objects in general"}]}]}]},{"ID":"20240421182529-tngxa7a","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240421182529-tngxa7a","updated":"20240421182530"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"/*\n * ======================================================================\n * See javadoc API for class org.thymeleaf.expression.Objects\n * ======================================================================\n */\n\n/*\n * Return obj if it is not null, and default otherwise\n * Also works with arrays, lists or sets\n */\n${#objects.nullSafe(obj,default)}\n${#objects.arrayNullSafe(objArray,default)}\n${#objects.listNullSafe(objList,default)}\n${#objects.setNullSafe(objSet,default)}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240421182529-jgejzwz","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240421182529-jgejzwz","updated":"20240421182530"},"Children":[{"Type":"NodeText","Data":"Booleans"}]},{"ID":"20240421182529-izo30rq","Type":"NodeList","ListData":{},"Properties":{"id":"20240421182529-izo30rq","updated":"20240421182530"},"Children":[{"ID":"20240421182529-nc03ps4","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240421182529-nc03ps4","updated":"20240421182529"},"Children":[{"ID":"20240421182529-0m91it0","Type":"NodeParagraph","Properties":{"id":"20240421182529-0m91it0","updated":"20240421182529"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"#bools"},{"Type":"NodeText","Data":" : utility methods for boolean evaluation"}]}]}]},{"ID":"20240421182529-xkpeplw","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240421182529-xkpeplw","updated":"20240421182530"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"/*\n * ======================================================================\n * See javadoc API for class org.thymeleaf.expression.Bools\n * ======================================================================\n */\n\n/*\n * Evaluate a condition in the same way that it would be evaluated in a th:if tag\n * (see conditional evaluation chapter afterwards).\n * Also works with arrays, lists or sets\n */\n${#bools.isTrue(obj)}\n${#bools.arrayIsTrue(objArray)}\n${#bools.listIsTrue(objList)}\n${#bools.setIsTrue(objSet)}\n\n/*\n * Evaluate with negation\n * Also works with arrays, lists or sets\n */\n${#bools.isFalse(cond)}\n${#bools.arrayIsFalse(condArray)}\n${#bools.listIsFalse(condList)}\n${#bools.setIsFalse(condSet)}\n\n/*\n * Evaluate and apply AND operator\n * Receive an array, a list or a set as parameter\n */\n${#bools.arrayAnd(condArray)}\n${#bools.listAnd(condList)}\n${#bools.setAnd(condSet)}\n\n/*\n * Evaluate and apply OR operator\n * Receive an array, a list or a set as parameter\n */\n${#bools.arrayOr(condArray)}\n${#bools.listOr(condList)}\n${#bools.setOr(condSet)}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240421182529-p3gb9m4","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240421182529-p3gb9m4","updated":"20240421182530"},"Children":[{"Type":"NodeText","Data":"Arrays"}]},{"ID":"20240421182529-iai8rni","Type":"NodeList","ListData":{},"Properties":{"id":"20240421182529-iai8rni","updated":"20240421182530"},"Children":[{"ID":"20240421182529-x5nhkku","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240421182529-x5nhkku","updated":"20240421182529"},"Children":[{"ID":"20240421182529-f2tz03j","Type":"NodeParagraph","Properties":{"id":"20240421182529-f2tz03j","updated":"20240421182529"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"#arrays"},{"Type":"NodeText","Data":" : utility methods for arrays"}]}]}]},{"ID":"20240421182529-67th41l","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240421182529-67th41l","updated":"20240421182530"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"/*\n * ======================================================================\n * See javadoc API for class org.thymeleaf.expression.Arrays\n * ======================================================================\n */\n\n/*\n * Converts to array, trying to infer array component class.\n * Note that if resulting array is empty, or if the elements\n * of the target object are not all of the same class,\n * this method will return Object[].\n */\n${#arrays.toArray(object)}\n\n/*\n * Convert to arrays of the specified component class.\n */\n${#arrays.toStringArray(object)}\n${#arrays.toIntegerArray(object)}\n${#arrays.toLongArray(object)}\n${#arrays.toDoubleArray(object)}\n${#arrays.toFloatArray(object)}\n${#arrays.toBooleanArray(object)}\n\n/*\n * Compute length\n */\n${#arrays.length(array)}\n\n/*\n * Check whether array is empty\n */\n${#arrays.isEmpty(array)}\n\n/*\n * Check if element or elements are contained in array\n */\n${#arrays.contains(array, element)}\n${#arrays.containsAll(array, elements)}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240421182529-wbwf1nd","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240421182529-wbwf1nd","updated":"20240421182530"},"Children":[{"Type":"NodeText","Data":"Lists"}]},{"ID":"20240421182529-izh9yg6","Type":"NodeList","ListData":{},"Properties":{"id":"20240421182529-izh9yg6","updated":"20240421182530"},"Children":[{"ID":"20240421182529-9wbv3dj","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240421182529-9wbv3dj","updated":"20240421182529"},"Children":[{"ID":"20240421182529-683epx3","Type":"NodeParagraph","Properties":{"id":"20240421182529-683epx3","updated":"20240421182529"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"#lists"},{"Type":"NodeText","Data":" : utility methods for lists"}]}]}]},{"ID":"20240421182529-u96shhr","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240421182529-u96shhr","updated":"20240421182530"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"/*\n * ======================================================================\n * See javadoc API for class org.thymeleaf.expression.Lists\n * ======================================================================\n */\n\n/*\n * Converts to list\n */\n${#lists.toList(object)}\n\n/*\n * Compute size\n */\n${#lists.size(list)}\n\n/*\n * Check whether list is empty\n */\n${#lists.isEmpty(list)}\n\n/*\n * Check if element or elements are contained in list\n */\n${#lists.contains(list, element)}\n${#lists.containsAll(list, elements)}\n\n/*\n * Sort a copy of the given list. The members of the list must implement\n * comparable or you must define a comparator.\n */\n${#lists.sort(list)}\n${#lists.sort(list, comparator)}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240421182529-o5zmm97","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240421182529-o5zmm97","updated":"20240421182530"},"Children":[{"Type":"NodeText","Data":"Sets"}]},{"ID":"20240421182529-za5thsk","Type":"NodeList","ListData":{},"Properties":{"id":"20240421182529-za5thsk","updated":"20240421182530"},"Children":[{"ID":"20240421182529-0kr14p0","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240421182529-0kr14p0","updated":"20240421182529"},"Children":[{"ID":"20240421182529-9zugexv","Type":"NodeParagraph","Properties":{"id":"20240421182529-9zugexv","updated":"20240421182529"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"#sets"},{"Type":"NodeText","Data":" : utility methods for sets"}]}]}]},{"ID":"20240421182529-mgwibb4","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240421182529-mgwibb4","updated":"20240421182530"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"/*\n * ======================================================================\n * See javadoc API for class org.thymeleaf.expression.Sets\n * ======================================================================\n */\n\n/*\n * Converts to set\n */\n${#sets.toSet(object)}\n\n/*\n * Compute size\n */\n${#sets.size(set)}\n\n/*\n * Check whether set is empty\n */\n${#sets.isEmpty(set)}\n\n/*\n * Check if element or elements are contained in set\n */\n${#sets.contains(set, element)}\n${#sets.containsAll(set, elements)}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240421182529-zs6cmje","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240421182529-zs6cmje","updated":"20240421182530"},"Children":[{"Type":"NodeText","Data":"Maps"}]},{"ID":"20240421182529-r16cro8","Type":"NodeList","ListData":{},"Properties":{"id":"20240421182529-r16cro8","updated":"20240421182530"},"Children":[{"ID":"20240421182529-9vlo3sl","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240421182529-9vlo3sl","updated":"20240421182529"},"Children":[{"ID":"20240421182529-p9cafde","Type":"NodeParagraph","Properties":{"id":"20240421182529-p9cafde","updated":"20240421182529"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"#maps"},{"Type":"NodeText","Data":" : utility methods for maps"}]}]}]},{"ID":"20240421182529-xxus1q5","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240421182529-xxus1q5","updated":"20240421182530"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"/*\n * ======================================================================\n * See javadoc API for class org.thymeleaf.expression.Maps\n * ======================================================================\n */\n\n/*\n * Compute size\n */\n${#maps.size(map)}\n\n/*\n * Check whether map is empty\n */\n${#maps.isEmpty(map)}\n\n/*\n * Check if key/s or value/s are contained in maps\n */\n${#maps.containsKey(map, key)}\n${#maps.containsAllKeys(map, keys)}\n${#maps.containsValue(map, value)}\n${#maps.containsAllValues(map, value)}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240421182529-axlg9iw","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240421182529-axlg9iw","updated":"20240421182530"},"Children":[{"Type":"NodeText","Data":"Aggregates"}]},{"ID":"20240421182529-0dzg5f5","Type":"NodeList","ListData":{},"Properties":{"id":"20240421182529-0dzg5f5","updated":"20240421182530"},"Children":[{"ID":"20240421182529-6t85664","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240421182529-6t85664","updated":"20240421182529"},"Children":[{"ID":"20240421182529-18urz1a","Type":"NodeParagraph","Properties":{"id":"20240421182529-18urz1a","updated":"20240421182529"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"#aggregates"},{"Type":"NodeText","Data":" : utility methods for creating aggregates on arrays or collections"}]}]}]},{"ID":"20240421182529-r72vg8m","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240421182529-r72vg8m","updated":"20240421182530"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"/*\n * ======================================================================\n * See javadoc API for class org.thymeleaf.expression.Aggregates\n * ======================================================================\n */\n\n/*\n * Compute sum. Returns null if array or collection is empty\n */\n${#aggregates.sum(array)}\n${#aggregates.sum(collection)}\n\n/*\n * Compute average. Returns null if array or collection is empty\n */\n${#aggregates.avg(array)}\n${#aggregates.avg(collection)}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240421182529-bjtrkai","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240421182529-bjtrkai","updated":"20240421182530"},"Children":[{"Type":"NodeText","Data":"IDs"}]},{"ID":"20240421182529-fim2wds","Type":"NodeList","ListData":{},"Properties":{"id":"20240421182529-fim2wds","updated":"20240421182530"},"Children":[{"ID":"20240421182529-13z53kv","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240421182529-13z53kv","updated":"20240421182529"},"Children":[{"ID":"20240421182529-oru5p1h","Type":"NodeParagraph","Properties":{"id":"20240421182529-oru5p1h","updated":"20240421182529"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"#ids"},{"Type":"NodeText","Data":" : utility methods for dealing with "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"id"},{"Type":"NodeText","Data":"​ attributes that might be repeated (for example, as a result of an iteration)."}]}]}]},{"ID":"20240421182529-cjvmhv9","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240421182529-cjvmhv9","updated":"20240421182530"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"/*\n * ======================================================================\n * See javadoc API for class org.thymeleaf.expression.Ids\n * ======================================================================\n */\n\n/*\n * Normally used in th:id attributes, for appending a counter to the id attribute value\n * so that it remains unique even when involved in an iteration process.\n */\n${#ids.seq('someId')}\n\n/*\n * Normally used in th:for attributes in \u003clabel\u003e tags, so that these labels can refer to Ids\n * generated by means if the #ids.seq(...) function.\n *\n * Depending on whether the \u003clabel\u003e goes before or after the element with the #ids.seq(...)\n * function, the \"next\" (label goes before \"seq\") or the \"prev\" function (label goes after \n * \"seq\") function should be called.\n */\n${#ids.next('someId')}\n${#ids.prev('someId')}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}